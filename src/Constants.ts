/**
 * @group Constants
 * @remarks List all errors generated by the backend with their descriptions
 */
export const Error = {
  NO_ACTIVITY: "Session closed due to no activity.",
  WRONG_CREDENTIALS: "Application credentials are invalid. Please check or regenerate your application key and hmackey.",
  TOO_OLD: "Session is too old. Max Session Duration Reached.",
  UNKNOW: "An unknown error has occurred.",
  ABNORMAL_CLOSURE: "MyScript recognition server is not reachable.",
  CANT_ESTABLISH: "Unable to establish a connection to MyScript recognition server. Check the host and your connectivity.",
  GOING_AWAY: "MyScript recognition server is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.",
  PROTOCOL_ERROR: "MyScript recognition server terminated the connection due to a protocol error.",
  UNSUPPORTED_DATA: "MyScript recognition server terminated the connection because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)",
  INVALID_FRAME_PAULOAD: "MyScript recognition server terminated the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).",
  POLICY_VIOLATION: "MyScript recognition server terminated the connection because it received a message that violates its policy.",
  MESSAGE_TOO_BIG: "MyScript recognition server terminated the connection because a data frame was received that is too large.",
  INTERNAL_ERROR: "MyScript recognition server terminated the connection because it encountered an unexpected condition that prevented it from fulfilling the request.",
  SERVICE_RESTART: "MyScript recognition server terminated the connection because it is restarting.",
  TRY_AGAIN: "MyScript recognition server terminated the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients.",
  BAD_GATEWAY: "MyScript recognition server was acting as a gateway or proxy and received an invalid response from the upstream server.",
  TLS_HANDSHAKE: "MyScript recognition server connection was closed due to a failure to perform a TLS handshake"
} as const

/**
 * @group Constants
 * @group Event
 * @description Lists all events that can be listened to on the editor or DOM element
 */
export const EventType = {
  /**
   * @description event emitted when history has changed i.e. the context of undo-redo
   */
  CHANGED: "changed",
  /**
   * @description event emitted when clearing is complete
   */
  CLEARED: "cleared",
  /**
   * @description event emitted after the conversion is complete
   */
  CONVERTED: "converted",
  /**
   * @description event emitted when the editor encounters an error
   */
  ERROR: "error",
  /**
   * @description event emitted on click on pointer events
   */
  POINTEREVENTS: "pointer_events",
  /**
   * @description event emitted after the end of the export
   */
  EXPORTED: "exported",
  /**
   * @description event emitted after the end of the import
   */
  IMPORTED: "imported",
  /**
   * @description event emitted when the server is idle after a job
   */
  IDLE: "idle",
  /**
   * @description event emitted after full editor initialization
   */
  LOADED: "loaded",
} as const

/**
 * @group Constants
 * @group Event
 * @description Lists all internal library events
 */
export const InternalEventType = {
  SVG_PATCH: "internal_svg_patch",
  EXPORTED: "internal_exported",
  CLEAR_MESSAGE: "internal_clear_message",
  ERROR: "internal_error",
  NOTIF: "internal_notif",
  IMPORT_JIIX: "internal_import_jiix",
  CONVERT: "internal_convert",
  CLEAR: "internal_clear",
  CONTEXT_CHANGE: "internal_context_change",
  IDLE: "internal_idle",
  WS_CLOSED: "internal_websocket_closed"
} as const

/**
 * @group Editor
 * @group Constants
 * @group Model/Export
 * @description List all supported MIME types for export. Please note, the MIME types supported depend on the recognition type configured
 */
export const enum ExportType {
  JIIX = "application/vnd.myscript.jiix",
  TEXT = "text/plain",
  LATEX = "application/x-latex",
  MATHML = "application/mathml+xml",
  SVG = "image/svg+xml",
  OFFICE_DOCUMENT = "application/vnd.openxmlformats-officedocument.presentationml.presentation"
}

/**
 * @group Constants
 * @group Editor
 * @description List the possibilities of interactions
 */
export const enum Intention
{
  Write = "write",
  Erase = "erase",
}

/**
 * @group Constants
 * @group Logger
 */
export const enum LoggerLevel
{
  DEBUG = "1",
  INFO = "2",
  WARN = "3",
  ERROR = "4"
}

/**
 * @group Constants
 * @group Logger
 */
export const enum LoggerClass
{
  EDITOR = "EDITOR",
  RECOGNIZER = "RECOGNIZER",
  GRABBER = "GRABBER",
  BEHAVIORS = "BEHAVIORS",
  CONFIGURATION = "CONFIGURATION",
  PUBLIC_EVENT = "PUBLIC_EVENT",
  MODEL = "MODEL",
  RENDERER = "RENDERER",
  SMARTGUIDE = "SMARTGUIDE",
  STYLE = "STYLE",
  UNDO_REDO = "UNDO_REDO",
  STROKE = "STROKE",
  INTERNAL_EVENT = "INTERNAL_EVENT"
}
