/**
 * @group Error
 * @remarks List all errors generated by the backend with their descriptions
 */
export const Error = {
  WRONG_CREDENTIALS: "Application credentials are invalid. Please check or regenerate your application key and hmackey.",
  UNKNOW: "An unknown error has occurred.",
  ABNORMAL_CLOSURE: "MyScript recognition server is not reachable. Please reload once you are connected.",
  CANT_ESTABLISH: "Unable to establish a connection to MyScript recognition server. Check the host and your connectivity.",
  GOING_AWAY: "MyScript recognition server is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.",
  PROTOCOL_ERROR: "MyScript recognition server terminated the connection due to a protocol error.",
  UNSUPPORTED_DATA: "MyScript recognition server terminated the connection because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)",
  INVALID_FRAME_PAULOAD: "MyScript recognition server terminated the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).",
  POLICY_VIOLATION: "MyScript recognition server terminated the connection because it received a message that violates its policy.",
  MESSAGE_TOO_BIG: "MyScript recognition server terminated the connection because a data frame was received that is too large.",
  INTERNAL_ERROR: "MyScript recognition server terminated the connection because it encountered an unexpected condition that prevented it from fulfilling the request.",
  SERVICE_RESTART: "MyScript recognition server terminated the connection because it is restarting.",
  TRY_AGAIN: "MyScript recognition server terminated the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients.",
  BAD_GATEWAY: "MyScript recognition server was acting as a gateway or proxy and received an invalid response from the upstream server.",
  TLS_HANDSHAKE: "MyScript recognition server connection was closed due to a failure to perform a TLS handshake"
} as const

/**
 * @event
 * @remarks Lists all events that can be listened to on the editor or DOM element
 */
export const EventType = {
  /**
   * @event
   * event emitted when history has changed i.e. the context of undo-redo
   */
  CHANGED: "changed",
  /**
   * @event
   * event emitted on click on clear button from the Smartguide
   */
  CLEAR: "clear",
  /**
   * @event
   * event emitted when clearing is complete
   */
  CLEARED: "cleared",
  /**
   * @event
   * event emitted on click on convert button from the Smartguide
   */
  CONVERT: "convert",
  /**
   * @event
   * event emitted after the conversion is complete
   */
  CONVERTED: "converted",
  /**
   * @event
   * event emitted when the editor encounters an error
   */
  ERROR: "error",
  /**
   * @event
   * event emitted after the end of the export
   */
  EXPORTED: "exported",
  /**
   * @event
   * event emitted on click on candidate element from the Smartguide
   */
  IMPORT: "import",
  /**
   * @event
   * event emitted after the end of the import
   */
  IMPORTED: "imported",
  /**
   * @event
   * event emitted when the server is idle after a job
   */
  IDLE: "idle",
  /**
   * @event
   * event emitted after full editor initialization
   */
  LOADED: "loaded",
  /**
   * @event
   * event emitted to notify the user, for example after clicking the Smartguide copy button
   */
  NOTIF: "notif",
  /**
   * @event
   * event emitted after rendering is complete
   */
  RENDERED: "rendered",
} as const

/**
 * @internal
 */
export const WSEventType = {
  PART_CHANGE: "ws_part_change",
  CONTENT_CHANGE: "ws_content_change",
  SVG_PATCH: "ws_svg_patch",
  EXPORTED: "ws_exported",
  ERROR: "ws_error",
  INITIALIZED: "ws_initialized",
  CONNECTED: "ws_connected",
  CONNECTION_ACTIVE: "connection_active",
  DISCONNECTED: "ws_disconnected",
} as const

/**
 * @internal
 */
export const WSMessage = {
  CLOSE_RECOGNIZER: "CLOSE_RECOGNIZER"
}

/**
 * @group Export
 * @remarks List all supported MIME types for export.
 * @remarks Attention, the MIME types supported depend on the {@link TRecognitionType | type of recognition}
 */
export const Exports = {
  JIIX: "application/vnd.myscript.jiix",
  TEXT: "text/plain",
  LATEX: "application/x-latex",
  MATHML: "application/mathml+xml",
  SVG: "image/svg+xml",
  OFFICE_DOCUMENT: "application/vnd.openxmlformats-officedocument.presentationml.presentation"
} as const

/**
 * @group Constants
 */
export default {
  Error,
  EventType,
  Exports
} as const
