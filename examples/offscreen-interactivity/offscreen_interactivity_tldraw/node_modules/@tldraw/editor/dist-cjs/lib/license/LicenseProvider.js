"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var LicenseProvider_exports = {};
__export(LicenseProvider_exports, {
  LicenseContext: () => LicenseContext,
  LicenseProvider: () => LicenseProvider,
  useLicenseContext: () => useLicenseContext
});
module.exports = __toCommonJS(LicenseProvider_exports);
var import_jsx_runtime = require("react/jsx-runtime");
var import_react = require("react");
var import_LicenseManager = require("./LicenseManager");
const LicenseContext = (0, import_react.createContext)({});
const useLicenseContext = () => (0, import_react.useContext)(LicenseContext);
function LicenseProvider({
  licenseKey,
  children
}) {
  const [licenseManager] = (0, import_react.useState)(() => new import_LicenseManager.LicenseManager(licenseKey));
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(LicenseContext.Provider, { value: licenseManager, children });
}
//# sourceMappingURL=LicenseProvider.js.map
