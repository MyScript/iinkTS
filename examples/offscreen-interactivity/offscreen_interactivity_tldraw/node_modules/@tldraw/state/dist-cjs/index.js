"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var src_exports = {};
__export(src_exports, {
  ArraySet: () => import_ArraySet.ArraySet,
  EMPTY_ARRAY: () => import_helpers2.EMPTY_ARRAY,
  EffectScheduler: () => import_EffectScheduler.EffectScheduler,
  RESET_VALUE: () => import_types.RESET_VALUE,
  UNINITIALIZED: () => import_Computed.UNINITIALIZED,
  atom: () => import_Atom.atom,
  computed: () => import_Computed.computed,
  getComputedInstance: () => import_Computed.getComputedInstance,
  isAtom: () => import_Atom.isAtom,
  isSignal: () => import_isSignal.isSignal,
  isUninitialized: () => import_Computed.isUninitialized,
  react: () => import_EffectScheduler.react,
  reactor: () => import_EffectScheduler.reactor,
  transact: () => import_transactions.transact,
  transaction: () => import_transactions.transaction,
  unsafe__withoutCapture: () => import_capture.unsafe__withoutCapture,
  whyAmIRunning: () => import_capture.whyAmIRunning,
  withDiff: () => import_Computed.withDiff
});
module.exports = __toCommonJS(src_exports);
var import_utils = require("@tldraw/utils");
var import_helpers = require("./lib/helpers");
var import_ArraySet = require("./lib/ArraySet");
var import_Atom = require("./lib/Atom");
var import_Computed = require("./lib/Computed");
var import_EffectScheduler = require("./lib/EffectScheduler");
var import_capture = require("./lib/capture");
var import_helpers2 = require("./lib/helpers");
var import_isSignal = require("./lib/isSignal");
var import_transactions = require("./lib/transactions");
var import_types = require("./lib/types");
const currentApiVersion = 1;
const actualApiVersion = (0, import_helpers.singleton)("apiVersion", () => currentApiVersion);
if (actualApiVersion !== currentApiVersion) {
  throw new Error(
    `You have multiple incompatible versions of @tldraw/state in your app. Please deduplicate the package.`
  );
}
(0, import_utils.registerTldrawLibraryVersion)(
  "@tldraw/state",
  "3.7.0",
  "cjs"
);
//# sourceMappingURL=index.js.map
