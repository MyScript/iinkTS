{
  "version": 3,
  "sources": ["../../../src/lib/media/gif.ts"],
  "sourcesContent": ["/*!\n * MIT License\n * Modified code originally from <https://github.com/qzb/is-animated>\n * Copyright (c) 2016 J\u00F3zef Soko\u0142owski <j.k.sokolowski@gmail.com>\n */\n\n/** Returns total length of data blocks sequence */\nfunction getDataBlocksLength(buffer: Uint8Array, offset: number): number {\n\tlet length = 0\n\n\twhile (buffer[offset + length]) {\n\t\tlength += buffer[offset + length] + 1\n\t}\n\n\treturn length + 1\n}\n\n/**\n * Checks if buffer contains GIF image\n *\n * @public\n */\nexport function isGIF(buffer: ArrayBuffer): boolean {\n\tconst enc = new TextDecoder('ascii')\n\tconst header = enc.decode(buffer.slice(0, 3))\n\treturn header === 'GIF'\n}\n\n/**\n * Checks if buffer contains animated GIF image\n *\n * @public\n */\nexport function isGifAnimated(buffer: ArrayBuffer): boolean {\n\tconst view = new Uint8Array(buffer)\n\tlet hasColorTable, colorTableSize\n\tlet offset = 0\n\tlet imagesCount = 0\n\n\t// Check if this is this image has valid GIF header.\n\t// If not return false. Chrome, FF and IE doesn't handle GIFs with invalid version.\n\tif (!isGIF(buffer)) {\n\t\treturn false\n\t}\n\n\t// Skip header, logical screen descriptor and global color table\n\n\thasColorTable = view[10] & 0x80 // 0b10000000\n\tcolorTableSize = view[10] & 0x07 // 0b00000111\n\n\toffset += 6 // skip header\n\toffset += 7 // skip logical screen descriptor\n\toffset += hasColorTable ? 3 * Math.pow(2, colorTableSize + 1) : 0 // skip global color table\n\n\t// Find if there is more than one image descriptor\n\n\twhile (imagesCount < 2 && offset < view.length) {\n\t\tswitch (view[offset]) {\n\t\t\t// Image descriptor block. According to specification there could be any\n\t\t\t// number of these blocks (even zero). When there is more than one image\n\t\t\t// descriptor browsers will display animation (they shouldn't when there\n\t\t\t// is no delays defined, but they do it anyway).\n\t\t\tcase 0x2c:\n\t\t\t\timagesCount += 1\n\n\t\t\t\thasColorTable = view[offset + 9] & 0x80 // 0b10000000\n\t\t\t\tcolorTableSize = view[offset + 9] & 0x07 // 0b00000111\n\n\t\t\t\toffset += 10 // skip image descriptor\n\t\t\t\toffset += hasColorTable ? 3 * Math.pow(2, colorTableSize + 1) : 0 // skip local color table\n\t\t\t\toffset += getDataBlocksLength(view, offset + 1) + 1 // skip image data\n\n\t\t\t\tbreak\n\n\t\t\t// Skip all extension blocks. In theory this \"plain text extension\" blocks\n\t\t\t// could be frames of animation, but no browser renders them.\n\t\t\tcase 0x21:\n\t\t\t\toffset += 2 // skip introducer and label\n\t\t\t\toffset += getDataBlocksLength(view, offset) // skip this block and following data blocks\n\n\t\t\t\tbreak\n\n\t\t\t// Stop processing on trailer block,\n\t\t\t// all data after this point will is ignored by decoders\n\t\t\tcase 0x3b:\n\t\t\t\toffset = view.length // fast forward to end of buffer\n\t\t\t\tbreak\n\n\t\t\t// Oops! This GIF seems to be invalid\n\t\t\tdefault:\n\t\t\t\t// fast forward to end of buffer\n\t\t\t\toffset = view.length\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn imagesCount > 1\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,SAAS,oBAAoB,QAAoB,QAAwB;AACxE,MAAI,SAAS;AAEb,SAAO,OAAO,SAAS,MAAM,GAAG;AAC/B,cAAU,OAAO,SAAS,MAAM,IAAI;AAAA,EACrC;AAEA,SAAO,SAAS;AACjB;AAOO,SAAS,MAAM,QAA8B;AACnD,QAAM,MAAM,IAAI,YAAY,OAAO;AACnC,QAAM,SAAS,IAAI,OAAO,OAAO,MAAM,GAAG,CAAC,CAAC;AAC5C,SAAO,WAAW;AACnB;AAOO,SAAS,cAAc,QAA8B;AAC3D,QAAM,OAAO,IAAI,WAAW,MAAM;AAClC,MAAI,eAAe;AACnB,MAAI,SAAS;AACb,MAAI,cAAc;AAIlB,MAAI,CAAC,MAAM,MAAM,GAAG;AACnB,WAAO;AAAA,EACR;AAIA,kBAAgB,KAAK,EAAE,IAAI;AAC3B,mBAAiB,KAAK,EAAE,IAAI;AAE5B,YAAU;AACV,YAAU;AACV,YAAU,gBAAgB,IAAI,KAAK,IAAI,GAAG,iBAAiB,CAAC,IAAI;AAIhE,SAAO,cAAc,KAAK,SAAS,KAAK,QAAQ;AAC/C,YAAQ,KAAK,MAAM,GAAG;AAAA,MAKrB,KAAK;AACJ,uBAAe;AAEf,wBAAgB,KAAK,SAAS,CAAC,IAAI;AACnC,yBAAiB,KAAK,SAAS,CAAC,IAAI;AAEpC,kBAAU;AACV,kBAAU,gBAAgB,IAAI,KAAK,IAAI,GAAG,iBAAiB,CAAC,IAAI;AAChE,kBAAU,oBAAoB,MAAM,SAAS,CAAC,IAAI;AAElD;AAAA,MAID,KAAK;AACJ,kBAAU;AACV,kBAAU,oBAAoB,MAAM,MAAM;AAE1C;AAAA,MAID,KAAK;AACJ,iBAAS,KAAK;AACd;AAAA,MAGD;AAEC,iBAAS,KAAK;AACd;AAAA,IACF;AAAA,EACD;AAEA,SAAO,cAAc;AACtB;",
  "names": []
}
