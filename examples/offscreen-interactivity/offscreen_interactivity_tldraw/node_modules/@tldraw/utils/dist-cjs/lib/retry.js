"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var retry_exports = {};
__export(retry_exports, {
  retry: () => retry
});
module.exports = __toCommonJS(retry_exports);
var import_control = require("./control");
async function retry(fn, {
  attempts = 3,
  waitDuration = 1e3,
  abortSignal,
  matchError
} = {}) {
  let error = null;
  for (let i = 0; i < attempts; i++) {
    if (abortSignal?.aborted) throw new Error("aborted");
    try {
      return await fn();
    } catch (e) {
      if (matchError && !matchError(e)) throw e;
      error = e;
      await (0, import_control.sleep)(waitDuration);
    }
  }
  throw error;
}
//# sourceMappingURL=retry.js.map
