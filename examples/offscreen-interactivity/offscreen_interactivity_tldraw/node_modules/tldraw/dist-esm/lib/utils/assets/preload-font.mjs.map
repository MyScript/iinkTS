{
  "version": 3,
  "sources": ["../../../../src/lib/utils/assets/preload-font.ts"],
  "sourcesContent": ["/** @public */\nexport interface TLTypeFace {\n\turl: string\n\tdisplay?: any // FontDisplay\n\tfeatureSettings?: string\n\tstretch?: string\n\tstyle?: string\n\tunicodeRange?: string\n\tvariant?: string\n\tweight?: string\n\tformat?: string\n}\n\n/** @public */\nexport async function preloadFont(id: string, font: TLTypeFace) {\n\tconst {\n\t\turl,\n\t\tstyle = 'normal',\n\t\tweight = '500',\n\t\tdisplay,\n\t\tfeatureSettings,\n\t\tstretch,\n\t\tunicodeRange,\n\t\tvariant,\n\t\tformat,\n\t} = font\n\n\tconst descriptors: FontFaceDescriptors = {\n\t\tstyle,\n\t\tweight,\n\t\tdisplay,\n\t\tfeatureSettings,\n\t\tstretch,\n\t\tunicodeRange,\n\t\t// @ts-expect-error why is this here\n\t\tvariant,\n\t}\n\n\tconst fontInstance = new FontFace(id, `url(${url})`, descriptors)\n\tawait fontInstance.load()\n\tdocument.fonts.add(fontInstance)\n\n\t// @ts-expect-error\n\tfontInstance.$$_url = url\n\n\t// @ts-expect-error\n\tfontInstance.$$_fontface = `\n@font-face {\n\tfont-family: ${fontInstance.family};\n\tfont-stretch: ${fontInstance.stretch};\n\tfont-weight: ${fontInstance.weight};\n\tfont-style: ${fontInstance.style};\n\tsrc: url(\"${url}\") format(\"${format}\")\n}`\n\n\treturn fontInstance\n}\n"],
  "mappings": "AAcA,eAAsB,YAAY,IAAY,MAAkB;AAC/D,QAAM;AAAA,IACL;AAAA,IACA,QAAQ;AAAA,IACR,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD,IAAI;AAEJ,QAAM,cAAmC;AAAA,IACxC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA,EACD;AAEA,QAAM,eAAe,IAAI,SAAS,IAAI,OAAO,GAAG,KAAK,WAAW;AAChE,QAAM,aAAa,KAAK;AACxB,WAAS,MAAM,IAAI,YAAY;AAG/B,eAAa,SAAS;AAGtB,eAAa,cAAc;AAAA;AAAA,gBAEZ,aAAa,MAAM;AAAA,iBAClB,aAAa,OAAO;AAAA,gBACrB,aAAa,MAAM;AAAA,eACpB,aAAa,KAAK;AAAA,aACpB,GAAG,cAAc,MAAM;AAAA;AAGnC,SAAO;AACR;",
  "names": []
}
