{
  "version": 3,
  "sources": ["../../../../src/lib/utils/frames/frames.ts"],
  "sourcesContent": ["import { Box, Editor, TLFrameShape, TLShapeId, TLShapePartial, Vec, compact } from '@tldraw/editor'\n\n/**\n * Remove a frame.\n *\n * @param editor - tldraw editor instance.\n * @param ids - Ids of the frames you wish to remove.\n *\n * @public\n */\nexport function removeFrame(editor: Editor, ids: TLShapeId[]) {\n\tconst frames = compact(\n\t\tids\n\t\t\t.map((id) => editor.getShape<TLFrameShape>(id))\n\t\t\t.filter((f) => f && editor.isShapeOfType<TLFrameShape>(f, 'frame'))\n\t)\n\tif (!frames.length) return\n\n\tconst allChildren: TLShapeId[] = []\n\teditor.run(() => {\n\t\tframes.map((frame) => {\n\t\t\tconst children = editor.getSortedChildIdsForParent(frame.id)\n\t\t\tif (children.length) {\n\t\t\t\teditor.reparentShapes(children, frame.parentId, frame.index)\n\t\t\t\tallChildren.push(...children)\n\t\t\t}\n\t\t})\n\t\teditor.setSelectedShapes(allChildren)\n\t\teditor.deleteShapes(ids)\n\t})\n}\n\n/** @internal */\nexport const DEFAULT_FRAME_PADDING = 50\n\n/**\n * Fit a frame to its content.\n *\n * @param id - Id of the frame you wish to fit to content.\n * @param editor - tlraw editor instance.\n * @param opts - Options for fitting the frame.\n *\n * @public\n */\nexport function fitFrameToContent(editor: Editor, id: TLShapeId, opts = {} as { padding: number }) {\n\tconst frame = editor.getShape<TLFrameShape>(id)\n\tif (!frame) return\n\n\tconst childIds = editor.getSortedChildIdsForParent(frame.id)\n\tconst children = compact(childIds.map((id) => editor.getShape(id)))\n\tif (!children.length) return\n\n\tconst bounds = Box.FromPoints(\n\t\tchildren.flatMap((shape) => {\n\t\t\tconst geometry = editor.getShapeGeometry(shape.id)\n\t\t\treturn editor.getShapeLocalTransform(shape)!.applyToPoints(geometry.vertices)\n\t\t})\n\t)\n\n\tconst { padding = DEFAULT_FRAME_PADDING } = opts\n\tconst w = bounds.w + 2 * padding\n\tconst h = bounds.h + 2 * padding\n\tconst dx = padding - bounds.minX\n\tconst dy = padding - bounds.minY\n\t// The shapes already perfectly fit the frame.\n\tif (dx === 0 && dy === 0 && frame.props.w === w && frame.props.h === h) return\n\n\tconst diff = new Vec(dx, dy).rot(frame.rotation)\n\teditor.run(() => {\n\t\tconst changes: TLShapePartial[] = childIds.map((child) => {\n\t\t\tconst shape = editor.getShape(child)!\n\t\t\treturn {\n\t\t\t\tid: shape.id,\n\t\t\t\ttype: shape.type,\n\t\t\t\tx: shape.x + dx,\n\t\t\t\ty: shape.y + dy,\n\t\t\t}\n\t\t})\n\n\t\tchanges.push({\n\t\t\tid: frame.id,\n\t\t\ttype: frame.type,\n\t\t\tx: frame.x - diff.x,\n\t\t\ty: frame.y - diff.y,\n\t\t\tprops: {\n\t\t\t\tw,\n\t\t\t\th,\n\t\t\t},\n\t\t})\n\n\t\teditor.updateShapes(changes)\n\t})\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmF;AAU5E,SAAS,YAAY,QAAgB,KAAkB;AAC7D,QAAM,aAAS;AAAA,IACd,IACE,IAAI,CAAC,OAAO,OAAO,SAAuB,EAAE,CAAC,EAC7C,OAAO,CAAC,MAAM,KAAK,OAAO,cAA4B,GAAG,OAAO,CAAC;AAAA,EACpE;AACA,MAAI,CAAC,OAAO,OAAQ;AAEpB,QAAM,cAA2B,CAAC;AAClC,SAAO,IAAI,MAAM;AAChB,WAAO,IAAI,CAAC,UAAU;AACrB,YAAM,WAAW,OAAO,2BAA2B,MAAM,EAAE;AAC3D,UAAI,SAAS,QAAQ;AACpB,eAAO,eAAe,UAAU,MAAM,UAAU,MAAM,KAAK;AAC3D,oBAAY,KAAK,GAAG,QAAQ;AAAA,MAC7B;AAAA,IACD,CAAC;AACD,WAAO,kBAAkB,WAAW;AACpC,WAAO,aAAa,GAAG;AAAA,EACxB,CAAC;AACF;AAGO,MAAM,wBAAwB;AAW9B,SAAS,kBAAkB,QAAgB,IAAe,OAAO,CAAC,GAA0B;AAClG,QAAM,QAAQ,OAAO,SAAuB,EAAE;AAC9C,MAAI,CAAC,MAAO;AAEZ,QAAM,WAAW,OAAO,2BAA2B,MAAM,EAAE;AAC3D,QAAM,eAAW,uBAAQ,SAAS,IAAI,CAACA,QAAO,OAAO,SAASA,GAAE,CAAC,CAAC;AAClE,MAAI,CAAC,SAAS,OAAQ;AAEtB,QAAM,SAAS,kBAAI;AAAA,IAClB,SAAS,QAAQ,CAAC,UAAU;AAC3B,YAAM,WAAW,OAAO,iBAAiB,MAAM,EAAE;AACjD,aAAO,OAAO,uBAAuB,KAAK,EAAG,cAAc,SAAS,QAAQ;AAAA,IAC7E,CAAC;AAAA,EACF;AAEA,QAAM,EAAE,UAAU,sBAAsB,IAAI;AAC5C,QAAM,IAAI,OAAO,IAAI,IAAI;AACzB,QAAM,IAAI,OAAO,IAAI,IAAI;AACzB,QAAM,KAAK,UAAU,OAAO;AAC5B,QAAM,KAAK,UAAU,OAAO;AAE5B,MAAI,OAAO,KAAK,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,EAAG;AAExE,QAAM,OAAO,IAAI,kBAAI,IAAI,EAAE,EAAE,IAAI,MAAM,QAAQ;AAC/C,SAAO,IAAI,MAAM;AAChB,UAAM,UAA4B,SAAS,IAAI,CAAC,UAAU;AACzD,YAAM,QAAQ,OAAO,SAAS,KAAK;AACnC,aAAO;AAAA,QACN,IAAI,MAAM;AAAA,QACV,MAAM,MAAM;AAAA,QACZ,GAAG,MAAM,IAAI;AAAA,QACb,GAAG,MAAM,IAAI;AAAA,MACd;AAAA,IACD,CAAC;AAED,YAAQ,KAAK;AAAA,MACZ,IAAI,MAAM;AAAA,MACV,MAAM,MAAM;AAAA,MACZ,GAAG,MAAM,IAAI,KAAK;AAAA,MAClB,GAAG,MAAM,IAAI,KAAK;AAAA,MAClB,OAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,IACD,CAAC;AAED,WAAO,aAAa,OAAO;AAAA,EAC5B,CAAC;AACF;",
  "names": ["id"]
}
