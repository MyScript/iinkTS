{"version":3,"file":"iink.esm.js","sources":["../src/Constants.ts","../src/utils/DeferredPromise.ts","../src/utils/math.ts","../src/utils/geometry.ts","../src/utils/version.ts","../src/utils/crypto.ts","../src/utils/units.ts","../src/utils/uuid.ts","../src/utils/object.ts","../src/utils/font.ts","../src/utils/language.ts","../src/utils/quadratics.ts","../src/utils/infos.ts","../src/logger/logger.ts","../src/logger/LoggerManager.ts","../src/logger/LoggerConfiguration.ts","../src/editor/EditorEvent.ts","../src/model/Export.ts","../src/editor/EditorLayer.ts","../src/editor/AbstractEditor.ts","../src/symbol/Box.ts","../src/style/Style.ts","../src/style/PenStyle.ts","../src/style/Theme.ts","../node_modules/json-css/lib/jsoncss.min.js","../src/style/StyleHelper.ts","../src/style/StyleManager.ts","../src/symbol/IIDecorator.ts","../src/symbol/Symbol.ts","../src/symbol/geometry/IIEdge.ts","../src/symbol/geometry/IIShape.ts","../src/symbol/recognized/IIRecognizedBase.ts","../src/transform/Matrix.ts","../src/symbol/IISymbolBase.ts","../src/symbol/Point.ts","../src/symbol/geometry/IIEdgeArc.ts","../src/symbol/geometry/IIEdgeLine.ts","../src/symbol/geometry/IIEdgePolyLine.ts","../src/symbol/geometry/IIShapeCircle.ts","../src/symbol/geometry/IIShapeEllipse.ts","../src/symbol/geometry/IIShapePolygon.ts","../src/symbol/IIStroke.ts","../src/symbol/recognized/IIRecognizedArc.ts","../src/symbol/recognized/IIRecognizedCircle.ts","../src/symbol/recognized/IIRecognizedEllipse.ts","../src/symbol/recognized/IIRecognizedLine.ts","../src/symbol/recognized/IIRecognizedPolyLine.ts","../src/symbol/recognized/IIRecognizedPolygon.ts","../src/symbol/recognized/IIRecognizedText.ts","../src/symbol/IISymbolGroup.ts","../src/symbol/IIText.ts","../src/symbol/IIEraser.ts","../src/symbol/Stroke.ts","../src/model/Model.ts","../src/model/IIModel.ts","../src/recognizer/ServerConfiguration.ts","../src/recognizer/recognition/EraserConfiguration.ts","../src/recognizer/recognition/DiagramConfiguration.ts","../src/recognizer/recognition/ExportConfiguration.ts","../src/recognizer/recognition/MarginConfiguration.ts","../src/recognizer/recognition/MathConfiguration.ts","../src/recognizer/recognition/RawContentConfiguration.ts","../src/recognizer/recognition/RecognitionRendererConfiguration.ts","../src/recognizer/recognition/TextConfiguration.ts","../src/recognizer/recognition/TextConfigurationV2.ts","../src/recognizer/recognition/ConvertionConfiguration.ts","../src/recognizer/recognition/ShapeConfiguration.ts","../src/recognizer/RecognizerEvent.ts","../src/recognizer/RecognizerError.ts","../src/recognizer/RecognizerHTTPV1Configuration.ts","../src/recognizer/RecognizerHTTPV1.ts","../src/recognizer/RecognizerHTTPV2Configuration.ts","../src/recognizer/RecognizerHTTPV2.ts","../src/recognizer/RecognizerWebSocketMessage.ts","../src/recognizer/RecognizerWebSocketConfiguration.ts","../src/recognizer/RecognizerWebSocket.ts","../src/recognizer/RecognizerWebSocketSSRConfiguration.ts","../src/recognizer/RecognizerWebSocketSSR.ts","../src/renderer/canvas/CanvasRendererShape.ts","../src/renderer/canvas/CanvasRendererStroke.ts","../src/renderer/canvas/CanvasRendererText.ts","../src/renderer/canvas/CanvasRenderer.ts","../src/renderer/svg/IISVGRendererConst.ts","../src/renderer/svg/SVGBuilder.ts","../src/renderer/svg/IISVGRendererEdgeUtil.ts","../src/renderer/svg/IISVGRendererEraserUtil.ts","../src/renderer/svg/IISVGRendererDecoratorUtil.ts","../src/renderer/svg/IISVGRendererShapeUtil.ts","../src/renderer/svg/IISVGRendererStrokeUtil.ts","../src/renderer/svg/IISVGRendererTextUtil.ts","../src/renderer/svg/IISVGRendererRecognizedUtil.ts","../src/renderer/svg/IISVGRendererGroupUtil.ts","../src/renderer/svg/IISVGRenderer.ts","../src/renderer/svg/SVGStroker.ts","../src/renderer/svg/InteractiveInkSSRSVGRenderer.ts","../src/renderer/RendererConfiguration.ts","../src/manager/IIConversionManager.ts","../src/manager/IIResizeManager.ts","../src/manager/IIRotationManager.ts","../src/grabber/GrabberConfiguration.ts","../src/grabber/PointerEventGrabber.ts","../src/manager/IISelectionManager.ts","../src/manager/IITextManager.ts","../src/manager/IITranslateManager.ts","../src/manager/IIWriteManager.ts","../src/manager/IIEraseManager.ts","../src/manager/IIDebugSVGManager.ts","../src/manager/IIMoveManager.ts","../src/history/HistoryContext.ts","../src/history/HistoryManager.ts","../src/history/IIHistoryManager.ts","../src/history/HistoryConfiguration.ts","../src/menu/IIMenu.ts","../src/gesture/Gesture.ts","../src/gesture/GestureConfiguration.ts","../src/gesture/IIGestureManager.ts","../src/menu/IIMenuSub.ts","../src/menu/IIMenuAction.ts","../src/menu/IIMenuTool.ts","../src/menu/IIMenuStyle.ts","../src/menu/IIMenuContext.ts","../src/menu/MenuConfiguration.ts","../src/menu/IIMenuManager.ts","../src/snap/IISnapConfiguration.ts","../src/snap/IISnapManager.ts","../src/editor/InteractiveInkEditorConfiguration.ts","../src/editor/InteractiveInkEditor.ts","../src/editor/EditorTriggerConfiguration.ts","../src/editor/InkEditorDeprecatedConfiguration.ts","../src/editor/InkEditorDeprecated.ts","../src/smartguide/InteractiveInkSSRSmartGuide.ts","../src/editor/InteractiveInkSSREditorConfiguration.ts","../src/editor/InteractiveInkSSREditor.ts","../src/editor/InkEditorConfiguration.ts","../src/editor/InkEditor.ts","../src/editor/Editor.ts"],"sourcesContent":["/**\n * @group Editor\n * @summary\n * List the possibilities of interactions\n */\nexport enum EditorTool\n{\n  Write = \"write\",\n  Erase = \"erase\",\n  /**\n   * @remarks only usable in the case of offscreen\n   */\n  Select = \"select\",\n  /**\n   * @remarks only usable in the case of offscreen\n   */\n  Move = \"move\"\n}\n\n/**\n * @group Editor\n * @summary\n * List all the shapes that can be drawn\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum EditorWriteTool\n{\n  Pencil = \"pencil\",\n  Rectangle = \"rectangle\",\n  Rhombus = \"rhombus\",\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Triangle = \"triangle\",\n  Parallelogram = \"parallelogram\",\n  Line = \"line\",\n  Arrow = \"arrow\",\n  DoubleArrow = \"double-arrow\",\n}\n\n/**\n * @group Renderer\n * @summary\n * List all svg elements roles\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum SvgElementRole\n{\n  Guide = \"guide\",\n  InteractElementsGroup = \"interact-elements-group\",\n  Translate = \"translate\",\n  Resize = \"resize\",\n  Rotate = \"rotate\",\n}\n\n/**\n * @group Renderer\n * @summary\n * List all svg elements resize direction\n * @remarks\n * only usable in the case of offscreen\n */\nexport const enum ResizeDirection\n{\n  North = \"n-resize\",\n  East = \"e-resize\",\n  South = \"s-resize\",\n  West = \"w-resize\",\n  NorthEast = \"ne-resize\",\n  NorthWest = \"nw-resize\",\n  SouthEast = \"se-resize\",\n  SouthWest = \"sw-resize\"\n}\n\n/**\n * @group Renderer\n */\nexport const SELECTION_MARGIN = 10 as const\n","\n/**\n * @group Utils\n */\nexport class DeferredPromise<T> {\n  promise: Promise<T>\n  resolve!: (value: T) => void\n  reject!: (value: Error | string) => void\n\n  isFullFilled: boolean\n  isPending: boolean\n\n\n  constructor()\n  {\n    this.isFullFilled = false\n    this.isPending = true\n\n    this.promise = new Promise((resolve, reject) =>\n    {\n      this.reject = async (v: unknown) =>\n      {\n        this.isFullFilled = true\n        this.isPending = false\n        return reject(v)\n      }\n      this.resolve = async (v: unknown) =>\n      {\n        this.isFullFilled = true\n        this.isPending = false\n        return resolve(v as T)\n      }\n    })\n  }\n}\n","/**\n * @group Utils\n */\nexport function isValidNumber(x: unknown): boolean\n{\n  if (x === undefined || x === null) return false\n  return !isNaN(parseFloat(x.toString())) && isFinite(+x)\n}\n/**\n * @group Utils\n */\nexport function isBetween(val: number, min: number, max: number): boolean\n{\n  return val >= min && val <= max\n}\n\n/**\n * @group Utils\n */\nexport function computeAverage(arr: number[]): number\n{\n  return arr.reduce((p, c) => p + c, 0) / (arr.length || 1)\n}\n","import { TBox, TPoint, TSegment } from \"../symbol\"\nimport { isBetween } from \"./math\"\n\n/**\n * @group Utils\n */\nexport function computeDistance(p1: TPoint, p2: TPoint): number\n{\n  const distance = Math.hypot(p2.y - p1.y, p2.x - p1.x)\n  return isNaN(distance) ? 0 : distance\n}\n\n/**\n * @group Utils\n */\nexport function computeAngleAxeRadian(begin: TPoint, end: TPoint): number\n{\n  return Math.atan2(end.y - begin.y, end.x - begin.x)\n}\n\n/**\n * @group Utils\n */\nexport function createPointsOnSegment(p1: TPoint, p2: TPoint, spaceBetweenPoint = 1): TPoint[]\n{\n  const points: TPoint[] = []\n  const globalDistance = computeDistance(p1, p2)\n  let spaceWithP1 = spaceBetweenPoint\n  while (spaceWithP1 < globalDistance) {\n    const p = {\n      x: p1.x + (spaceWithP1 * (p2.x - p1.x)) / globalDistance,\n      y: p1.y + (spaceWithP1 * (p2.y - p1.y)) / globalDistance\n    }\n    points.push(p)\n    spaceWithP1 += spaceBetweenPoint\n  }\n  return points\n}\n\n/**\n * @group Utils\n */\nexport function scalaire(v1: TPoint, v2: TPoint): number\n{\n  return v1.x * v2.x + v1.y * v2.y\n}\n\n/**\n * @group Utils\n */\nexport function computeNearestPointOnSegment(p: TPoint, seg: TSegment): TPoint\n{\n  const vectP1P = { x: p.x - seg.p1.x, y: p.y - seg.p1.y }\n  const vectP1P2 = { x: seg.p2.x - seg.p1.x, y: seg.p2.y - seg.p1.y }\n  if (vectP1P2.x === 0 && vectP1P2.y === 0) {\n    return seg.p1\n  }\n  const scalaireP1P_P1P2 = scalaire(vectP1P, vectP1P2)\n  const scalaireP1P2_P1P2 = scalaire(vectP1P2, vectP1P2)\n\n  const t = Math.min(1, Math.max(0, scalaireP1P_P1P2 / scalaireP1P2_P1P2))\n  return { x: seg.p1.x + (vectP1P2.x * t), y: seg.p1.y + (vectP1P2.y * t) }\n}\n\n/**\n * @group Utils\n */\nexport function isPointInsideBox(point: TPoint, box: TBox): boolean\n{\n  return isBetween(point.x, box.x, box.x + box.width) && isBetween(point.y, box.y, box.y + box.height)\n}\n\n/**\n * @group Utils\n */\nexport function convertRadianToDegree(radian: number): number\n{\n  return +((radian % (2 * Math.PI)) / Math.PI * 180).toFixed(4)\n}\n\n/**\n * @group Utils\n */\nexport function convertDegreeToRadian(degree: number): number\n{\n  return +((degree % 360) / 180 * Math.PI).toFixed(4)\n}\n\n/**\n * @group Utils\n */\nexport function computeRotatedPoint(point: TPoint, center: TPoint, radian: number): TPoint\n{\n  const dx = point.x - center.x\n  const dy = point.y - center.y\n  const cos = Math.cos(radian)\n  const sin = Math.sin(radian)\n  return {\n    x: +(center.x + cos * dx - sin * dy).toFixed(3),\n    y: +(center.y + sin * dx + cos * dy).toFixed(3)\n  }\n}\n\n/**\n * @group Utils\n */\nexport function computePointOnEllipse(center: TPoint, radiusX: number, radiusY: number, phi: number, theta: number): TPoint\n{\n  const cosPhi = Math.cos(phi)\n  const sinPhi = Math.sin(phi)\n\n  const M = Math.abs(radiusX) * Math.cos(theta)\n  const N = Math.abs(radiusY) * Math.sin(theta)\n\n  return {\n    x: +(center.x + cosPhi * M - sinPhi * N).toFixed(3),\n    y: +(center.y + sinPhi * M + cosPhi * N).toFixed(3)\n  }\n}\n\n/**\n * @group Utils\n */\nexport function computeDistanceBetweenPointAndSegment(p: TPoint, seg: TSegment): number\n{\n  return computeDistance(p, computeNearestPointOnSegment(p, seg))\n}\n\n/**\n * @group Utils\n */\nexport function findIntersectionBetween2Segment(seg1: TSegment, seg2: TSegment): TPoint | undefined\n{\n\n  if (seg1.p1.x === seg2.p1.x && seg1.p1.y === seg2.p1.y) return seg1.p1\n  if (seg1.p1.x === seg2.p2.x && seg1.p1.y === seg2.p2.y) return seg1.p1\n\n  if (seg1.p2.x === seg2.p1.x && seg1.p2.y === seg2.p1.y) return seg1.p2\n  if (seg1.p2.x === seg2.p2.x && seg1.p2.y === seg2.p2.y) return seg1.p2\n\n  const S1dx = seg1.p2.x - seg1.p1.x\n  const S1dy = seg1.p2.y - seg1.p1.y\n\n  const S2dx = seg2.p2.x - seg2.p1.x\n  const S2dy = seg2.p2.y - seg2.p1.y\n\n  const S1S2dx = seg1.p1.x - seg2.p1.x\n  const S1S2dy = seg1.p1.y - seg2.p1.y\n\n  const ua_t = S2dx * S1S2dy - S2dy * S1S2dx\n  const ub_t = S1dx * S1S2dy - S1dy * S1S2dx\n  const u_b = S2dy * S1dx - S2dx * S1dy\n\n  if (ua_t === 0 || ub_t === 0 || u_b === 0) return\n\n  const ua = ua_t / u_b\n  const ub = ub_t / u_b\n  if (isBetween(ua, 0, 1) && isBetween(ub, 0, 1)) {\n    return {\n      x: seg1.p1.x + ua * S1dx,\n      y: seg1.p1.y + ua * S1dy\n    }\n  }\n  return\n}\n\n/**\n * @group Utils\n */\nexport function findIntersectBetweenSegmentAndCircle(seg: TSegment, c: TPoint, r: number): TPoint[]\n{\n  const result: TPoint[] = []\n\n  const a = Math.pow(seg.p2.x - seg.p1.x, 2) + Math.pow(seg.p2.y - seg.p1.y, 2)\n  const b = 2 * ((seg.p2.x - seg.p1.x) * (seg.p1.x - c.x) + (seg.p2.y - seg.p1.y) * (seg.p1.y - c.y))\n  const cc = Math.pow(c.x, 2) + Math.pow(c.y, 2) + Math.pow(seg.p1.x, 2) + Math.pow(seg.p1.y, 2) - 2 * (c.x * seg.p1.x + c.y * seg.p1.y) - Math.pow(r, 2)\n  const deter = Math.pow(b, 2) - 4 * a * cc\n\n  if (deter <= 0) return []\n\n  const e = Math.sqrt(deter)\n  const u1 = (-b + e) / (2 * a)\n  const u2 = (-b - e) / (2 * a)\n\n  if ((u1 < 0 || u1 > 1) && (u2 < 0 || u2 > 1)) {\n    return result\n  }\n\n  if (isBetween(u1, 0, 1)) {\n    result.push({\n      x: (seg.p2.x - seg.p1.x) * u1 + seg.p1.x,\n      y: (seg.p2.y - seg.p1.y) * u1 + seg.p1.y\n    })\n  }\n\n  if (isBetween(u2, 0, 1)) {\n    result.push({\n      x: (seg.p2.x - seg.p1.x) * u2 + seg.p1.x,\n      y: (seg.p2.y - seg.p1.y) * u2 + seg.p1.y\n    })\n  }\n\n  return result\n}\n\n/**\n * @group Utils\n */\nexport function computeAngleRadian(p1: TPoint, center: TPoint, p2: TPoint): number\n{\n  const p1c = Math.sqrt(Math.pow(center.x - p1.x, 2) + Math.pow(center.y - p1.y, 2))\n  const p2c = Math.sqrt(Math.pow(center.x - p2.x, 2) + Math.pow(center.y - p2.y, 2))\n  const p1p2 = Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2))\n  return Math.acos((p2c * p2c + p1c * p1c - p1p2 * p1p2) / (2 * p2c * p1c))\n}\n\n/**\n * @group Utils\n */\nexport function getClosestPoints(points1: TPoint[], points2: TPoint[]): { p1: TPoint, p2: TPoint }\n{\n  let p1 = points1[0]\n  let p2 = points2[0]\n  let minDistance = Number.MAX_SAFE_INTEGER\n  points1.forEach(_p1 =>\n  {\n    points2.forEach(_p2 =>\n    {\n      const d = computeDistance(_p1, _p2)\n      if (minDistance > d) {\n        minDistance = d\n        p1 = _p1\n        p2 = _p2\n      }\n    })\n  })\n  return { p1, p2 }\n}\n\n/**\n * @group Utils\n */\nexport function getClosestPoint(points: TPoint[], point: TPoint): { point?: TPoint, index: number }\n{\n  let minDistance = Number.MAX_SAFE_INTEGER\n  let closest: TPoint | undefined\n  let index = -1\n  points.forEach((p, i) =>\n  {\n    const d = computeDistance(p, point)\n    if (minDistance > d) {\n      minDistance = d\n      closest = p\n      index = i\n    }\n  })\n  return {\n    point: closest,\n    index\n  }\n}\n\n/**\n * @group Utils\n */\nexport function isPointInsidePolygon(point: TPoint, points: TPoint[])\n{\n  let inside = false\n  for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\n    const p1 = points[i]\n    const p2 = points[j]\n    const intersect = ((p1.y > point.y) != (p2.y > point.y))\n      && (point.x < (p2.x - p1.x) * (point.y - p1.y) / (p2.y - p1.y) + p1.x)\n    if (intersect) inside = !inside\n  }\n\n  return inside\n}\n","\n/**\n * @group Utils\n */\nexport const isVersionSuperiorOrEqual = (source: string, target: string): boolean =>\n{\n  const sourceParts = source.split(\".\")\n  const targetParts = target.split(\".\")\n\n  for (let i = 0; i < targetParts.length; i++) {\n    const a = Number(targetParts[i])\n    const b = Number(sourceParts[i])\n    if (a > b) return false\n    if (a < b) return true\n  }\n  return true\n}\n","/**\n * @group Utils\n */\nexport async function computeHmac(message: string, applicationKey: string, hmacKey: string): Promise<string>\n{\n  const enc = new TextEncoder()\n  const messageEncoded = enc.encode(message)\n  const keyEncoded = enc.encode(applicationKey + hmacKey)\n\n  const key = await crypto.subtle.importKey(\n    \"raw\",\n    keyEncoded,\n    {\n      name: \"HMAC\",\n      hash: { name: \"SHA-512\" }\n    },\n    false,\n    [\"sign\"]\n  )\n\n  const signature = await crypto.subtle.sign(\n    \"HMAC\",\n    key,\n    messageEncoded\n  )\n\n  const buffer = new Uint8Array(signature)\n  return Array.prototype.map.call(buffer, x => x.toString(16).padStart(2, \"0\")).join(\"\")\n}\n","import { TBox } from \"../symbol\"\n\n/**\n * @group Utils\n */\nexport function convertMillimeterToPixel(mm: number): number\n{\n  return +(mm * 96 / 25.4).toFixed(3)\n}\n\n/**\n * @group Utils\n */\nexport function convertPixelToMillimeter(px: number): number\n{\n  return +(px / 96 * 25.4).toFixed(3)\n}\n\n/**\n * @group Utils\n */\nexport function convertBoundingBoxMillimeterToPixel(box?: TBox): TBox\n{\n  if (!box) {\n    return { height: 0, width: 0, x: 0, y: 0}\n  }\n  return {\n    x: convertMillimeterToPixel(box.x),\n    y: convertMillimeterToPixel(box.y),\n    width: convertMillimeterToPixel(box.width),\n    height: convertMillimeterToPixel(box.height),\n  }\n}\n","\n/**\n * @group Utils\n */\nexport function createUUID(): string\n{\n  let dt = Date.now()\n  const uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c)\n  {\n    const r = (dt + Math.random() * 16) % 16 | 0\n    dt = Math.floor(dt / 16)\n    return (c == \"x\" ? r : (r & 0x3 | 0x8)).toString(16)\n  })\n  return uuid\n}\n","\n/**\n * @group Utils\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const mergeDeep = (target: any, ...sources: any[]): any =>\n{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const isObject = (item: any) =>\n  {\n    return (item && typeof item === \"object\" && !Array.isArray(item))\n  }\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, { [key]: {} })\n        }\n        mergeDeep(target[key], source[key])\n      }\n      else if (Array.isArray(target[key]) && Array.isArray(source[key])) {\n        target[key] = target[key].concat(source[key])\n      }\n      else {\n        Object.assign(target, { [key]: source[key] })\n      }\n    }\n  }\n  else if (Array.isArray(target) && Array.isArray(source)) {\n    target = target.concat(source)\n  }\n  else if (source) {\n    target = source\n  }\n\n  return mergeDeep(target, ...sources)\n}\n\n/**\n * @group Utils\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isDeepEqual = (object1: any, object2: any) =>\n{\n  const objKeys1 = Object.keys(object1)\n  const objKeys2 = Object.keys(object2)\n\n  if (objKeys1.length !== objKeys2.length) return false\n\n  for (const key of objKeys1) {\n    const value1 = object1[key]\n    const value2 = object2[key]\n\n    const isObjects = isObject(value1) && isObject(value2)\n\n    if (\n      (isObjects && !isDeepEqual(value1, value2)) ||\n      (!isObjects && value1 !== value2)\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * @group Utils\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isObject = (object: any) =>\n{\n  return object && typeof object === \"object\"\n}\n","import { TServerHTTPConfiguration } from \"../recognizer\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport async function getAvailableFontList(configuration: PartialDeep<{ server: TServerHTTPConfiguration, recognition: { lang: string }}>): Promise<Array<string>>\n{\n  if (!configuration?.server?.scheme && !configuration?.server?.host) {\n    return Promise.reject(\"Failed to get fonts: configuration.server.scheme & configuration.server.host are required!\")\n  }\n  if (!configuration?.recognition?.lang) {\n    return Promise.reject(\"Failed to get fonts: configuration.recognition.lang is required!\")\n  }\n  const serverConfig = configuration.server\n  const response = await fetch(`${ serverConfig.scheme }://${ serverConfig.host }/api/v4.0/iink/font/google/language/` + configuration.recognition.lang)\n  const { result } = await response.json()\n  return result.sort()\n}\n","import { TServerHTTPConfiguration } from \"../recognizer\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport async function getAvailableLanguageList(configuration: PartialDeep<{ server: TServerHTTPConfiguration }>): Promise<{ result: { [key: string]: string } }>\n{\n  if (configuration?.server?.scheme && configuration?.server?.host) {\n    const serverConfig = configuration.server\n    const response = await fetch(`${ serverConfig.scheme }://${ serverConfig.host }/api/v4.0/iink/availableLanguageList`)\n    return response.json()\n  } else {\n    return Promise.reject(\"Failed to get languages: configuration.server.scheme & configuration.server.host are required!\")\n  }\n}\n","import { TPoint, TPointer } from \"../symbol\"\n\n/**\n * @group Utils\n */\nexport function computeLinksPointers(point: TPointer, angle: number, width: number): TPoint[]\n{\n  const radius = point.p * width\n  return [\n    {\n      x: +(point.x - (Math.sin(angle) * radius)).toFixed(3),\n      y: +(point.y + (Math.cos(angle) * radius)).toFixed(3)\n    },\n    {\n      x: +(point.x + (Math.sin(angle) * radius)).toFixed(3),\n      y: +(point.y - (Math.cos(angle) * radius)).toFixed(3),\n    }\n  ]\n}\n\n/**\n * @group Utils\n */\nexport function computeMiddlePointer(point1: TPointer, point2: TPointer): TPointer\n{\n  return {\n    x: +((point2.x + point1.x) / 2).toFixed(3),\n    y: +((point2.y + point1.y) / 2).toFixed(3),\n    p: +((point2.p + point1.p) / 2).toFixed(3),\n    t: +((point2.t + point1.t) / 2).toFixed(3),\n  }\n}\n","import { TServerHTTPConfiguration } from \"../recognizer\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport type TApiInfos = {\n  version: string,\n  gitCommit: string,\n  nativeVersion: string\n}\n\n/**\n * @group Utils\n */\nexport async function getApiInfos(configuration?: PartialDeep<{ server: TServerHTTPConfiguration }>): Promise<TApiInfos>\n{\n  try {\n    if (!configuration?.server?.scheme && !configuration?.server?.host) {\n      return Promise.reject(\"Failed to get infos: configuration.server.scheme & configuration.server.host are required!\")\n    }\n    const response = await fetch(`${ configuration.server.scheme }://${ configuration.server.host }/api/v4.0/iink/version`)\n    if (response.ok) {\n      const version = await response.json() as TApiInfos\n      return version\n    }\n    else {\n      //latest version published before this endpoint\n      return { version: \"3.1.3\", gitCommit: \"unknown\", nativeVersion: \"<=3.1.1\" }\n    }\n\n  } catch {\n    //latest version published before this endpoint\n    return { version: \"3.1.3\", gitCommit: \"7e148bd566438ca77dc83cb4edcc6ed0f51a8a15\", nativeVersion: \"<=3.1.1\" }\n   }\n\n}\n","/**\n * @group Logger\n */\nexport enum LoggerLevel\n{\n  DEBUG = \"1\",\n  INFO = \"2\",\n  WARN = \"3\",\n  ERROR = \"4\"\n}\n\n/**\n * @group Logger\n */\nexport enum LoggerCategory\n{\n  EDITOR = \"EDITOR\",\n  RECOGNIZER = \"RECOGNIZER\",\n  GRABBER = \"GRABBER\",\n  GESTURE = \"GESTURE\",\n  EDITOR_EVENT = \"EDITOR_EVENT\",\n  MODEL = \"MODEL\",\n  RENDERER = \"RENDERER\",\n  SMARTGUIDE = \"SMARTGUIDE\",\n  STYLE = \"STYLE\",\n  HISTORY = \"HISTORY\",\n  SYMBOL = \"SYMBOL\",\n  WRITE = \"WRITE\",\n  TRANSFORMER = \"TRANSFORMER\",\n  CONVERTER = \"CONVERTER\",\n  SELECTION = \"SELECTION\",\n  SVGDEBUG = \"SVGDEBUG\",\n  MENU = \"MENU\"\n}\n\n/**\n * @group Logger\n */\nexport class Logger\n{\n  category: LoggerCategory\n  level: LoggerLevel\n\n  constructor(category: LoggerCategory, level: LoggerLevel)\n  {\n    this.category = category\n    this.level = level\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  debug(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.DEBUG >= this.level) {\n      const dataLog = {\n        level: \"debug\",\n        from: `${ this.category }.${ functionName }`,\n        message: data,\n      }\n      console.debug(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  info(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.INFO >= this.level) {\n      const dataLog = {\n        level: \"info\",\n        from: `${ this.category }.${ functionName }`,\n        message: data,\n      }\n      console.info(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  warn(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.WARN >= this.level) {\n      const dataLog = {\n        level: \"warn\",\n        from: `${ this.category }.${ functionName }`,\n        message: data,\n      }\n      console.warn(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error(functionName: string, ...error: any)\n  {\n    const dataLog = {\n      level: \"error\",\n      from: `${ this.category }.${ functionName }`,\n      message: error,\n    }\n    console.error(dataLog)\n  }\n}\n","import { TLoggerConfiguration } from \"./LoggerConfiguration\"\nimport { Logger, LoggerCategory, LoggerLevel } from \"./logger\"\n\n/**\n * @group Logger\n */\nexport class LoggerManager\n{\n  static #loggerMap: Map<LoggerCategory, Logger> = new Map()\n\n  static getLogger(name: LoggerCategory): Logger\n  {\n    if (!this.#loggerMap.has(name)) {\n      this.#loggerMap.set(name, new Logger(name, LoggerLevel.ERROR))\n    }\n    return this.#loggerMap.get(name) as Logger\n  }\n\n  static setLoggerLevel(config: TLoggerConfiguration)\n  {\n    Object.keys(config).forEach((lc) =>\n    {\n      LoggerManager.getLogger(lc as LoggerCategory).level = config[lc as LoggerCategory]\n    })\n  }\n}\n","import { LoggerCategory, LoggerLevel } from \"./logger\"\n\n/**\n * @group Logger\n */\nexport type TLoggerConfiguration = {\n  [key in keyof typeof LoggerCategory]: LoggerLevel\n}\n\n/**\n * @group Logger\n * @source\n */\nexport const DefaultLoggerConfiguration: TLoggerConfiguration = {\n  [LoggerCategory.EDITOR]: LoggerLevel.ERROR,\n  [LoggerCategory.RECOGNIZER]: LoggerLevel.ERROR,\n  [LoggerCategory.GRABBER]: LoggerLevel.ERROR,\n  [LoggerCategory.RENDERER]: LoggerLevel.ERROR,\n  [LoggerCategory.EDITOR_EVENT]: LoggerLevel.ERROR,\n  [LoggerCategory.MODEL]: LoggerLevel.ERROR,\n  [LoggerCategory.SYMBOL]: LoggerLevel.ERROR,\n  [LoggerCategory.SMARTGUIDE]: LoggerLevel.ERROR,\n  [LoggerCategory.GESTURE]: LoggerLevel.ERROR,\n  [LoggerCategory.STYLE]: LoggerLevel.ERROR,\n  [LoggerCategory.HISTORY]: LoggerLevel.ERROR,\n  [LoggerCategory.TRANSFORMER]: LoggerLevel.ERROR,\n  [LoggerCategory.CONVERTER]: LoggerLevel.ERROR,\n  [LoggerCategory.WRITE]: LoggerLevel.ERROR,\n  [LoggerCategory.SELECTION]: LoggerLevel.ERROR,\n  [LoggerCategory.SVGDEBUG]: LoggerLevel.ERROR,\n  [LoggerCategory.MENU]: LoggerLevel.ERROR,\n}\n","import { EditorTool } from \"../Constants\"\nimport { LoggerManager, LoggerCategory } from \"../logger\"\nimport { TExport } from \"../model\"\nimport { IIStroke, TIISymbol, TSymbol } from \"../symbol\"\nimport { THistoryContext } from \"../history\"\nimport { TGestureType } from \"../gesture\"\n\n/**\n * @group Editor\n * @remarks Lists all events that can be listened to on the editor or DOM element\n * @example\n * You can run code on \"EditorEventName\" raised by using\n * ```ts\n * editor.event.addEventListener(EditorEventName.CHANGED, (evt) => console.log(evt.detail))\n * ```\n */\nexport enum EditorEventName\n{\n  /**\n   * @remarks event emitted when history has changed i.e. the context of undo-redo\n   */\n  CHANGED = \"changed\",\n  /**\n   * @remarks event emitted when clearing is complete\n   */\n  CLEARED = \"cleared\",\n  /**\n   * @remarks event emitted after the conversion is complete\n   */\n  CONVERTED = \"converted\",\n  /**\n   * @remarks event emitted when the editor encounters an error\n   */\n  ERROR = \"error\",\n  /**\n   * @remarks event emitted on click on pointer events\n   */\n  POINTEREVENTS = \"pointer_events\",\n  /**\n   * @remarks event emitted after\n   */\n  NOTIF = \"notif\",\n  /**\n   * @remarks event emitted after the end of the export\n   */\n  EXPORTED = \"exported\",\n  /**\n   * @remarks event emitted after the end of the import\n   */\n  IMPORTED = \"imported\",\n  /**\n   * @remarks event emitted when the server is idle after a job\n   */\n  IDLE = \"idle\",\n  /**\n   * @remarks event emitted after full editor initialization\n   */\n  LOADED = \"loaded\",\n  /**\n   * @remarks event emitted session opened\n   */\n  SESSION_OPENED = \"session-opened\",\n  /**\n   * @remarks event emitted after selection change\n   */\n  SELECTED = \"selected\",\n  /**\n   * @remarks event emitted after tool change\n   */\n  TOOL_CHANGED = \"tool-changed\",\n  /**\n   * @remarks event emitted after mode change\n   */\n  UI_UPDATED = \"ui-updated\",\n  /**\n   * @remarks event emitted after stroke synchronized with jiix\n   */\n  SYNCHRONIZED = \"synchronized\",\n  /**\n   * @remarks event emitted after applying a gesture\n   */\n  GESTURED = \"gestured\"\n}\n\n/**\n * @group Editor\n */\nexport class EditorEvent extends EventTarget\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.EDITOR_EVENT);\n  protected abortController: AbortController\n  element: Element\n\n  constructor(element: Element)\n  {\n    super()\n    this.#logger.info(\"constructor\", { element })\n    this.abortController = new AbortController()\n    this.element = element\n  }\n\n  removeAllListeners(): void\n  {\n    this.#logger.info(\"removeAllListeners\")\n    this.abortController.abort()\n    this.abortController = new AbortController()\n  }\n\n  protected emit(type: string, data?: unknown): void\n  {\n    const evt = new CustomEvent(type, Object.assign({ bubbles: true, composed: true }, data ? { detail: data } : undefined))\n    this.dispatchEvent(evt)\n    this.element?.dispatchEvent(evt)\n  }\n\n  emitSessionOpened(sessionId: string): void\n  {\n    this.#logger.info(\"emitSessionOpened\")\n    this.emit(EditorEventName.SESSION_OPENED, sessionId)\n  }\n  addSessionOpenedListener(callback: (sessionId: string) => void): void\n  {\n    this.#logger.info(\"addSessionOpenedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.SESSION_OPENED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as string),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitLoaded(): void\n  {\n    this.#logger.info(\"emitLoaded\")\n    this.emit(EditorEventName.LOADED)\n  }\n  addLoadedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addLoadedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.LOADED,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitNotif(notif: { message: string; timeout?: number }): void\n  {\n    this.#logger.info(\"emitNotif\", { notif })\n    this.emit(EditorEventName.NOTIF, notif)\n  }\n  addNotifListener(callback: (notif: { message: string; timeout?: number }) => void): void\n  {\n    this.#logger.info(\"addNotifListener\", { callback })\n    this.addEventListener(\n      EditorEventName.NOTIF,\n      (evt: unknown) => callback((evt as CustomEvent).detail as { message: string; timeout?: number }),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitError(err: Error): void\n  {\n    this.#logger.info(\"emitError\", { err })\n    this.emit(EditorEventName.ERROR, err)\n  }\n  addErrorListener(callback: (err: Error) => void): void\n  {\n    this.#logger.info(\"addErrorListener\", { callback })\n    this.addEventListener(\n      EditorEventName.ERROR,\n      (evt: unknown) => callback((evt as CustomEvent).detail as Error),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitExported(exports: TExport): void\n  {\n    this.#logger.info(\"emitExported\", { exports })\n    this.emit(EditorEventName.EXPORTED, exports)\n  }\n  addExportedListener(callback: (exports: TExport) => void): void\n  {\n    this.#logger.info(\"addExportedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.EXPORTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TExport),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitChanged(undoRedoContext: THistoryContext): void\n  {\n    this.#logger.info(\"emitChanged\", { undoRedoContext })\n    this.emit(EditorEventName.CHANGED, {\n      ...undoRedoContext,\n      canClear: !undoRedoContext.empty\n    })\n  }\n  addChangedListener(callback: (context: THistoryContext) => void): void\n  {\n    this.#logger.info(\"addChangedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.CHANGED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as THistoryContext),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitIdle(idle: boolean): void\n  {\n    this.#logger.info(\"emitIdle\", { idle })\n    this.emit(EditorEventName.IDLE, idle)\n  }\n  addIdleListener(callback: (idle: boolean) => void): void\n  {\n    this.#logger.info(\"addIdleListener\", { callback })\n    this.addEventListener(\n      EditorEventName.IDLE,\n      (evt: unknown) => callback((evt as CustomEvent).detail as boolean),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitCleared(): void\n  {\n    this.#logger.info(\"emitCleared\")\n    this.emit(EditorEventName.CLEARED)\n  }\n  addClearedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addClearedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.CLEARED,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitConverted(exports: TExport): void\n  {\n    this.#logger.info(\"emitConverted\", { exports })\n    this.emit(EditorEventName.CONVERTED, exports)\n  }\n  addConvertedListener(callback: (exports: TExport) => void): void\n  {\n    this.#logger.info(\"addConvertedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.CONVERTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TExport),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitImported(exports: TExport): void\n  {\n    this.#logger.info(\"emitImported\", { exports })\n    this.emit(EditorEventName.IMPORTED, exports)\n  }\n  addImportedListener(callback: (exports: TExport) => void): void\n  {\n    this.#logger.info(\"addImportedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.IMPORTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TExport),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitSelected(symbols: TSymbol[]): void\n  {\n    this.#logger.info(\"emitSelected\")\n    this.emit(EditorEventName.SELECTED, symbols)\n  }\n  addSelectedListener(callback: (symbols: TIISymbol[]) => void): void\n  {\n    this.#logger.info(\"addSelectedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.SELECTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TIISymbol[]),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitToolChanged(mode: EditorTool): void\n  {\n    this.#logger.info(\"emitToolChanged\")\n    this.emit(EditorEventName.TOOL_CHANGED, mode)\n  }\n  addToolChangedListener(callback: (mode: EditorTool) => void): void\n  {\n    this.#logger.info(\"addToolChangedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.TOOL_CHANGED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as EditorTool),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitUIpdated(): void\n  {\n    this.#logger.info(\"emitUIpdated\")\n    this.emit(EditorEventName.UI_UPDATED)\n  }\n  addUIpdatedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addUIpdatedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.UI_UPDATED,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitSynchronized(): void\n  {\n    this.#logger.info(\"emitSynchronized\")\n    this.emit(EditorEventName.SYNCHRONIZED)\n  }\n  addSynchronizedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addSynchronizedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.SYNCHRONIZED,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitGestured(gesture: { gestureType: TGestureType, stroke: IIStroke }): void\n  {\n    this.#logger.info(\"emitSynchronized\")\n    this.emit(EditorEventName.GESTURED, gesture)\n  }\n  addGesturedListener(callback: (gesture: { gestureType: TGestureType, stroke: IIStroke }) => void): void\n  {\n    this.#logger.info(\"addSynchronizedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.GESTURED,\n      (evt) => callback((evt as CustomEvent).detail as { gestureType: TGestureType, stroke: IIStroke }),\n      { signal: this.abortController.signal }\n    )\n  }\n}\n","import { EdgeDecoration, TBox, TPoint } from \"../symbol\"\n\n/**\n * @group Exports\n * @remarks List all supported MIME types for export. Please note, the MIME types supported depend on the recognition type configured\n */\nexport enum ExportType\n{\n  JIIX = \"application/vnd.myscript.jiix\",\n  TEXT = \"text/plain\",\n  LATEX = \"application/x-latex\",\n  MATHML = \"application/mathml+xml\",\n  SVG = \"image/svg+xml\",\n  OFFICE_DOCUMENT = \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.preprod.myscript.com/docs/interactive-ink/latest/reference/jiix  Element type}\n */\nexport enum JIIXELementType\n{\n  Text = \"Text\",\n  Node = \"Node\",\n  Edge = \"Edge\",\n  RawContent = \"Raw Content\",\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.preprod.myscript.com/docs/interactive-ink/latest/reference/jiix/#diagram-item-blocks | Element node kind}\n */\nexport enum JIIXNodeKind\n{\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Rectangle = \"rectangle\",\n  Triangle = \"triangle\",\n  Parallelogram = \"parallelogram\",\n  Polygon = \"polygon\",\n  Rhombus = \"rhombus\",\n}\n\n/**\n * @group Exports\n */\nexport enum JIIXEdgeKind\n{\n  Line = \"line\",\n  PolyEdge = \"polyedge\",\n  Arc = \"arc\",\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.preprod.myscript.com/docs/interactive-ink/latest/reference/jiix/#stroke-item | Stroke item}\n */\nexport type TJIIXStrokeItem = {\n  type: \"stroke\"\n  id: string\n  \"full-id\"?: string\n  timestamp?: string\n  X?: number[]\n  Y?: number[]\n  F?: number[]\n  T?: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXBase = {\n  \"bounding-box\"?: TBox\n  items?: TJIIXStrokeItem[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXElementBase<T = string> = TJIIXBase & {\n  id: string\n  type: T\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.preprod.myscript.com/docs/interactive-ink/latest/reference/jiix/#word-object | Word object}\n */\nexport type TJIIXWord = TJIIXBase & {\n  id?: string\n  label: string\n  candidates?: string[]\n  \"first-char\"?: number\n  \"last-char\"?: number\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.preprod.myscript.com/docs/interactive-ink/latest/reference/jiix/#character-object | Character object}\n */\nexport type TJIIXChar = TJIIXBase & {\n  label: string\n  candidates?: string[]\n  word: number\n  grid: TPoint[]\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.preprod.myscript.com/docs/interactive-ink/latest/reference/jiix/#text-interpretation | Text Element }\n */\nexport type TJIIXLine = {\n  \"baseline-y\": number\n  \"first-char\"?: number\n  \"last-char\"?: number\n  \"x-height\": number\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.preprod.myscript.com/docs/interactive-ink/latest/reference/jiix/#text-interpretation | Text Element }\n */\nexport type TJIIXTextElement = TJIIXElementBase<JIIXELementType.Text> & {\n  id: string\n  \"bounding-box\"?: TBox\n  label: string\n  words?: TJIIXWord[]\n  chars?: TJIIXChar[]\n  lines?: TJIIXLine[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeElementBase<K = string> = TJIIXElementBase<JIIXELementType.Node> & {\n  id: string\n  kind: K\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeCircle = TJIIXNodeElementBase<JIIXNodeKind.Circle> & {\n  id: string\n  cx: number\n  cy: number\n  r: number\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeEllipse = TJIIXNodeElementBase<JIIXNodeKind.Ellipse> & {\n  id: string\n  cx: number\n  cy: number\n  rx: number\n  ry: number\n  orientation: number\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeRectangle = TJIIXNodeElementBase<JIIXNodeKind.Rectangle> & {\n  id: string\n  height: number\n  width: number\n  x: number\n  y: number\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeTriangle = TJIIXNodeElementBase<JIIXNodeKind.Triangle> & {\n  id: string\n  points: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeParrallelogram = TJIIXNodeElementBase<JIIXNodeKind.Parallelogram> & {\n  id: string\n  points: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodePolygon = TJIIXNodeElementBase<JIIXNodeKind.Polygon> & {\n  id: string\n  points: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeRhombus = TJIIXNodeElementBase<JIIXNodeKind.Rhombus> & {\n  id: string\n  points: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeElement =\n  TJIIXNodeCircle |\n  TJIIXNodeEllipse |\n  TJIIXNodeRectangle |\n  TJIIXNodeTriangle |\n  TJIIXNodeParrallelogram |\n  TJIIXNodePolygon |\n  TJIIXNodeRhombus\n\n/**\n * @group Exports\n */\nexport type TJIIXEdgeElementBase<K = string> = TJIIXElementBase<JIIXELementType.Edge> & {\n  kind: K\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.preprod.myscript.com/docs/interactive-ink/latest/reference/jiix/#line-item | Element line}\n */\nexport type TJIIXEdgeLine = TJIIXEdgeElementBase<JIIXEdgeKind.Line> & {\n  x1: number\n  x2: number\n  y1: number\n  y2: number\n  p1Decoration?: EdgeDecoration\n  p2Decoration?: EdgeDecoration\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXEdgePolyEdge = TJIIXEdgeElementBase<JIIXEdgeKind.PolyEdge> & {\n  edges: TJIIXEdgeLine[]\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.preprod.myscript.com/docs/interactive-ink/latest/reference/jiix/#arc-item | Element arc}\n */\nexport type TJIIXEdgeArc = TJIIXEdgeElementBase<JIIXEdgeKind.Arc> & {\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n  phi: number,\n  startAngle: number,\n  sweepAngle: number\n  startDecoration?: EdgeDecoration\n  endDecoration?: EdgeDecoration\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXEdgeElement =\n  TJIIXEdgeLine |\n  TJIIXEdgePolyEdge |\n  TJIIXEdgeArc\n\n/**\n * @group Exports\n * @remarks {@link https://developer.preprod.myscript.com/docs/interactive-ink/latest/reference/web/jiix | Exports}\n */\nexport type TJIIXElement =\n  TJIIXTextElement |\n  TJIIXNodeElement |\n  TJIIXEdgeElement\n\n/**\n * @group Exports\n */\nexport type TJIIXExport = {\n  type: string\n  id: string\n  \"bounding-box\"?: TBox\n  version: string\n  elements?: TJIIXElement[]\n  label?: string\n  words?: TJIIXWord[]\n  chars?: TJIIXChar[]\n}\n\n/**\n * @group Exports\n * @remarks\n * List all supported MIME types for export.\n *\n * Attention the MIME types supported depend on the {@link TRecognitionType | type of recognition}\n *\n * {@link https://developer.preprod.myscript.com/docs/interactive-ink/latest/reference/jiix | Documentation}\n */\nexport type TExport = {\n  /** @hidden */\n  [key: string]: unknown\n  /**\n   * @remarks vnd.myscript.jiix is used for text and raw-content exports\n   */\n  \"application/vnd.myscript.jiix\"?: TJIIXExport\n  /**\n   * @remarks text/plain is only use for text export\n   */\n  \"text/plain\"?: string\n  /**\n   * @remarks x-latex is only use for math export\n   * @see {@link https://katex.org/docs/browser.html | katex} to render\n   */\n  \"application/x-latex\"?: string\n  /**\n   * @remarks mathml+xml is only use for math export\n   * @see {@link https://www.w3.org/Math/whatIsMathML.html | Mathematical Markup Language}\n   */\n  \"application/mathml+xml\"?: string\n  /**\n   * @remarks svg+xml is only use for diagram export\n   */\n  \"image/svg+xml\"?: string\n  /**\n   * @remarks vnd.openxmlformats-officedocument.presentationml.presentation is only use for diagram export\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Blob | Blob}\n   */\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"?: Blob\n}\n","\nimport style from \"../iink.css\"\n/**\n * @group Editor\n */\nexport type EditorLayerUIInfoModal = {\n  root: HTMLDivElement,\n  text: HTMLParagraphElement\n}\n\n/**\n * @group Editor\n */\nexport type EditorLayerUIMessage = {\n  root: HTMLDivElement\n  overlay: HTMLDivElement\n  modal: EditorLayerUIInfoModal\n}\n\n/**\n * @group Editor\n */\nexport type EditorLayerUIState = {\n  root: HTMLDivElement\n  busy: HTMLDivElement\n}\n\n/**\n * @group Editor\n */\nexport type EditorLayerUI = {\n  root: HTMLDivElement\n  loader: HTMLDivElement\n  message: EditorLayerUIMessage\n  state: EditorLayerUIState\n}\n\n/**\n * @group Editor\n */\nexport class EditorLayer\n{\n  root: HTMLElement\n  ui: EditorLayerUI\n  rendering: HTMLElement\n\n  onCloseModal?: (inError?: boolean) => void\n\n  constructor(root: HTMLElement, rootClassCss: string = \"ms-editor\")\n  {\n    this.root = root\n    this.root.classList.add(rootClassCss)\n    this.rendering = this.createLayerRender()\n    this.ui = this.createLayerUI()\n  }\n\n  render(): void\n  {\n    const styleElement = document.createElement(\"style\")\n    styleElement.appendChild(document.createTextNode(style as string))\n    this.root.prepend(styleElement)\n\n    this.root.appendChild(this.rendering)\n    this.root.appendChild(this.ui.root)\n  }\n\n  createLoader(): HTMLDivElement\n  {\n    const loaderHTML = document.createElement(\"div\")\n    loaderHTML.classList.add(\"loader\")\n    loaderHTML.style.display = \"none\"\n    return loaderHTML\n  }\n  showLoader(): void\n  {\n    this.ui.loader.style.display = \"block\"\n  }\n  hideLoader(): void\n  {\n    this.ui.loader.style.display = \"none\"\n  }\n\n  createMessageOverlay(): HTMLDivElement\n  {\n    const overlay = document.createElement(\"div\")\n    overlay.classList.add(\"message-overlay\")\n    return overlay\n  }\n  closeMessageModal(): void\n  {\n    this.onCloseModal?.(this.ui.message.modal.root.classList.contains(\"error-msg\"))\n    this.hideMessageModal()\n  }\n\n  hideMessageModal(): void\n  {\n    this.ui.message.root.style.display = \"none\"\n    this.ui.message.modal.text.innerText = \"\"\n    this.ui.message.modal.root.classList.remove(\"error-msg\")\n    this.ui.message.modal.root.classList.remove(\"info-msg\")\n  }\n  createMessageModal(): EditorLayerUIInfoModal\n  {\n    const element = document.createElement(\"div\")\n    element.classList.add(\"message-modal\")\n\n    const closeBtn = document.createElement(\"button\")\n    closeBtn.classList.add(\"ms-button\", \"close\")\n    closeBtn.addEventListener(\"pointerup\", this.closeMessageModal.bind(this))\n    element.appendChild(closeBtn)\n\n    const text = document.createElement(\"p\")\n    element.appendChild(text)\n    return { root: element, text }\n  }\n  createMessage(): EditorLayerUIMessage\n  {\n    const root = document.createElement(\"div\")\n    root.classList.add(\"message-container\")\n    root.style.display = \"none\"\n\n    const overlay = this.createMessageOverlay()\n    root.appendChild(overlay)\n\n    const modal = this.createMessageModal()\n    root.appendChild(modal.root)\n\n    return {\n      root,\n      overlay,\n      modal\n    }\n  }\n  showMessageInfo(notif: { message: string, timeout?: number })\n  {\n    this.ui.message.modal.root.classList.add(\"info-msg\")\n    this.ui.message.modal.root.classList.remove(\"error-msg\")\n    this.ui.message.root.style.display = \"block\"\n    this.ui.message.modal.text.innerText = notif.message\n    setTimeout(() =>\n    {\n      this.closeMessageModal()\n    }, notif.timeout || 2500)\n  }\n  showMessageError(err: Error | string)\n  {\n    this.ui.message.modal.root.classList.add(\"error-msg\")\n    this.ui.message.modal.root.classList.remove(\"info-msg\")\n    this.ui.message.root.style.display = \"block\"\n    this.ui.message.modal.text.innerText = typeof err === \"string\" ? err : err.message\n  }\n\n  createBusy(): HTMLDivElement\n  {\n    const busy = document.createElement(\"div\")\n    busy.classList.add(\"busy\")\n    return busy\n  }\n  createState(): EditorLayerUIState\n  {\n    const root = document.createElement(\"div\")\n    root.classList.add(\"state\")\n    root.style.display = \"none\"\n\n    const busy = this.createBusy()\n    root.appendChild(busy)\n\n    return {\n      root,\n      busy\n    }\n  }\n  showState(): void\n  {\n    this.ui.state.root.style.display = \"block\"\n  }\n  hideState(): void\n  {\n    this.ui.state.root.style.display = \"none\"\n  }\n  updateState(idle: boolean): void\n  {\n    if (idle) {\n      this.hideState()\n    }\n    else {\n      this.showState()\n    }\n  }\n\n  createLayerUI(): EditorLayerUI\n  {\n    const root = document.createElement(\"div\")\n    root.classList.add(\"ms-layer-ui\")\n\n    const loader = this.createLoader()\n    root.appendChild(loader)\n\n    const message = this.createMessage()\n    root.appendChild(message.root)\n\n    const state = this.createState()\n    root.appendChild(state.root)\n\n    return {\n      root,\n      loader,\n      message,\n      state\n    }\n  }\n\n  createLayerRender(): HTMLDivElement\n  {\n    const render = document.createElement(\"div\")\n    render.classList.add(\"ms-layer-rendering\")\n    return render\n  }\n\n  destroy(): void\n  {\n    while (this.root.lastChild) {\n      this.root.removeChild(this.root.lastChild)\n    }\n  }\n}\n","import { getApiInfos, PartialDeep, TApiInfos } from \"../utils\"\nimport {\n  LoggerCategory,\n  LoggerManager,\n  DefaultLoggerConfiguration,\n  TLoggerConfiguration\n} from \"../logger\"\nimport { TServerHTTPConfiguration } from \"../recognizer\"\nimport { EditorEvent } from \"./EditorEvent\"\nimport { EditorLayer } from \"./EditorLayer\"\n\n/**\n * @hidden\n * @group Editor\n */\nexport type TEditorConfiguration = {\n  logger: TLoggerConfiguration\n}\n\n/**\n * @group Editor\n * @remarks \"INKV1\" is deprecated use \"INKV2\" instead.\n */\nexport type EditorType = \"INTERACTIVEINK\" | \"INKV1\" | \"INTERACTIVEINKSSR\" | \"INKV2\"\n\n/**\n * @hidden\n * @group Editor\n */\nexport type EditorOptionsBase = {\n  configuration: TEditorConfiguration\n  override?: {\n    cssClass?: string\n  }\n}\n\n/**\n * @hidden\n * @group Editor\n */\nexport abstract class AbstractEditor\n{\n  logger = LoggerManager.getLogger(LoggerCategory.EDITOR)\n  layers: EditorLayer\n  event: EditorEvent\n  info?: TApiInfos\n\n  #loggerConfiguration!: TLoggerConfiguration\n\n  constructor(rootElement: HTMLElement, options?: PartialDeep<EditorOptionsBase>)\n  {\n    this.loggerConfiguration = Object.assign({}, DefaultLoggerConfiguration, options?.configuration?.logger)\n    this.logger.info(\"constructor\", { rootElement, options })\n\n    this.event = new EditorEvent(rootElement)\n    this.layers = new EditorLayer(rootElement, options?.override?.cssClass || \"ms-editor\")\n\n    //@ts-ignore\n    rootElement.editor = this\n  }\n\n  get loggerConfiguration(): TLoggerConfiguration\n  {\n    return this.#loggerConfiguration\n  }\n\n  set loggerConfiguration(loggerConfig: TLoggerConfiguration)\n  {\n    this.#loggerConfiguration = Object.assign({}, DefaultLoggerConfiguration, loggerConfig)\n    LoggerManager.setLoggerLevel(this.#loggerConfiguration)\n  }\n\n  abstract initialize(): Promise<void>\n\n  abstract clear(): Promise<void>\n\n  abstract destroy(): Promise<void>\n\n  async loadInfo(server: TServerHTTPConfiguration): Promise<TApiInfos>\n  {\n    if (!this.info) {\n      this.info = await getApiInfos({ server })\n    }\n    return this.info\n  }\n}\n","import { isBetween } from \"../utils\"\nimport { TPoint, TSegment } from \"./Point\"\n\n/**\n * @group Symbol\n */\nexport type TBox = {\n  x: number,\n  y: number,\n  width: number,\n  height: number\n}\n\n/**\n * @group Symbol\n */\nexport class Box implements TBox\n{\n  x: number\n  y: number\n  width: number\n  height: number\n\n  constructor(boundindBox: TBox)\n  {\n    if (boundindBox.width < 0) throw new Error(\"width must be positive\")\n    if (boundindBox.height < 0) throw new Error(\"height must be positive\")\n    this.height = boundindBox.height\n    this.width = boundindBox.width\n    this.x = boundindBox.x\n    this.y = boundindBox.y\n  }\n\n  static createFromBoxes(boxes: TBox[]): Box\n  {\n    if (!boxes?.length) {\n      return new Box({ height: 0, width: 0, x: 0, y: 0 })\n    }\n    const x = Math.min(...boxes.map(b => b.x))\n    const width = Math.max(...boxes.map(b => b.x + b.width)) - x\n    const y = Math.min(...boxes.map(b => b.y))\n    const height = Math.max(...boxes.map(b => b.y + b.height)) - y\n    return new Box({ x, y, width, height })\n  }\n\n  static createFromPoints(points: TPoint[]): Box\n  {\n    if (!points?.length) {\n      return new Box({ height: 0, width: 0, x: 0, y: 0 })\n    }\n    const x = Math.min(...points.map(p => p.x))\n    const width = Math.max(...points.map(p => p.x)) - x\n    const y = Math.min(...points.map(p => p.y))\n    const height = Math.max(...points.map(p => p.y)) - y\n    return new Box({ x, y, width, height })\n  }\n\n  static getCorners(box: TBox): TPoint[]\n  {\n    return [\n      { x: box.x, y: box.y },\n      { x: box.x + box.width, y: box.y },\n      { x: box.x + box.width, y: box.y + box.height },\n      { x: box.x, y: box.y + box.height }\n    ]\n  }\n\n  static getCenter(box: TBox): TPoint\n  {\n    return { x: box.x + box.width / 2, y: box.y + box.height / 2 }\n  }\n\n  static getSides(box: TBox): TSegment[]\n  {\n    const vertices = Box.getCorners(box)\n    return vertices.map((p, i) =>\n    {\n      if (i === 3) {\n        return { p1: vertices[0], p2: p }\n      }\n      else {\n        return { p1: p, p2: vertices[i + 1] }\n      }\n    })\n  }\n\n  static isContained(box: TBox, wrapper: TBox): boolean\n  {\n    return isBetween(box.x, wrapper.x, wrapper.x + wrapper.width) &&\n      isBetween(box.x + box.width, wrapper.x, wrapper.x + wrapper.width) &&\n      isBetween(box.y, wrapper.y, wrapper.y + wrapper.height) &&\n      isBetween(box.y + box.height, wrapper.y, wrapper.y + wrapper.height)\n  }\n\n  static containsPoint(box: TBox, point: TPoint): boolean\n  {\n    return isBetween(point.x, box.x, box.x + box.width) &&\n      isBetween(point.y, box.y, box.y + box.height)\n  }\n\n  static contains(box: TBox, child: TBox): boolean\n  {\n    return isBetween(child.x, box.x, box.x + box.width) &&\n      isBetween(child.x + child.width, box.x, box.x + box.width) &&\n      isBetween(child.y, box.y, box.y + box.height) &&\n      isBetween(child.y + child.height, box.y, box.y + box.height)\n  }\n\n  static overlaps(box1: TBox, box2: TBox): boolean\n  {\n    if (box1.x > box2.x + box2.width) return false\n    if (box1.x + box1.width < box2.x) return false\n    if (box1.y > box2.y + box2.height) return false\n    if (box1.y + box1.height < box2.y) return false\n\n    return true\n  }\n\n  get xMin(): number\n  {\n    return this.x\n  }\n\n  get xMid(): number\n  {\n    return this.x + this.width / 2\n  }\n\n  get xMax(): number\n  {\n    return this.x + this.width\n  }\n\n  get yMin(): number\n  {\n    return this.y\n  }\n\n  get yMid(): number\n  {\n    return this.y + this.height / 2\n  }\n\n  get yMax(): number\n  {\n    return this.y + this.height\n  }\n\n  get corners(): TPoint[]\n  {\n    return Box.getCorners(this)\n  }\n\n  get center(): TPoint\n  {\n    return Box.getCenter(this)\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return [\n      ...this.corners,\n      this.center\n    ]\n  }\n\n  isContained(wrapper: TBox): boolean\n  {\n    return Box.isContained(this, wrapper)\n  }\n\n  contains(child: TBox): boolean\n  {\n    return Box.contains(this, child)\n  }\n\n  containsPoint(point: TPoint): boolean\n  {\n    return Box.containsPoint(this, point)\n  }\n\n  overlaps(boundaries: TBox): boolean\n  {\n    return Box.overlaps(this, boundaries)\n  }\n}\n","/**\n * @group Style\n * @property {String} color=#000000 Color (supported formats rgb() rgba() hsl() hsla() #rgb #rgba #rrggbb #rrggbbaa)\n * @property {String} width in px\n\n */\nexport type TStyle = {\n  [key: string]: string | number | undefined\n  width: number\n  color: string\n  opacity?: number\n  fill?: string\n}\n\n/**\n * @group Style\n * @source\n */\nexport const DefaultStyle: TStyle = {\n  width: 2,\n  color: \"#000000\",\n//   opacity: 1,\n//   fill: \"transparent\",\n} as const\n","import { PartialDeep } from \"../utils\"\nimport { TStyle } from \"./Style\"\n\n/**\n * @group Style\n * @property {String} -myscript-pen-width=1 Width of strokes and primitives in mm (no other unit is supported yet)\n * @property {String} -myscript-pen-fill-style=none\n * @property {String} -myscript-pen-fill-color=#FFFFFF00 Color filled inside the area delimited by strokes and primitives\n */\nexport type TPenStyle = PartialDeep<TStyle> & {\n  \"-myscript-pen-width\"?: number\n  \"-myscript-pen-fill-style\"?: string\n  \"-myscript-pen-fill-color\"?: string\n}\n\n/**\n * @group Style\n * @source\n */\nexport const DefaultPenStyle: TPenStyle = {\n}\n","import { TPenStyle } from \"./PenStyle\"\n\n/**\n * @group Style\n */\nexport type TThemeMath = {\n  \"font-family\": string\n}\n\n/**\n * @group Style\n */\nexport type TThemeMathSolved = {\n  \"font-family\": string\n  color: string\n}\n\n/**\n * @group Style\n */\nexport type TThemeText = {\n  \"font-family\": string,\n  \"font-size\": number\n}\n\n/**\n * @group Style\n */\nexport type TTheme = {\n  ink: TPenStyle\n  \".math\": TThemeMath\n  \".math-solved\": TThemeMathSolved\n  \".text\": TThemeText\n  [key: string]: unknown\n}\n\n/**\n * @group Style\n * @source\n */\nexport const DefaultTheme: TTheme = {\n  ink: {\n    color: \"#000000\",\n    width: 1,\n    \"-myscript-pen-width\": 1,\n    \"-myscript-pen-fill-style\": \"none\",\n    \"-myscript-pen-fill-color\": \"#FFFFFF00\"\n  },\n  \".math\": {\n    \"font-family\": \"STIXGeneral\"\n  },\n  \".math-solved\": {\n    \"font-family\": \"STIXGeneral\",\n    color: \"#A8A8A8FF\"\n  },\n  \".text\": {\n    \"font-family\": \"MyScriptInter\",\n    \"font-size\": 10\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.JsonCSS=e():t.JsonCSS=e()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"\",e(e.s=1)}([function(t,e,n){\"use strict\";function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(e,\"__esModule\",{value:!0});var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},i=function t(e){var n=this;o(this,t),this.toJSON=function(t){if(\"string\"!=typeof t)return console.error(\"Need a CSS string but given \",void 0===t?\"undefined\":r(t),t),\"Not a valid CSS..!\";var e={},o=void 0,i=void 0,u=void 0;try{t.split(\"{\").forEach(function(t){if(i=t.trim())if(-1===i.indexOf(\"}\"))e[i]={},o=i;else{i.substring(0,i.indexOf(\"}\")).split(\";\").forEach(function(t){(u=t.split(\":\"))&&2===u.length&&(e[o][u[0].trim().replace(/^\\\"|\\\"$/g,\"\")]=n._trimSemiColon(u[1].trim().replace(/^\\\"|\\\"$/g,\"\")))});try{o=i.split(\"}\")[1].trim(),o&&(e[o]={})}catch(t){}}})}catch(t){return\"Not a valid CSS..!\"}return e},this.toCSS=function(t){if(\"object\"!==(void 0===t?\"undefined\":r(t)))return console.error(\"Need a JSON object but given \",void 0===t?\"undefined\":r(t),t),\"Not a valid JSON..!\";var e=\"\";try{for(var n in t)if(t.hasOwnProperty(n)){e+=n+\" {\\n\";for(var o in t[n])t[n].hasOwnProperty(o)&&(e+=o+\": \"+t[n][o]+\";\\n\");e+=\"}\\n\"}}catch(t){return\"Not a valid JSON..!\"}return e},this._trimSemiColon=function(t){return\";\"===t.slice(-1)?t.slice(0,n.length-1):t}};e.default=i},function(t,e,n){\"use strict\";t.exports=n(0).default}])});","import JsonCSS from \"json-css\"\nimport { TTheme } from \"./Theme\"\nimport { TPenStyle } from \"./PenStyle\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst parser: any = new JsonCSS()\n\n/**\n * @group Style\n */\nexport const StyleHelper = {\n  themeToCSS(json: TTheme): string\n  {\n    return parser.toCSS(json) as string\n    // css = css.replace( /[\\r\\n]+/gm, \"\" )\n    // return css\n  },\n  themeToJSON(style: string): TTheme\n  {\n    const theme = parser.toJSON(style) as TTheme\n    theme[\".text\"][\"font-size\"] = Number(theme[\".text\"][\"font-size\"])\n    theme.ink[\"-myscript-pen-width\"] = Number(theme.ink[\"-myscript-pen-width\"])\n    theme.ink.width = Number(theme.ink.width)\n    return theme\n  },\n  penStyleToCSS (penStyle: TPenStyle): string {\n    let css = parser.toCSS({ css: penStyle }) as string\n    css = css.substring(6, css.length - 3)\n    return css\n  },\n  penStyleToJSON (penStyleString: string): TPenStyle {\n    const penStyle = parser.toJSON(`css {${penStyleString}}`).css as TPenStyle\n    if (penStyle.width) {\n      penStyle.width = Number(penStyle.width)\n    } else {\n      delete penStyle.width\n    }\n    if (penStyle[\"-myscript-pen-width\"]) {\n      penStyle[\"-myscript-pen-width\"] = Number(penStyle[\"-myscript-pen-width\"])\n    } else {\n      delete penStyle[\"-myscript-pen-width\"]\n    }\n    return penStyle\n  },\n\n  stringToJSON(style: string): {[key: string]: string}\n  {\n    return parser.toJSON(`css {${style}}`).css\n  },\n  JSONToString(style: {[key: string]: string}): string\n  {\n    return Object.entries(style).map(([k, v]) => `${k}:${v}`).join(\";\")\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { PartialDeep, mergeDeep } from \"../utils\"\nimport { DefaultPenStyle, TPenStyle } from \"./PenStyle\"\nimport { DefaultTheme, TTheme } from \"./Theme\"\n\n/**\n * @group Style\n */\nexport class StyleManager\n{\n  #penStyle!: TPenStyle\n  #theme!: TTheme\n  #penStyleClasses!: string\n  #currentPenStyle!: TPenStyle\n  #logger =  LoggerManager.getLogger(LoggerCategory.STYLE)\n\n  constructor(penStyle?: PartialDeep<TPenStyle>, theme?: PartialDeep<TTheme>)\n  {\n    this.#logger.info(\"constructor\", { penStyle, theme })\n    this.setTheme(theme)\n    this.setPenStyleClasses()\n    this.setPenStyle(penStyle)\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.#currentPenStyle || this.#penStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.#penStyle\n  }\n  setPenStyle(style?: PartialDeep<TPenStyle>)\n  {\n    this.#logger.info(\"setPenStyle\", { style })\n    this.#penStyle = mergeDeep(structuredClone(DefaultPenStyle), style || {}) as TPenStyle\n    this.#currentPenStyle = style || (this.theme[`.${ this.#penStyleClasses }`]) as TPenStyle\n    this.#logger.debug(\"setPenStyle\", this.#currentPenStyle)\n  }\n\n  get theme(): TTheme\n  {\n    return this.#theme\n  }\n  setTheme(theme?: PartialDeep<TTheme>)\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    this.#theme = mergeDeep(structuredClone(DefaultTheme), theme || {}) as TTheme\n    this.#logger.debug(\"setTheme\", this.#theme)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.#penStyleClasses\n  }\n  setPenStyleClasses(penStyleClass = \"\")\n  {\n    this.#logger.info(\"setPenStyleClasses\", { penStyleClass })\n    this.#penStyleClasses = penStyleClass\n    this.#currentPenStyle = (this.theme[`.${ this.#penStyleClasses }`]) as TPenStyle\n    this.#logger.debug(\"setPenStyleClasses\", this.#currentPenStyle)\n  }\n\n}\n","import { createUUID, mergeDeep, PartialDeep } from \"../utils\"\nimport { DefaultStyle, TStyle } from \"../style\"\n\n/**\n * @group Symbol\n */\nexport enum DecoratorKind\n{\n  Highlight = \"highlight\",\n  Surround = \"surround\",\n  Underline = \"underline\",\n  Strikethrough = \"strikethrough\",\n}\n\n/**\n * @group Symbol\n */\nexport class IIDecorator\n{\n  id: string\n  kind: DecoratorKind\n  style: TStyle\n\n  constructor(kind: DecoratorKind, style: PartialDeep<TStyle>)\n  {\n    this.id = `${ kind }-${ createUUID() }`\n    this.style = structuredClone(mergeDeep({}, DefaultStyle ,style))\n    this.kind = kind\n  }\n\n  clone(): IIDecorator\n  {\n    const clone = new IIDecorator(this.kind, structuredClone(this.style))\n    clone.id = this.id\n    return clone\n  }\n\n}\n","import { TStyle } from \"../style\"\nimport { PartialDeep } from \"../utils\"\n\n/**\n * @group Symbol\n */\nexport enum SymbolType\n{\n  Stroke = \"stroke\",\n  Group = \"group\",\n  Shape = \"shape\",\n  Edge = \"edge\",\n  Text = \"text\",\n  Eraser = \"eraser\",\n  Recognized = \"recognized\"\n}\n\n/**\n * @group Symbol\n */\nexport interface TSymbol {\n  id: string\n  creationTime: number\n  modificationDate: number\n  type: string\n  style: PartialDeep<TStyle>\n}\n","import { SELECTION_MARGIN } from \"../../Constants\"\nimport { TStyle } from \"../../style\"\nimport { findIntersectionBetween2Segment, PartialDeep } from \"../../utils\"\nimport { Box, TBox } from \"../Box\"\nimport { IISymbolBase } from \"../IISymbolBase\"\nimport { TPoint } from \"../Point\"\nimport { SymbolType } from \"../Symbol\"\n\n/**\n * @group Symbol\n */\nexport enum EdgeKind\n{\n  Line = \"line\",\n  PolyEdge = \"polyedge\",\n  Arc = \"arc\",\n}\n\n/**\n * @group Symbol\n */\nexport enum EdgeDecoration\n{\n  Arrow = \"arrow-head\"\n}\n\n/**\n * @group Symbol\n */\nexport abstract class OIEdgeBase<K = EdgeKind> extends IISymbolBase<SymbolType.Edge>\n{\n  readonly kind: K\n  readonly isClosed = false\n\n  startDecoration?: EdgeDecoration\n  endDecoration?: EdgeDecoration\n\n  constructor(\n    kind: K,\n    startDecoration?: EdgeDecoration,\n    endDecoration?: EdgeDecoration,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(SymbolType.Edge, style)\n    this.kind = kind\n\n    this.startDecoration = startDecoration\n    this.endDecoration = endDecoration\n  }\n\n  abstract get vertices(): TPoint[]\n\n  get bounds(): Box\n  {\n    const bb = Box.createFromPoints(this.vertices)\n    bb.x -= SELECTION_MARGIN / 2\n    bb.y -= SELECTION_MARGIN / 2\n    bb.height += SELECTION_MARGIN\n    bb.width += SELECTION_MARGIN\n    if (this.startDecoration || this.endDecoration) {\n      bb.x -= ((this.style.width || 1) * 2.5)\n      bb.y -= ((this.style.width || 1) * 2.5)\n      bb.height += ((this.style.width || 1) * 5)\n      bb.width += ((this.style.width || 1) * 5)\n    }\n    return bb\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.vertices\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.bounds.isContained(box) ||\n      this.edges.some(e1 => Box.getSides(box).some(e2 => !!findIntersectionBetween2Segment(e1, e2)))\n  }\n\n  abstract clone(): OIEdgeBase\n}\n","import { TStyle } from \"../../style\"\nimport { findIntersectionBetween2Segment, PartialDeep } from \"../../utils\"\nimport { Box, TBox } from \"../Box\"\nimport { IISymbolBase } from \"../IISymbolBase\"\nimport { TPoint } from \"../Point\"\nimport { SymbolType } from \"../Symbol\"\n\n/**\n * @group Symbol\n */\nexport enum ShapeKind\n{\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Polygon = \"polygon\",\n  Table = \"table\"\n}\n\n/**\n * @group Symbol\n */\nexport abstract class OIShapeBase<K = ShapeKind> extends IISymbolBase<SymbolType.Shape>\n{\n  readonly kind: K\n  readonly isClosed = true\n\n  constructor(kind: K, style?: PartialDeep<TStyle>)\n  {\n    super(SymbolType.Shape, style)\n    this.kind = kind\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromPoints(this.vertices)\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.bounds.snapPoints\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.bounds.isContained(box) ||\n      this.edges.some(e1 => Box.getSides(box).some(e2 => !!findIntersectionBetween2Segment(e1, e2)))\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { Box, TBox } from \"../Box\"\nimport { IIStroke } from \"../IIStroke\"\nimport { IISymbolBase } from \"../IISymbolBase\"\nimport { TPoint } from \"../Point\"\nimport { SymbolType } from \"../Symbol\"\n\n/**\n * @group Symbol\n */\nexport enum RecognizedKind\n{\n  Text = \"text\",\n  Line = \"line\",\n  PolyEdge = \"polyedge\",\n  Arc = \"arc\",\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Polygone = \"polygone\",\n}\n\n/**\n * @group Symbol\n */\nexport abstract class IIRecognizedBase<K = RecognizedKind> extends IISymbolBase<SymbolType.Recognized>\n{\n  readonly kind: K\n\n  strokes: IIStroke[]\n\n  constructor(\n    kind: K,\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(SymbolType.Recognized, style)\n    this.kind = kind\n    this.strokes = strokes\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.strokes.flatMap(s => s.vertices)\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromBoxes(this.strokes.map(c => c.bounds))\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.bounds.snapPoints\n  }\n\n  updateChildrenStyle(): void\n  {\n    this.strokes.forEach(child => child.style = Object.assign({}, child.style, this.style))\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.strokes.some(s => s.overlaps(box))\n  }\n\n  containsStroke(strokeId: string): boolean\n  {\n    return this.strokes.some(s => s.id === strokeId)\n  }\n\n  removeStrokes(strokeIds: string[]): IIStroke[]\n  {\n    const strokeRemoved = this.strokes.filter(s => strokeIds.includes(s.id))\n    this.strokes = this.strokes.filter(s => !strokeIds.includes(s.id))\n    return strokeRemoved\n  }\n}\n","import { TPoint } from \"../symbol\"\n\n/**\n * @group Transform\n * @remarks Represents a 2D affine transform, defined as a 3x3 matrix with an implicit third raw of <code>[ 0 0 1 ]</code>\n */\nexport type TMatrixTransform = {\n  /**\n   * @remarks scaling x\n   */\n  xx: number,\n  /**\n   * @remarks shearing x\n   */\n  yx: number,\n  /**\n   * @remarks translation x\n   */\n  tx: number,\n  /**\n   * @remarks shearing y\n   */\n  xy: number,\n  /**\n   * @remarks scaling y\n   */\n  yy: number,\n  /**\n   * @remarks translation y\n   */\n  ty: number,\n}\n\n/**\n * @group Transform\n * @remarks Represents a 2D affine transform, defined as a 3x3 matrix with an implicit third raw of <code>[ 0 0 1 ]</code>\n */\nexport class MatrixTransform implements TMatrixTransform\n{\n  xx: number\n  yx: number\n  xy: number\n  yy: number\n  tx: number\n  ty: number\n\n  constructor(xx: number, yx: number, xy: number, yy: number, tx: number, ty: number)\n  {\n    this.xx = xx\n    this.yx = yx\n    this.xy = xy\n    this.yy = yy\n    this.tx = tx\n    this.ty = ty\n  }\n\n  static identity(): MatrixTransform\n  {\n    return new MatrixTransform(1, 0, 0, 1, 0, 0)\n  }\n\n  static applyToPoint(mat: TMatrixTransform, point: TPoint): TPoint\n  {\n    return {\n      x: mat.xx * point.x + mat.xy * point.y + mat.tx,\n      y: mat.yx * point.x + mat.yy * point.y + mat.ty,\n    }\n  }\n\n  static rotation(mat: TMatrixTransform): number\n  {\n    let rotation\n\n    if (mat.xx !== 0 || mat.xy !== 0) {\n      const hypotAc = Math.hypot(mat.xx, mat.xy)\n      rotation = Math.acos(mat.xx / hypotAc) * (mat.xy > 0 ? -1 : 1)\n    } else if (mat.yx !== 0 || mat.yy !== 0) {\n      const hypotBd = Math.hypot(mat.yx, mat.yy)\n      rotation = Math.PI / 2 + Math.acos(mat.yx / hypotBd) * (mat.yy > 0 ? -1 : 1)\n    } else {\n      rotation = 0\n    }\n\n    return rotation\n  }\n\n  static toCssString(matrix: TMatrixTransform): string\n  {\n    return `matrix(${ matrix.xx }, ${ matrix.yx }, ${ matrix.xy }, ${ matrix.yy }, ${ matrix.tx }, ${ matrix.ty })`\n  }\n\n\tinvert() {\n\t\tconst { xx, yx, xy, yy, tx, ty } = this\n\t\tconst denom = xx * yy - yx * xy\n\t\tthis.xx = yy / denom\n\t\tthis.yx = yx / -denom\n\t\tthis.xy = xy / -denom\n\t\tthis.yy = xx / denom\n\t\tthis.tx = (yy * tx - xy * ty) / -denom\n\t\tthis.ty = (yx * tx - xx * ty) / denom\n\t\treturn this\n\t}\n\n  multiply(m: TMatrixTransform): MatrixTransform\n  {\n    const { xx, yx, xy, yy, tx, ty } = this\n    this.xx = xx * m.xx + xy * m.yx\n    this.yx = yx * m.xx + yy * m.yx\n    this.xy = xx * m.xy + xy * m.yy\n    this.yy = yx * m.xy + yy * m.yy\n    this.tx = xx * m.tx + xy * m.ty + tx\n    this.ty = yx * m.tx + yy * m.ty + ty\n    return this\n  }\n\n  translate(tx: number, ty: number): MatrixTransform\n  {\n    return this.multiply({ xx: 1, yx: 0, xy: 0, yy: 1, tx, ty })\n  }\n\n  rotate(radian: number, center?: TPoint): MatrixTransform\n  {\n    if (center) {\n      this.translate(center.x, center.y)\n    }\n    const cosAngle = Math.round(Math.cos(radian) * 1000) / 1000\n    const sinAngle = Math.round(Math.sin(radian) * 1000) / 1000\n    this.multiply({\n      xx: cosAngle,\n      yx: sinAngle,\n      xy: -sinAngle,\n      yy: cosAngle,\n      tx: 0,\n      ty: 0\n    })\n    if (center) {\n      this.translate(-center.x, -center.y)\n    }\n    return this\n  }\n\n  scale(x: number, y: number, center?: TPoint): MatrixTransform\n  {\n    if (center) {\n      this.translate(center.x, center.y)\n    }\n    this.multiply({\n      xx: x,\n      yx: 0,\n      xy: 0,\n      yy: y,\n      tx: 0,\n      ty: 0\n    })\n    if (center) {\n      this.translate(-center.x, -center.y)\n    }\n    return this\n  }\n\n  applyToPoint(point: TPoint): TPoint\n  {\n    return MatrixTransform.applyToPoint(this, point)\n  }\n\n  clone(): MatrixTransform\n  {\n    return new MatrixTransform(this.xx, this.yx, this.xy, this.yy, this.tx, this.ty)\n  }\n\n  toCssString(): string\n  {\n    return MatrixTransform.toCssString(this)\n  }\n\n}\n","import { PartialDeep, createUUID, findIntersectionBetween2Segment } from \"../utils\"\nimport { TBox } from \"./Box\"\nimport { TPoint, TSegment } from \"./Point\"\nimport { SymbolType, TSymbol } from \"./Symbol\"\nimport { DefaultStyle, TStyle } from \"../style\"\nimport { MatrixTransform } from \"../transform\"\n\n/**\n * @group Symbol\n */\nexport abstract class IISymbolBase<T extends string = SymbolType> implements TSymbol\n{\n  readonly type: T\n  abstract readonly isClosed: boolean\n  style: TStyle\n\n  id: string\n  creationTime: number\n  modificationDate: number\n  selected: boolean\n  deleting: boolean\n  transform: MatrixTransform\n\n  constructor(type: T, style?: PartialDeep<TStyle>)\n  {\n    this.type = type\n    this.id = `${ this.type }-${ createUUID() }`\n\n    this.creationTime = Date.now()\n    this.modificationDate = this.creationTime\n    this.selected = false\n    this.deleting = false\n\n    this.transform = MatrixTransform.identity()\n\n    this.style = Object.assign({}, DefaultStyle, style)\n    if (this.style.opacity) {\n      this.style.opacity = +this.style.opacity\n    }\n    this.style.width = +this.style.width\n  }\n\n  abstract get vertices(): TPoint[]\n\n  abstract get snapPoints(): TPoint[]\n\n  get edges(): TSegment[]\n  {\n    if (this.isClosed) {\n      return this.vertices.map((p, i) =>\n      {\n        if (i === this.vertices.length - 1) {\n          return { p1: p, p2: this.vertices[0] }\n        }\n        else {\n          return { p1: p, p2: this.vertices[i + 1] }\n        }\n      })\n    }\n    else {\n      return this.vertices.slice(0, -1).map((p, i) =>\n      {\n        return { p1: p, p2: this.vertices[i + 1] }\n      })\n    }\n  }\n\n  abstract overlaps(box: TBox): boolean\n\n  abstract clone(): IISymbolBase\n\n  abstract toJSON(): PartialDeep<IISymbolBase>\n\n  isIntersected(seg: TSegment): boolean\n  {\n    return this.edges.some(edge =>\n    {\n      return findIntersectionBetween2Segment(edge, seg)\n    })\n  }\n}\n","import { PartialDeep, isValidNumber } from \"../utils\"\n\n/**\n * @group Symbol\n */\nexport type TPoint = {\n  x: number\n  y: number\n}\n\n/**\n * @group Symbol\n */\nexport type TPointer = TPoint & {\n  t: number\n  p: number\n}\n\n/**\n * @group Symbol\n */\nexport type TSegment = {\n  p1: TPoint\n  p2: TPoint\n}\n\n/**\n * @group Symbol\n */\nexport function isValidPoint(p?: PartialDeep<TPoint>): boolean\n{\n  if (!p) return false\n  if (!isValidNumber(p.x)) return false\n  if (!isValidNumber(p.y)) return false\n  return true\n}\n","import { SELECTION_MARGIN } from \"../../Constants\"\nimport { TStyle } from \"../../style\"\nimport { PartialDeep, computePointOnEllipse, isValidNumber } from \"../../utils\"\nimport { EdgeDecoration, EdgeKind, OIEdgeBase } from \"./IIEdge\"\nimport { TPoint, isValidPoint } from \"../Point\"\n\n/**\n * @group Symbol\n */\nexport class IIEdgeArc extends OIEdgeBase<EdgeKind.Arc>\n{\n  center: TPoint\n  startAngle: number\n  sweepAngle: number\n  radiusX: number\n  radiusY: number\n  phi: number\n  protected _vertices: Map<string, TPoint[]>\n\n  constructor(\n    center: TPoint,\n    startAngle: number,\n    sweepAngle: number,\n    radiusX: number,\n    radiusY: number,\n    phi: number,\n    startDecoration?: EdgeDecoration,\n    endDecoration?: EdgeDecoration,\n    style?: PartialDeep<TStyle>,\n  )\n  {\n    super(EdgeKind.Arc, startDecoration, endDecoration, style)\n    this.center = center\n    this.startAngle = startAngle\n    this.sweepAngle = sweepAngle\n    this.radiusX = radiusX\n    this.radiusY = radiusY\n    this.phi = phi\n    this._vertices = new Map<string, TPoint[]>()\n    this._vertices.set(this.verticesId, this.computedVertices())\n  }\n\n  protected get verticesId(): string\n  {\n    return `${ this.center.x }-${ this.center.y }-${ this.startAngle }-${ this.sweepAngle }-${ this.radiusX }-${ this.radiusY }-${ this.phi }`\n  }\n\n  protected computedVertices(): TPoint[]\n  {\n    const length = Math.abs(this.sweepAngle) * Math.sqrt((Math.pow(this.radiusX, 2) + Math.pow(this.radiusY, 2)) / 2)\n    const nbVertices = Math.max(8, Math.round(length / SELECTION_MARGIN))\n    const angleStep = this.sweepAngle / nbVertices\n    const v: TPoint[] = []\n    const endAngle = this.startAngle + this.sweepAngle\n    if (this.sweepAngle > 0) {\n      for (let angle = this.startAngle; angle < endAngle; angle += angleStep) {\n        v.push(computePointOnEllipse(this.center, this.radiusX, this.radiusY, this.phi, angle))\n      }\n    } else {\n      for (let angle = this.startAngle; angle > endAngle; angle += angleStep) {\n        v.push(computePointOnEllipse(this.center, this.radiusX, this.radiusY, this.phi, angle))\n      }\n    }\n    v.push(computePointOnEllipse(this.center, this.radiusX, this.radiusY, this.phi, endAngle))\n    return v\n  }\n\n  get vertices(): TPoint[]\n  {\n    if (!this._vertices.has(this.verticesId)) {\n      this._vertices.set(this.verticesId, this.computedVertices())\n    }\n    return this._vertices.get(this.verticesId)!\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return [\n      this.vertices[0],\n      this.vertices.at(-1)!\n    ]\n  }\n\n  clone(): IIEdgeArc\n  {\n    const clone = new IIEdgeArc(\n      structuredClone(this.center),\n      this.startAngle,\n      this.sweepAngle,\n      this.radiusX,\n      this.radiusY,\n      this.phi,\n      this.startDecoration,\n      this.endDecoration,\n      structuredClone(this.style)\n    )\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIEdgeArc>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      center: this.center,\n      startAngle: this.startAngle,\n      sweepAngle: this.sweepAngle,\n      radiusX: this.radiusX,\n      radiusY: this.radiusY,\n      phi: this.phi,\n      startDecoration: this.startDecoration,\n      style: this.style,\n      endDecoration: this.endDecoration,\n    }\n  }\n\n  static create(partial: PartialDeep<IIEdgeArc>): IIEdgeArc\n  {\n    if (!isValidPoint(partial?.center)) throw new Error(`Unable to create a arc, center point is invalid`)\n    if (!isValidNumber(partial?.startAngle)) throw new Error(`Unable to create a arc, startAngle is invalid`)\n    if (!isValidNumber(partial?.sweepAngle)) throw new Error(`Unable to create a arc, sweepAngle is invalid`)\n    if (!isValidNumber(partial?.radiusX)) throw new Error(`Unable to create a arc, radiusX is invalid`)\n    if (!isValidNumber(partial?.radiusY)) throw new Error(`Unable to create a arc, radiusY is invalid`)\n    const arc = new IIEdgeArc(\n      partial?.center as TPoint,\n      partial.startAngle!,\n      partial.sweepAngle!,\n      partial.radiusX!,\n      partial.radiusY!,\n      partial.phi || 0,\n      partial.startDecoration,\n      partial.endDecoration,\n      partial.style\n    )\n    if (partial.id) {\n      arc.id = partial.id\n    }\n    return arc\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { EdgeDecoration, EdgeKind, OIEdgeBase } from \"./IIEdge\"\nimport { TPoint, isValidPoint } from \"../Point\"\n\n/**\n * @group Symbol\n */\nexport class IIEdgeLine extends OIEdgeBase<EdgeKind.Line>\n{\n  start: TPoint\n  end: TPoint\n\n  constructor(\n    start: TPoint,\n    end: TPoint,\n    startDecoration?: EdgeDecoration,\n    endDecoration?: EdgeDecoration,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(EdgeKind.Line, startDecoration, endDecoration, style)\n    this.start = start\n    this.end = end\n  }\n\n  get vertices(): TPoint[]\n  {\n    return [\n      this.start,\n      this.end\n    ]\n  }\n\n  clone(): IIEdgeLine\n  {\n    const clone = new IIEdgeLine(structuredClone(this.start), structuredClone(this.end), this.startDecoration, this.endDecoration, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIEdgeLine>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      start: this.start,\n      end: this.end,\n      style: this.style,\n      startDecoration: this.startDecoration,\n      endDecoration: this.endDecoration,\n    }\n  }\n\n  static create(partial: PartialDeep<IIEdgeLine>): IIEdgeLine\n  {\n    if (!isValidPoint(partial?.start)) throw new Error(`Unable to create a arc, start point is invalid`)\n    if (!isValidPoint(partial?.end)) throw new Error(`Unable to create a arc, end point is invalid`)\n    const line = new IIEdgeLine(partial?.start as TPoint, partial?.end as TPoint, partial.startDecoration, partial.endDecoration, partial.style)\n    if (partial.id) {\n      line.id = partial.id\n    }\n    return line\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { EdgeDecoration, EdgeKind, OIEdgeBase } from \"./IIEdge\"\nimport { TPoint, isValidPoint } from \"../Point\"\n\n/**\n * @group Symbol\n */\nexport class IIEdgePolyLine extends OIEdgeBase<EdgeKind.PolyEdge>\n{\n  points: TPoint[]\n\n  constructor(\n    points: TPoint[],\n    startDecoration?: EdgeDecoration,\n    endDecoration?: EdgeDecoration,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(EdgeKind.PolyEdge, startDecoration, endDecoration, style)\n    this.points = points\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.points\n  }\n\n  clone(): IIEdgePolyLine\n  {\n    const clone = new IIEdgePolyLine(structuredClone(this.points),this.startDecoration, this.endDecoration, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIEdgePolyLine>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      points: this.points,\n      style: this.style,\n      startDecoration: this.startDecoration,\n      endDecoration: this.endDecoration,\n    }\n  }\n\n  static create(partial: PartialDeep<IIEdgePolyLine>): IIEdgePolyLine\n  {\n    if (!partial?.points?.map(p => isValidPoint(p))) throw new Error(`Unable to create a PolyLine, points are invalid`)\n    const polyline = new IIEdgePolyLine(partial?.points as TPoint[], partial.startDecoration, partial.endDecoration, partial.style)\n    if (partial.id) {\n      polyline.id = partial.id\n    }\n    return polyline\n  }\n}\n","import { SELECTION_MARGIN } from \"../../Constants\"\nimport { TStyle } from \"../../style\"\nimport { PartialDeep, findIntersectBetweenSegmentAndCircle, isValidNumber, computeRotatedPoint } from \"../../utils\"\nimport { TPoint, isValidPoint } from \"../Point\"\nimport { OIShapeBase, ShapeKind } from \"./IIShape\"\nimport { Box, TBox } from \"../Box\"\n\n/**\n * @group Symbol\n */\nexport class IIShapeCircle extends OIShapeBase<ShapeKind.Circle>\n{\n  center: TPoint\n  radius: number\n  protected _vertices: Map<string, TPoint[]>\n  protected _bounds: Map<string, Box>\n\n  constructor(\n    center: TPoint,\n    radius: number,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(ShapeKind.Circle, style)\n    this.center = center\n    this.radius = radius\n    this._vertices = new Map<string, TPoint[]>()\n    this._vertices.set(this.verticesId, this.computedVertices())\n    this._bounds = new Map<string, Box>()\n    this._bounds.set(this.verticesId, this.computedBondingBox())\n  }\n\n  protected get verticesId(): string\n  {\n    return `${ this.center.x }-${ this.center.y }-${ this.radius }`\n  }\n\n  protected computedVertices(): TPoint[]\n  {\n    const firstPoint: TPoint = {\n      x: this.center.x,\n      y: this.radius + this.center.y\n    }\n    const perimeter = 2 * Math.PI * this.radius\n    const nbPoint = Math.max(8, Math.round(perimeter / SELECTION_MARGIN))\n    const points: TPoint[] = []\n    for (let i = 0; i < nbPoint; i++) {\n      const rad = 2 * Math.PI * (i / nbPoint)\n      points.push(computeRotatedPoint(firstPoint, this.center, rad))\n    }\n    return points\n  }\n\n  protected computedBondingBox(): Box\n  {\n    const boundingBox: TBox = {\n      x: this.center.x - this.radius,\n      y: this.center.y - this.radius,\n      height: this.radius * 2,\n      width: this.radius * 2\n    }\n    return new Box(boundingBox)\n  }\n\n  get bounds(): Box\n  {\n    if (!this._bounds.has(this.verticesId)) {\n      this._bounds.set(this.verticesId, this.computedBondingBox())\n    }\n    return this._bounds.get(this.verticesId)!\n  }\n\n  get vertices(): TPoint[]\n  {\n    if (!this._vertices.has(this.verticesId)) {\n      this._vertices.set(this.verticesId, this.computedVertices())\n    }\n    return this._vertices.get(this.verticesId)!\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.bounds.isContained(box) ||\n      Box.getSides(box).some(seg => findIntersectBetweenSegmentAndCircle(seg, this.center, this.radius).length)\n  }\n\n  clone(): IIShapeCircle\n  {\n    const clone = new IIShapeCircle(structuredClone(this.center), this.radius, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIShapeCircle>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      center: this.center,\n      radius: this.radius,\n      style: this.style,\n    }\n  }\n\n  static createBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapeCircle\n  {\n    const center = {\n      x: (origin.x + target.x) / 2,\n      y: (origin.y + target.y) / 2\n    }\n\n    const width = Math.abs(origin.x - target.x)\n    const height = Math.abs(origin.y - target.y)\n    const radius = Math.min(width, height) / 2\n    return new IIShapeCircle(center, radius, style)\n  }\n\n  static updateBetweenPoints(circle: IIShapeCircle, origin: TPoint, target: TPoint): IIShapeCircle\n  {\n    circle.center = {\n      x: (origin.x + target.x) / 2,\n      y: (origin.y + target.y) / 2\n    }\n    const width = Math.abs(origin.x - target.x)\n    const height = Math.abs(origin.y - target.y)\n    circle.radius = Math.min(width, height) / 2\n    return circle\n  }\n\n  static create(partial: PartialDeep<IIShapeCircle>): IIShapeCircle\n  {\n    if (!isValidPoint(partial.center)) throw new Error(`Unable to create circle, center is invalid`)\n    if (!isValidNumber(partial.radius)) throw new Error(`Unable to create circle, radius is undefined`)\n    const circle = new IIShapeCircle(partial.center as TPoint, partial.radius!, partial.style)\n    if (partial.id) {\n      circle.id = partial.id\n    }\n    return circle\n  }\n}\n","import { SELECTION_MARGIN } from \"../../Constants\"\nimport { TStyle } from \"../../style\"\nimport { PartialDeep, computePointOnEllipse, findIntersectionBetween2Segment, isValidNumber, } from \"../../utils\"\nimport { TPoint, isValidPoint } from \"../Point\"\nimport { OIShapeBase, ShapeKind } from \"./IIShape\"\nimport { Box, TBox } from \"../Box\"\n\n/**\n * @group Symbol\n */\nexport class IIShapeEllipse extends OIShapeBase<ShapeKind.Ellipse>\n{\n  center: TPoint\n  radiusX: number\n  radiusY: number\n  orientation: number\n  protected _vertices: Map<string, TPoint[]>\n\n  constructor(\n    center: TPoint,\n    radiusX: number,\n    radiusY: number,\n    orientation: number,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(ShapeKind.Ellipse, style)\n    this.center = center\n    this.radiusX = radiusX\n    this.radiusY = radiusY\n    this.orientation = orientation\n    this._vertices = new Map<string, TPoint[]>()\n  }\n\n  protected get verticesId(): string\n  {\n    return `${ this.center.x }-${ this.center.y }-${ this.radiusX }-${ this.radiusY }-${ this.orientation }`\n  }\n\n  protected computedVertices(): TPoint[]\n  {\n    const points: TPoint[] = []\n    const perimeter = 2 * Math.PI * Math.sqrt((Math.pow(this.radiusX, 2) + Math.pow(this.radiusY, 2)) / 2)\n    const nbPoint = Math.max(8, Math.round(perimeter / SELECTION_MARGIN))\n    for (let i = 0; i < nbPoint; i++) {\n      const theta = 2 * Math.PI * (i / nbPoint)\n      points.push(computePointOnEllipse(this.center, this.radiusX, this.radiusY, this.orientation, theta))\n    }\n\n    return points\n  }\n\n  get vertices(): TPoint[]\n  {\n    if (!this._vertices.has(this.verticesId)) {\n      this._vertices.set(this.verticesId, this.computedVertices())\n    }\n    return this._vertices.get(this.verticesId)!\n  }\n\n  overlaps(box: TBox): boolean\n  {\n\n    return this.bounds.isContained(box) ||\n      this.edges.some(e1 => Box.getSides(box).some(e2 => !!findIntersectionBetween2Segment(e1, e2)))\n  }\n\n  clone(): IIShapeEllipse\n  {\n    const clone = new IIShapeEllipse(structuredClone(this.center), this.radiusX, this.radiusY, this.orientation, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIShapeEllipse>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      center: this.center,\n      orientation: this.orientation,\n      radiusX: this.radiusX,\n      radiusY: this.radiusY,\n      style: this.style,\n    }\n  }\n\n  static createBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapeEllipse\n  {\n    const center = {\n      x: (origin.x + target.x) / 2,\n      y: (origin.y + target.y) / 2\n    }\n    const radiusX = Math.abs(origin.x - target.x) / 2\n    const radiusY = Math.abs(origin.y - target.y) / 2\n    return new IIShapeEllipse(center, radiusX, radiusY, 0, style)\n  }\n\n  static updateBetweenPoints(ellipse: IIShapeEllipse, origin: TPoint, target: TPoint): IIShapeEllipse\n  {\n    ellipse.center = {\n      x: (origin.x + target.x) / 2,\n      y: (origin.y + target.y) / 2\n    }\n    ellipse.radiusX = Math.abs(origin.x - target.x) / 2\n    ellipse.radiusY = Math.abs(origin.y - target.y) / 2\n    return ellipse\n  }\n\n  static create(partial: PartialDeep<IIShapeEllipse>): IIShapeEllipse\n  {\n    if (!isValidPoint(partial.center)) throw new Error(`Unable to create ellipse, center is undefined`)\n    if (!isValidNumber(partial.radiusX)) throw new Error(`Unable to create ellipse, radiusX is undefined`)\n    if (!isValidNumber(partial.radiusY)) throw new Error(`Unable to create ellipse, radiusY is undefined`)\n    const ellipse = new IIShapeEllipse(partial.center as TPoint, partial.radiusX!, partial.radiusY!, partial.orientation || 0, partial.style)\n    if (partial.id) {\n      ellipse.id = partial.id\n    }\n    return ellipse\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { TPoint, isValidPoint } from \"../Point\"\nimport { OIShapeBase, ShapeKind } from \"./IIShape\"\nimport { Box } from \"../Box\"\nimport { PartialDeep } from \"../../utils\"\n\n/**\n * @group Symbol\n */\nexport class IIShapePolygon extends OIShapeBase<ShapeKind.Polygon>\n{\n  points: TPoint[]\n\n  constructor(points: TPoint[], style?: PartialDeep<TStyle>)\n  {\n    super(ShapeKind.Polygon, style)\n    this.points = points\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.points\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromPoints(this.vertices)\n  }\n\n  clone(): IIShapePolygon\n  {\n    const clone = new IIShapePolygon(structuredClone(this.points), structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIShapePolygon>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      points: this.points,\n      style: this.style,\n    }\n  }\n\n  static create(partial: PartialDeep<IIShapePolygon>): IIShapePolygon\n  {\n    if (!partial?.points || partial?.points?.length < 3) throw new Error(`Unable to create polygon at least 3 points required`)\n    if (partial?.points?.some(p => !isValidPoint(p))) throw new Error(`Unable to create a polygon, one or more points are invalid`)\n    const polygon = new IIShapePolygon(partial.points as TPoint[], partial.style)\n    if (partial.id) {\n      polygon.id = partial.id\n    }\n    return polygon\n  }\n\n  static createTriangleBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapePolygon\n  {\n    const points: TPoint[] = [\n      { x: origin.x, y: origin.y },\n      { x: target.x, y: origin.y },\n      { x: (origin.x + target.x) / 2, y: target.y }\n    ]\n    return new IIShapePolygon(points, style)\n  }\n  static updateTriangleBetweenPoints(poly: IIShapePolygon, origin: TPoint, target: TPoint): IIShapePolygon\n  {\n    poly.points = [\n      { x: origin.x, y: origin.y },\n      { x: target.x, y: origin.y },\n      { x: (origin.x + target.x) / 2, y: target.y }\n    ]\n    poly.modificationDate = Date.now()\n    return poly\n  }\n\n  static createParallelogramBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapePolygon\n  {\n    const points: TPoint[] = [\n      { x: origin.x, y: origin.y },\n      { x: origin.x + (target.x - origin.x) * 0.75, y: origin.y },\n      { x: target.x, y: target.y },\n      { x: origin.x + (target.x - origin.x) * 0.25, y: target.y },\n    ]\n    return new IIShapePolygon(points, style)\n  }\n  static updateParallelogramBetweenPoints(poly: IIShapePolygon, origin: TPoint, target: TPoint): IIShapePolygon\n  {\n    const points: TPoint[] = [\n      { x: origin.x, y: origin.y },\n      { x: origin.x + (target.x - origin.x) * 0.75, y: origin.y },\n      { x: target.x, y: target.y },\n      { x: origin.x + (target.x - origin.x) * 0.25, y: target.y },\n    ]\n    poly.points = points\n    poly.modificationDate = Date.now()\n    return poly\n  }\n\n  static createRectangleBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapePolygon\n  {\n    const box = Box.createFromPoints([origin, target])\n    const points: TPoint[] = [\n      { x: box.xMin, y: box.yMin },\n      { x: box.xMax, y: box.yMin },\n      { x: box.xMax, y: box.yMax },\n      { x: box.xMin, y: box.yMax },\n    ]\n    return new IIShapePolygon(points, style)\n  }\n  static updateRectangleBetweenPoints(poly: IIShapePolygon, origin: TPoint, target: TPoint): IIShapePolygon\n  {\n    const box = Box.createFromPoints([origin, target])\n    const points: TPoint[] = [\n      { x: box.xMin, y: box.yMin },\n      { x: box.xMax, y: box.yMin },\n      { x: box.xMax, y: box.yMax },\n      { x: box.xMin, y: box.yMax },\n    ]\n    poly.points = points\n    poly.modificationDate = Date.now()\n    return poly\n  }\n\n  static createRhombusBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapePolygon\n  {\n    const box = Box.createFromPoints([origin, target])\n    const points: TPoint[] = [\n      { x: box.xMid, y: box.yMin },\n      { x: box.xMax, y: box.yMid },\n      { x: box.xMid, y: box.yMax },\n      { x: box.xMin, y: box.yMid },\n    ]\n    return new IIShapePolygon(points, style)\n  }\n\n  static updateRhombusBetweenPoints(poly: IIShapePolygon, origin: TPoint, target: TPoint): IIShapePolygon\n  {\n    const box = Box.createFromPoints([origin, target])\n    const points: TPoint[] = [\n      { x: box.xMid, y: box.yMin },\n      { x: box.xMax, y: box.yMid },\n      { x: box.xMid, y: box.yMax },\n      { x: box.xMin, y: box.yMid },\n    ]\n    poly.points = points\n    poly.modificationDate = Date.now()\n    return poly\n  }\n}\n","import { TStyle } from \"../style\"\nimport { PartialDeep, computeDistance, getClosestPoint } from \"../utils\"\nimport { TStroke, TStrokeToSend } from \"./Stroke\"\nimport { TPoint, TPointer } from \"./Point\"\nimport { Box, TBox } from \"./Box\"\nimport { SymbolType } from \"./Symbol\"\nimport { IIDecorator } from \"./IIDecorator\"\nimport { IISymbolBase } from \"./IISymbolBase\"\n\n/**\n * @group Symbol\n */\nexport class IIStroke extends IISymbolBase<SymbolType.Stroke>\n{\n  readonly isClosed = false\n\n  pointerType: string\n  length: number\n  decorators: IIDecorator[]\n  pointers: Array<TPointer>\n\n  constructor(style?: PartialDeep<TStyle>, pointerType = \"pen\")\n  {\n    super(SymbolType.Stroke, style)\n\n    this.pointerType = pointerType\n    this.pointers = []\n    this.decorators = []\n    this.length = 0\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromPoints(this.vertices)\n  }\n\n  static split(strokeToSplit: IIStroke, i: number): { before: IIStroke, after: IIStroke }\n  {\n    const before = new IIStroke(strokeToSplit.style, strokeToSplit.pointerType)\n    before.pointers = strokeToSplit.pointers.slice(0, i)\n\n    const after = new IIStroke(strokeToSplit.style, strokeToSplit.pointerType)\n    after.pointers = strokeToSplit.pointers.slice(i)\n\n    return { before, after }\n  }\n\n  static substract(stroke: IIStroke, partStroke: IIStroke): { before?: IIStroke, after?: IIStroke }\n  {\n    if (!partStroke.length) return { before: stroke }\n    const result: { before?: IIStroke, after?: IIStroke } = {}\n    const lastPointBeforeStroke = {\n      x: partStroke.pointers[0].x as number,\n      y: partStroke.pointers[0].y as number\n    }\n    const closestLastPointBeforeStroke = getClosestPoint(stroke.pointers, lastPointBeforeStroke)\n    if (closestLastPointBeforeStroke.index > -1) {\n      const newStrokes = IIStroke.split(stroke, closestLastPointBeforeStroke.index)\n      result.before = newStrokes.before\n      result.after = newStrokes.after\n    }\n    const strokeAfter = result.after || stroke\n    const firstPointAfterStroke = {\n      x: partStroke.pointers.at(-1)!.x as number,\n      y: partStroke.pointers.at(-1)!.y as number\n    }\n    const closestFirstPointStrokeAfter = getClosestPoint(strokeAfter.pointers, firstPointAfterStroke)\n    if (closestFirstPointStrokeAfter.index > -1) {\n      const newStrokes = IIStroke.split(strokeAfter, closestFirstPointStrokeAfter.index)\n      result.after = newStrokes.after\n    }\n    if (!result.before?.pointers.length) result.before = undefined\n    if (!result.after?.pointers.length) result.after = undefined\n    return result\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.bounds.snapPoints\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.pointers\n  }\n\n  protected computePressure(distance: number): number\n  {\n    let ratio = 1.0\n    if (distance === this.length) {\n      ratio = 1.0\n    } else if (distance < 10) {\n      ratio = 0.2 + Math.pow(0.1 * distance, 0.4)\n    } else if (distance > this.length - 10) {\n      ratio = 0.2 + Math.pow(0.1 * (this.length - distance), 0.4)\n    }\n    const pressure = ratio * Math.max(0.1, 1.0 - (0.1 * Math.sqrt(distance)))\n    return isNaN(pressure) ? 0.5 : Math.round(pressure * 100) / 100\n  }\n\n  protected filterPointByAcquisitionDelta(point: TPointer): boolean\n  {\n    const lastPointer = this.pointers.at(-1)\n    const delta: number = (2 + ((this.style.width || 1) / 4))\n    return !lastPointer ||\n      Math.abs(lastPointer.x - point.x) >= delta ||\n      Math.abs(lastPointer.y - point.y) >= delta\n  }\n\n  addPointer(pointer: TPointer): void\n  {\n    if (this.filterPointByAcquisitionDelta(pointer)) {\n      const lastPointer = this.pointers.at(-1)\n      const distance = lastPointer ? computeDistance(pointer, lastPointer) : 0\n      this.length += distance\n      pointer.p = this.computePressure(distance)\n      this.pointers.push(pointer)\n      this.modificationDate = Date.now()\n    }\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.pointers.some(p =>\n    {\n      return p.x >= box.x && p.x <= box.x + box.width\n        && p.y >= box.y && p.y <= box.y + box.height\n    })\n  }\n\n  clone(): IIStroke\n  {\n    const clone = new IIStroke(this.style, this.pointerType)\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.pointers = structuredClone(this.pointers)\n    clone.decorators = this.decorators.map(d => d.clone())\n    clone.length = this.length\n    return clone\n  }\n\n  formatToSend(): TStrokeToSend\n  {\n    const json: TStrokeToSend = {\n      id: this.id,\n      pointerType: this.pointerType,\n      p: [],\n      t: [],\n      x: [],\n      y: []\n    }\n    this.pointers.forEach(p =>\n    {\n      json.p.push(p.p)\n      json.t.push(p.t)\n      json.x.push(p.x)\n      json.y.push(p.y)\n    })\n    return json\n  }\n\n  toJSON(): PartialDeep<IIStroke>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      pointers: this.pointers,\n      style: this.style,\n      decorators: this.decorators.length ? this.decorators : undefined\n    }\n  }\n\n  static create(partial: PartialDeep<IIStroke>): IIStroke\n  {\n    if (!partial.pointers?.length) {\n      throw new Error(`not pointers`)\n    }\n    const stroke = new IIStroke(partial.style, partial.pointerType)\n    if (partial.id) {\n      stroke.id = partial.id\n    }\n    const errors: string[] = []\n    let flag = true\n    partial.pointers?.forEach((pp, pIndex) =>\n    {\n      if (!pp) {\n        errors.push(`no pointer at ${ pIndex }`)\n        flag = false\n        return\n      }\n      const pointer: TPointer = {\n        p: pp.p || 1,\n        t: pp.t || pIndex,\n        x: 0,\n        y: 0\n      }\n      if (pp?.x == undefined || pp?.x == null) {\n        errors.push(`no x at pointer at ${ pIndex }`)\n        flag = false\n        return\n      }\n      else {\n        pointer.x = pp.x\n      }\n      if (pp?.y == undefined || pp?.y == null) {\n        errors.push(`no y at pointer at ${ pIndex }`)\n        flag = false\n        return\n      }\n      else {\n        pointer.y = pp.y\n      }\n      if (flag) {\n        stroke.addPointer(pointer)\n      }\n    })\n\n    if (errors.length) {\n      throw new Error(errors.join(\" and \"))\n    }\n    if (partial.decorators?.length) {\n      partial.decorators.forEach(d => {\n        if(d?.kind) {\n          stroke.decorators.push(new IIDecorator(d.kind, Object.assign({}, stroke.style, d.style)))\n        }\n      })\n    }\n    return stroke\n  }\n}\n\n/**\n * @group Symbol\n * @group Utils\n */\nexport function convertPartialStrokesToOIStrokes(json: PartialDeep<TStroke>[]): IIStroke[]\n{\n  const errors: string[] = []\n  const strokes: IIStroke[] = []\n  json.forEach((j, i) =>\n  {\n    try {\n      strokes.push(IIStroke.create(j as PartialDeep<IIStroke>))\n    } catch (e) {\n      errors.push(`stroke ${ i + 1 } has ${ (e as Error).message }`)\n    }\n  })\n\n  if (errors.length) {\n    throw new Error(errors.join(\"\\n\"))\n  }\n\n  return strokes\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedArc extends IIRecognizedBase<RecognizedKind.Arc>\n{\n  readonly isClosed = false\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Arc, strokes, style)\n  }\n\n  clone(): IIRecognizedArc\n  {\n    const clone = new IIRecognizedArc(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedArc>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedArc>): IIRecognizedArc\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n    const ws = new IIRecognizedArc(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedCircle extends IIRecognizedBase<RecognizedKind.Circle>\n{\n  readonly isClosed = true\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Circle, strokes, style)\n  }\n\n  clone(): IIRecognizedCircle\n  {\n    const clone = new IIRecognizedCircle(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedCircle>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedCircle>): IIRecognizedCircle\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedCircle(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedEllipse extends IIRecognizedBase<RecognizedKind.Ellipse>\n{\n  readonly isClosed = true\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Ellipse, strokes, style)\n  }\n\n  clone(): IIRecognizedEllipse\n  {\n    const clone = new IIRecognizedEllipse(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedEllipse>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedEllipse>): IIRecognizedEllipse\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedEllipse(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedLine extends IIRecognizedBase<RecognizedKind.Line>\n{\n  readonly isClosed = false\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Line, strokes, style)\n  }\n\n  clone(): IIRecognizedLine\n  {\n    const clone = new IIRecognizedLine(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedLine>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedLine>): IIRecognizedLine\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedLine(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedPolyLine extends IIRecognizedBase<RecognizedKind.PolyEdge>\n{\n  readonly isClosed = false\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.PolyEdge, strokes, style)\n  }\n\n  clone(): IIRecognizedPolyLine\n  {\n    const clone = new IIRecognizedPolyLine(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedPolyLine>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedPolyLine>): IIRecognizedPolyLine\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedPolyLine(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedPolygon extends IIRecognizedBase<RecognizedKind.Polygone>\n{\n  readonly isClosed = true\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Polygone, strokes, style)\n  }\n\n  clone(): IIRecognizedPolygon\n  {\n    const clone = new IIRecognizedPolygon(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedPolygon>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedPolygon>): IIRecognizedPolygon\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedPolygon(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIDecorator } from \"../IIDecorator\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedText extends IIRecognizedBase<RecognizedKind.Text>\n{\n  readonly isClosed = false\n\n  decorators: IIDecorator[]\n\n  baseline: number\n  xHeight: number\n  label?: string\n\n  constructor(\n    strokes: IIStroke[],\n    lines: { baseline: number, xHeight: number },\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Text, strokes, style)\n    this.baseline = lines.baseline\n    this.xHeight = lines.xHeight\n    this.decorators = []\n  }\n\n  clone(): IIRecognizedText\n  {\n    const clone = new IIRecognizedText(this.strokes.map(s => s.clone()), { baseline: this.baseline, xHeight: this.xHeight }, structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.label = this.label\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.decorators = this.decorators.map(d => d.clone())\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedText>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      label: this.label,\n      baseline: this.baseline,\n      xHeight: this.xHeight,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n      decorators: this.decorators.length ? JSON.parse(JSON.stringify(this.decorators)) : undefined\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedText>): IIRecognizedText\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n    const line = {\n      baseline: partial.baseline || 0,\n      xHeight: partial.xHeight || 0\n    }\n    const ws = new IIRecognizedText(strokes, line, partial.style)\n\n    if (partial.decorators?.length) {\n      partial.decorators.forEach(d =>\n      {\n        if (d?.kind) {\n          ws.decorators.push(new IIDecorator(d.kind, Object.assign({}, ws.style, d.style)))\n        }\n      })\n    }\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../style\"\nimport { PartialDeep } from \"../utils\"\nimport { TPoint } from \"./Point\"\nimport { Box, TBox } from \"./Box\"\nimport { SymbolType } from \"./Symbol\"\nimport { IIDecorator } from \"./IIDecorator\"\nimport { IISymbolBase } from \"./IISymbolBase\"\nimport { IIStroke } from \"./IIStroke\"\nimport { IIText } from \"./IIText\"\nimport { TIISymbol } from \".\"\n\n/**\n * @group Symbol\n */\nexport class IISymbolGroup extends IISymbolBase<SymbolType.Group>\n{\n  readonly isClosed = false\n\n  children: TIISymbol[]\n  decorators: IIDecorator[]\n\n  constructor(\n    children: TIISymbol[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(SymbolType.Group, style)\n    this.children = children\n    this.decorators = []\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.bounds.snapPoints\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.children.flatMap(s => s.vertices)\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromBoxes(this.children.map(c => c.bounds))\n  }\n\n  updateChildrenStyle(): void\n  {\n    this.children.forEach(child => {\n      child.style = Object.assign({}, child.style, this.style)\n      switch (child.type) {\n        case SymbolType.Group:\n          child.updateChildrenStyle()\n          break\n        case SymbolType.Text:\n          child.chars.forEach(c =>\n          {\n            if (child.style.color) {\n              c.color = child.style.color\n            }\n          })\n          break\n        case SymbolType.Recognized:\n          child.updateChildrenStyle()\n          break\n      }\n\n    })\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.children.some(s => s.overlaps(box))\n  }\n\n  containsSymbol(strokeId: string): boolean\n  {\n    return IISymbolGroup.containsSymbol(this, strokeId)\n  }\n\n  containsOnlyStroke(): boolean\n  {\n    return IISymbolGroup.containsOnlyStroke(this)\n  }\n\n  extractText(): IIText[]\n  {\n    return IISymbolGroup.extractText(this)\n  }\n\n  extractStrokes(): IIStroke[]\n  {\n    return IISymbolGroup.extractStrokes(this)\n  }\n\n  removeChilds(symbolIds: string[]): IISymbolGroup\n  {\n    return IISymbolGroup.removeChilds(this, symbolIds)\n  }\n\n  static containsOnlyStroke(group: IISymbolGroup): boolean\n  {\n    return group.children.every(s =>\n    {\n      if (s.type === SymbolType.Group) {\n        return IISymbolGroup.containsOnlyStroke(s as IISymbolGroup)\n      }\n      if (s.type === SymbolType.Stroke) {\n        return true\n      }\n      return false\n    })\n  }\n\n  static extractText(group: IISymbolGroup): IIText[]\n  {\n    const texts: IIText[] = []\n    group.children.forEach(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Text:\n          texts.push(s)\n          break;\n        case SymbolType.Group:\n          texts.push(...IISymbolGroup.extractText(s))\n          break;\n      }\n    })\n    return texts\n  }\n\n  static extractStrokes(group: IISymbolGroup): IIStroke[]\n  {\n    const strokes: IIStroke[] = []\n    group.children.forEach(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Stroke:\n          strokes.push(s)\n          break;\n        case SymbolType.Recognized:\n          strokes.push(...s.strokes)\n          break;\n        case SymbolType.Group:\n          strokes.push(...IISymbolGroup.extractStrokes(s))\n          break;\n      }\n    })\n    return strokes\n  }\n\n  static containsSymbol(group: IISymbolGroup, symbolId: string): boolean\n  {\n    return group.children.some(symbol =>\n    {\n      if (symbol.id === symbolId) return true\n      if (symbol.type === SymbolType.Group) {\n        return IISymbolGroup.containsSymbol(symbol, symbolId)\n      }\n      else if (symbol.type === SymbolType.Recognized) {\n        return symbol.containsStroke(symbolId)\n      }\n      return false\n    })\n  }\n\n  static removeChilds(group: IISymbolGroup, symbolIds: string[]): IISymbolGroup\n  {\n    group.children = group.children.filter(s => !symbolIds.includes(s.id))\n    const symbolsToRemove = group.children.slice()\n    symbolsToRemove.forEach(s =>\n    {\n      if (s.type === SymbolType.Group) {\n        if (!s.removeChilds(symbolIds).children.length) {\n          group.children = group.children.filter(s1 => s1.id !== s.id)\n        }\n      }\n      else if (s.type === SymbolType.Recognized) {\n        s.removeStrokes(symbolIds)\n        if (!s.strokes.length) {\n          group.removeChilds([s.id])\n        }\n      }\n    })\n    return group\n  }\n\n  clone(): IISymbolGroup\n  {\n    const clone = new IISymbolGroup(this.children.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.decorators = this.decorators.map(d => d.clone())\n    return clone\n  }\n\n  toJSON(): PartialDeep<IISymbolGroup>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      children: JSON.parse(JSON.stringify(this.children)),\n      decorators: this.decorators.length ? JSON.parse(JSON.stringify(this.decorators)) : undefined\n    }\n  }\n}\n","import { TStyle } from \"../style\"\nimport { PartialDeep, convertDegreeToRadian, findIntersectionBetween2Segment, isPointInsidePolygon, computeRotatedPoint } from \"../utils\"\nimport { TPoint, isValidPoint } from \"./Point\"\nimport { SymbolType } from \"./Symbol\"\nimport { Box, TBox } from \"./Box\"\nimport { IIDecorator } from \"./IIDecorator\"\nimport { IISymbolBase } from \"./IISymbolBase\"\n\n/**\n * @group Symbol\n */\nexport type TIISymbolChar = {\n  id: string\n  label: string\n  fontSize: number\n  fontWeight: \"normal\" | \"bold\"\n  color: string\n  bounds: TBox\n}\n\n/**\n * @group Symbol\n */\nexport class IIText extends IISymbolBase<SymbolType.Text>\n{\n  readonly isClosed = true\n\n  point: TPoint\n  chars: TIISymbolChar[]\n  decorators: IIDecorator[]\n  bounds: Box\n  rotation?: {\n    degree: number,\n    center: TPoint\n  }\n\n  constructor(\n    chars: TIISymbolChar[],\n    point: TPoint,\n    bounds: TBox,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(SymbolType.Text, style)\n    this.point = point\n    this.bounds = new Box(bounds)\n    this.chars = chars\n    this.decorators = []\n  }\n\n  get label(): string\n  {\n    return this.chars.map(c => c.label).join(\"\")\n  }\n\n  get vertices(): TPoint[]\n  {\n    if (this.rotation) {\n      const center = this.rotation.center\n      const rad = convertDegreeToRadian(-this.rotation.degree)\n      return this.bounds.corners\n        .map(p =>\n        {\n          return computeRotatedPoint(p, center, rad)\n        })\n    }\n    else {\n      return this.bounds.corners\n    }\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    const offsetY = this.bounds.yMax - this.point.y\n    const points = [\n      { x: this.bounds.x, y: this.bounds.yMin + offsetY },\n      { x: this.bounds.xMax, y: this.bounds.yMin + offsetY },\n      { x: this.bounds.xMax, y: this.bounds.yMax - offsetY },\n      { x: this.bounds.x, y: this.bounds.yMax - offsetY },\n      this.bounds.center\n    ]\n    if (this.rotation) {\n      const center = this.rotation.center\n      const rad = convertDegreeToRadian(-this.rotation.degree)\n      return points\n        .map(p =>\n        {\n          return computeRotatedPoint(p, center, rad)\n        })\n    }\n    return points\n  }\n\n  protected getCharCorners(char: TIISymbolChar): TPoint[]\n  {\n    const boxBox = new Box(char.bounds)\n    if (this.rotation) {\n      const center = this.rotation.center\n      const rad = convertDegreeToRadian(-this.rotation.degree)\n      return boxBox.corners\n        .map(p =>\n        {\n          return computeRotatedPoint(p, center, rad)\n        })\n    }\n    return boxBox.corners\n  }\n\n  updateChildrenStyle(): void\n  {\n    this.chars.forEach(c => {\n      if (this.style.color) {\n        c.color = this.style.color\n      }\n    })\n    this.modificationDate = Date.now()\n  }\n\n  updateChildrenFont( { fontSize, fontWeight }: { fontSize?: number, fontWeight?: \"normal\" | \"bold\" }): void\n  {\n    this.chars.forEach(c => {\n      if (fontSize) {\n        c.fontSize = fontSize\n      }\n      if (fontWeight) {\n        c.fontWeight = fontWeight\n      }\n    })\n    this.modificationDate = Date.now()\n  }\n\n  getCharsOverlaps(points: TPoint[]): TIISymbolChar[]\n  {\n    return this.chars.filter(c =>\n    {\n      const charCorners = this.getCharCorners(c)\n      return points.some(p => isPointInsidePolygon(p, charCorners))\n    })\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.vertices.some(p => Box.containsPoint(box, p)) ||\n      this.edges.some(e1 => Box.getSides(box).some(e2 => !!findIntersectionBetween2Segment(e1, e2)))\n  }\n\n  clone(): IIText\n  {\n    const clone = new IIText(structuredClone(this.chars), structuredClone(this.point), this.bounds, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.decorators = this.decorators.map(d => d.clone())\n    clone.rotation = this.rotation ? structuredClone(this.rotation) : undefined\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIText>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      point: this.point,\n      chars: this.chars,\n      style: this.style,\n      rotation: this.rotation,\n      bounds: this.bounds,\n      decorators: this.decorators.length ? this.decorators : undefined\n    }\n  }\n\n  static create(partial: PartialDeep<IIText>): IIText\n  {\n    if (!isValidPoint(partial?.point)) throw new Error(`Unable to create a IIText, point are invalid`)\n    if (!partial.chars?.length) throw new Error(`Unable to create a IIText, no chars`)\n    if (!partial.bounds) throw new Error(`Unable to create a IIText, no boundingBox`)\n    const text = new IIText(partial.chars as TIISymbolChar[], partial.point as TPoint, partial.bounds as TBox, partial.style)\n    if (partial.id) text.id = partial.id\n    if (partial.decorators?.length) {\n      partial.decorators.forEach(d => {\n        if(d?.kind) {\n          text.decorators.push(new IIDecorator(d.kind, Object.assign({}, text.style, d.style)))\n        }\n      })\n    }\n    return text\n  }\n}\n","import { createUUID, PartialDeep } from \"../utils\"\nimport { TPoint, TPointer } from \"./Point\"\nimport { Box, TBox } from \"./Box\"\nimport { SymbolType } from \"./Symbol\"\nimport { IISymbolBase } from \"./IISymbolBase\"\nimport { TStyle } from \"../style\"\n\nconst style: TStyle = {\n  color: \"grey\",\n  fill: \"none\",\n  width: 12,\n  opacity: 0.2\n}\n\n/**\n * @group Symbol\n */\nexport class IIEraser extends IISymbolBase<SymbolType.Eraser>\n{\n  readonly isClosed = false\n  pointers: TPointer[]\n\n  constructor()\n  {\n    super(SymbolType.Eraser, style)\n    this.id = `${ this.type }-${ createUUID() }`\n    this.creationTime = Date.now()\n    this.modificationDate = this.creationTime\n    this.pointers = []\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromPoints(this.vertices)\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.pointers\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return []\n  }\n\n  clone(): IISymbolBase\n  {\n    const clone = new IIEraser()\n    clone.id = this.id\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.pointers = structuredClone(this.pointers)\n    return clone\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.pointers.some(p =>\n    {\n      return p.x >= box.x && p.x <= box.x + box.width\n        && p.y >= box.y && p.y <= box.y + box.height\n    })\n  }\n\n  toJSON(): PartialDeep<IIEraser>\n  {\n    return {\n      id: this.id,\n      pointers: this.pointers,\n      style: this.style\n    }\n  }\n}\n","import { DefaultPenStyle, TPenStyle } from \"../style\"\nimport { PartialDeep, createUUID } from \"../utils\"\nimport { TPointer } from \"./Point\"\nimport { SymbolType, TSymbol } from \"./Symbol\"\n\n/**\n * @group Symbol\n */\nexport type TStrokeToSend = {\n  id: string\n  pointerType: string\n  x: number[]\n  y: number[]\n  t: number[]\n  p: number[]\n}\n\n/**\n * @group Symbol\n */\nexport type TStrokeGroupToSend = {\n  penStyle?: string\n  strokes: TStrokeToSend[]\n}\n\n/**\n * @group Symbol\n */\nexport type TStroke = TSymbol & {\n  style: TPenStyle\n  pointerType: string\n  pointers: TPointer[]\n  length: number\n}\n\n/**\n * @group Symbol\n */\nexport type TStrokeGroup = {\n  penStyle: TPenStyle\n  strokes: Stroke[]\n}\n\n/**\n * @group Symbol\n */\nexport class Stroke implements TStroke\n{\n  type = SymbolType.Stroke\n  id: string\n  creationTime: number\n  modificationDate: number\n  style: TPenStyle\n  pointerType: string\n  pointers: TPointer[]\n  length: number\n\n  constructor(style: TPenStyle, pointerType = \"pen\")\n  {\n    this.id = `${this.type}-${createUUID()}`\n    this.creationTime = Date.now()\n    this.modificationDate = this.creationTime\n    this.style = style\n    this.pointerType = pointerType\n    this.pointers = []\n    this.length = 0\n  }\n\n  clone(): Stroke\n  {\n    const clone = new Stroke(this.style, this.pointerType)\n    clone.id = this.id\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.pointers = structuredClone(this.pointers)\n    clone.length = this.length\n    return clone\n  }\n\n  formatToSend(): TStrokeToSend\n  {\n    const json: TStrokeToSend = {\n      id: this.id,\n      pointerType: this.pointerType,\n      p: [],\n      t: [],\n      x: [],\n      y: []\n    }\n    this.pointers.forEach(p => {\n      json.p.push(p.p)\n      json.t.push(p.t)\n      json.x.push(p.x)\n      json.y.push(p.y)\n    })\n    return json\n  }\n}\n\n/**\n * @group Symbol\n * @group Utils\n */\nexport function convertPartialStrokesToStrokes(json: PartialDeep<TStroke>[]): Stroke[]\n{\n  const errors: string[] = []\n  const strokes: Stroke[] = []\n  json.forEach((j, ji) => {\n    let flag = true\n    const stroke = new Stroke(j.style || DefaultPenStyle, j.pointerType)\n    if (j.id) stroke.id = j.id\n    if (!j.pointers?.length) {\n      errors.push(`stroke ${ji + 1} has not pointers`)\n      flag = false\n      return\n    }\n    j.pointers?.forEach((pp, pIndex) => {\n      if (!pp) {\n        errors.push(`stroke ${ji + 1} has no pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      const pointer: TPointer = {\n        p: pp.p || 1,\n        t: pp.t || pIndex,\n        x: 0,\n        y: 0\n      }\n      if (pp?.x == undefined || pp?.x == null) {\n        errors.push(`stroke ${ji + 1} has no x at pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      else {\n        pointer.x = pp.x\n      }\n      if (pp?.y == undefined || pp?.y == null) {\n        errors.push(`stroke ${ji + 1} has no y at pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      else {\n        pointer.y = pp.y\n      }\n      if (flag) {\n        stroke.pointers.push(pointer)\n      }\n    })\n    if (flag) {\n      strokes.push(stroke)\n    }\n  })\n\n  if (errors.length) {\n    throw new Error(errors.join(\"\\n\"))\n  }\n\n  return strokes\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { TPenStyle } from \"../style\"\nimport { computeDistance } from \"../utils\"\nimport { TExport } from \"./Export\"\nimport { Stroke, TPoint, TPointer } from \"../symbol\"\n\n/**\n * @group Model\n */\nexport type TRecognitionPositions = {\n  lastSentPosition: number\n  lastReceivedPosition: number\n}\n\n/**\n * @group Model\n */\nexport class Model\n{\n  readonly creationTime: number\n  modificationDate: number\n  positions: TRecognitionPositions\n  currentSymbol?: Stroke\n  symbols: Stroke[]\n  exports?: TExport\n  converts?: TExport\n  width: number\n  height: number\n  rowHeight: number\n  idle: boolean\n  #logger = LoggerManager.getLogger(LoggerCategory.MODEL)\n\n  constructor(width = 100, height = 100, rowHeight = 0, creationDate = Date.now())\n  {\n    this.#logger.info(\"constructor\", { width, height, creationDate })\n    this.creationTime = creationDate\n    this.modificationDate = creationDate\n    this.width = width\n    this.height = height\n    this.rowHeight = rowHeight\n    this.symbols = []\n    this.positions = {\n      lastSentPosition: 0,\n      lastReceivedPosition: 0\n    }\n    this.idle = true\n  }\n\n  protected computePressure(distance: number, globalDistance: number): number\n  {\n    let ratio = 1.0\n    if (distance === globalDistance) {\n      ratio = 1.0\n    } else if (distance < 10) {\n      ratio = 0.2 + Math.pow(0.1 * distance, 0.4)\n    } else if (distance > globalDistance - 10) {\n      ratio = 0.2 + Math.pow(0.1 * (globalDistance - distance), 0.4)\n    }\n    const pressure = ratio * Math.max(0.1, 1.0 - (0.1 * Math.sqrt(distance)))\n    return isNaN(pressure) ? 0.5 : Math.round(pressure * 100) / 100\n  }\n\n  protected filterPointByAcquisitionDelta(stroke: Stroke, point: TPointer, lastPointer?: TPointer): boolean\n  {\n    const delta: number = (2 + ((stroke.style[\"-myscript-pen-width\"] || 0) / 4))\n    return !lastPointer ||\n      stroke.pointers.length === 0 ||\n      Math.abs(lastPointer.x - point.x) >= delta ||\n      Math.abs(lastPointer.y - point.y) >= delta\n  }\n\n  getStrokeFromPoint(point: TPoint): Stroke[]\n  {\n    this.#logger.info(\"getStrokeFromPoint\", { point })\n    const isBetween = (val: number, min: number, max: number): boolean => (val >= min && val <= max)\n\n    const _strokeList: Stroke[] = []\n    this.symbols.forEach((stroke) =>\n    {\n      for (let i = 0; i < stroke.pointers.length; i++) {\n        const strokePointer = stroke.pointers[i]\n        if (\n          isBetween(strokePointer.x, point.x - 5, point.x + 5) &&\n          isBetween(strokePointer.y, point.y - 5, point.y + 5)\n        ) {\n          _strokeList.push(stroke)\n          break\n        }\n        else {\n          if (computeDistance(point, strokePointer) < 10) {\n            _strokeList.push(stroke)\n            break\n          }\n        }\n      }\n    })\n    this.#logger.debug(\"getStrokeFromPoint\", { strokes: _strokeList })\n    return _strokeList\n  }\n\n  addPoint(stroke: Stroke, pointer: TPointer): void\n  {\n    this.#logger.debug(\"addPoint\", { stroke, pointer })\n    const lastPointer = stroke.pointers.at(-1)\n    if (this.filterPointByAcquisitionDelta(stroke, pointer, lastPointer)) {\n      const distance = lastPointer ? computeDistance(pointer, lastPointer) : 0\n      stroke.length += distance\n      pointer.p = this.computePressure(distance, stroke.length)\n      stroke.pointers.push(pointer)\n      stroke.modificationDate = Date.now()\n    }\n  }\n\n  addStroke(stroke: Stroke): void\n  {\n    this.#logger.info(\"addStroke\", { stroke })\n    this.symbols.push(stroke)\n    this.modificationDate = Date.now()\n    this.converts = undefined\n    this.exports = undefined\n  }\n\n  updateStroke(updatedStroke: Stroke): void\n  {\n    this.#logger.info(\"updateStroke\", { updatedStroke })\n    const strokeIndex = this.symbols.findIndex((s: Stroke): boolean => s.id === updatedStroke.id)\n    if (strokeIndex !== -1) {\n      updatedStroke.modificationDate = Date.now()\n      this.symbols.splice(strokeIndex, 1, updatedStroke)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"updateStroke\", this.symbols)\n  }\n\n  removeStroke(id: string): void\n  {\n    this.#logger.info(\"removeStroke\", { id })\n    const strokeIndex = this.symbols.findIndex(s => s.id === id)\n    if (strokeIndex !== -1) {\n      this.positions.lastSentPosition--\n      this.positions.lastReceivedPosition--\n      this.symbols.splice(strokeIndex, 1)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"removeStroke\", this.symbols)\n  }\n\n  removeStrokesFromPoint(point: TPoint): string[]\n  {\n    this.#logger.info(\"removeStrokesFromPoint\", { point })\n    const strokes = this.getStrokeFromPoint(point)\n    strokes.forEach(strokeToRemove =>\n    {\n      this.removeStroke(strokeToRemove.id)\n    })\n    this.#logger.debug(\"removeStrokesFromPoint\", strokes.map(s => s.id))\n    return strokes.map(s => s.id)\n  }\n\n  extractUnsentStrokes(): Stroke[]\n  {\n    return this.symbols.slice(this.positions.lastSentPosition)\n  }\n\n  initCurrentStroke(point: TPointer, pointerType: string, style: TPenStyle, dpi = 96): void\n  {\n    this.#logger.info(\"initCurrentStroke\", { point, pointerType, style, dpi })\n    if (style[\"-myscript-pen-width\"]) {\n      const pxWidth = (style[\"-myscript-pen-width\"] * dpi) / 25.4\n      style.width = pxWidth / 2\n    }\n    this.modificationDate = Date.now()\n    this.exports = undefined\n    this.currentSymbol = new Stroke(style, pointerType)\n    this.#logger.debug(\"initCurrentStroke\", this.currentSymbol)\n    this.addPoint(this.currentSymbol, point)\n  }\n\n  appendToCurrentStroke(point: TPointer): void\n  {\n    this.#logger.info(\"appendToCurrentStroke\", { point })\n    if (this.currentSymbol) {\n      this.addPoint(this.currentSymbol, point)\n    }\n    this.#logger.debug(\"appendToCurrentStroke\", this.currentSymbol)\n  }\n\n  endCurrentStroke(point: TPointer): void\n  {\n    this.#logger.info(\"endCurrentStroke\", { point })\n    if (this.currentSymbol) {\n      this.addPoint(this.currentSymbol, point)\n      this.addStroke(this.currentSymbol)\n      this.currentSymbol = undefined\n    }\n    this.#logger.debug(\"endCurrentStroke\", this.currentSymbol)\n  }\n\n  updatePositionSent(position: number = this.symbols.length): void\n  {\n    this.#logger.info(\"updatePositionSent\", { position })\n    this.positions.lastSentPosition = position\n    this.#logger.debug(\"updatePositionSent\", this.positions.lastSentPosition)\n  }\n\n  updatePositionReceived(): void\n  {\n    this.#logger.info(\"updatePositionReceived\")\n    this.positions.lastReceivedPosition = this.positions.lastSentPosition\n    this.#logger.debug(\"updatePositionReceived\", this.positions.lastReceivedPosition)\n  }\n\n  mergeExport(exports: TExport)\n  {\n    this.#logger.info(\"mergeExport\", { exports })\n    if (this.exports) {\n      Object.assign(this.exports, exports)\n    } else {\n      this.exports = exports\n    }\n    this.#logger.debug(\"mergeExport\", this.exports)\n  }\n\n  mergeConvert(converts: TExport)\n  {\n    this.#logger.info(\"mergeConvert\", { converts })\n    if (this.converts) {\n      Object.assign(this.converts, converts)\n    } else {\n      this.converts = converts\n    }\n    this.#logger.debug(\"mergeConvert\", this.converts)\n  }\n\n  clone(): Model\n  {\n    this.#logger.info(\"clone\")\n    const clonedModel = new Model(this.width, this.height, this.rowHeight, this.creationTime)\n    clonedModel.modificationDate = JSON.parse(JSON.stringify(this.modificationDate))\n    clonedModel.currentSymbol = this.currentSymbol ? this.currentSymbol.clone() : undefined\n    clonedModel.symbols = this.symbols.map(s => s.clone())\n    clonedModel.positions = JSON.parse(JSON.stringify(this.positions))\n    clonedModel.exports = this.exports ? JSON.parse(JSON.stringify(this.exports)) : undefined\n    clonedModel.converts = this.converts ? JSON.parse(JSON.stringify(this.converts)) : undefined\n    clonedModel.idle = this.idle\n    this.#logger.debug(\"clone\", { clonedModel })\n    return clonedModel\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.modificationDate = Date.now()\n    this.currentSymbol = undefined\n    this.symbols = []\n    this.positions.lastSentPosition = 0\n    this.positions.lastReceivedPosition = 0\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport\n{\n  RecognizedKind,\n  SymbolType,\n  TIISymbol,\n} from \"../symbol\"\nimport { TExport } from \"./Export\"\n\n/**\n * @group Model\n */\nexport class IIModel\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MODEL)\n  readonly creationTime: number\n  modificationDate: number\n  currentSymbol?: TIISymbol\n  symbols: TIISymbol[]\n  exports?: TExport\n  converts?: TExport\n  width: number\n  height: number\n  rowHeight: number\n  idle: boolean\n\n  constructor(width = 100, height = 100, rowHeight = 0, creationDate = Date.now())\n  {\n    this.creationTime = creationDate\n    this.modificationDate = creationDate\n    this.width = width\n    this.height = height\n    this.rowHeight = rowHeight\n    this.symbols = []\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n  }\n\n  get symbolsSelected(): TIISymbol[]\n  {\n    return this.symbols.filter(s => s.selected)\n  }\n\n  get symbolsToDelete(): TIISymbol[]\n  {\n    return this.symbols.filter(s => s.deleting)\n  }\n\n  selectSymbol(id: string): void\n  {\n    const symbol = this.symbols.find(s => s.id === id || (s.type === SymbolType.Group && s.containsSymbol(id)))\n    if (symbol) {\n      symbol.selected = true\n    }\n  }\n\n  unselectSymbol(id: string): void\n  {\n    const symbol = this.symbols.find(s => s.id === id)\n    if (symbol) {\n      symbol.selected = false\n    }\n  }\n\n  resetSelection(): void\n  {\n    this.symbols.forEach(s => s.selected = false)\n  }\n\n  getRootSymbol(id: string): TIISymbol | undefined\n  {\n    return this.symbols.find(s =>\n    {\n      if (s.id === id) return s\n      if (s.type === SymbolType.Group && s.containsSymbol(id)) {\n        return s\n      }\n      if (s.type === SymbolType.Recognized && s.containsStroke(id)) {\n        return s\n      }\n      return\n    })\n  }\n\n  getSymbolRowIndex(symbol: TIISymbol): number\n  {\n    return Math.round((symbol.type === SymbolType.Recognized && symbol.kind === RecognizedKind.Text ? symbol.baseline : symbol.bounds.yMid) / this.rowHeight)\n  }\n\n  getSymbolsByRowOrdered(): { rowIndex: number, symbols: TIISymbol[] }[]\n  {\n    const rows: { rowIndex: number, symbols: TIISymbol[] }[] = []\n    this.symbols.forEach(s =>\n    {\n      const rowIndex = this.getSymbolRowIndex(s)\n      const row = rows.find(r => r.rowIndex === rowIndex)\n      if (row) {\n        row.symbols.push(s)\n      }\n      else {\n        rows.push({ rowIndex, symbols: [s] })\n      }\n    })\n    rows.forEach(r =>\n    {\n      r.symbols.sort((s1, s2) => s1.bounds.xMid - s2.bounds.xMid)\n    })\n    return rows.sort((r1, r2) => r1.rowIndex - r2.rowIndex)\n  }\n\n  roundToLineGuide(y: number): number\n  {\n    return Math.round(y / this.rowHeight) * this.rowHeight\n  }\n\n  isSymbolAbove(source: TIISymbol, target: TIISymbol): boolean\n  {\n    return this.getSymbolRowIndex(source) > this.getSymbolRowIndex(target)\n  }\n\n  isSymbolInRow(source: TIISymbol, target: TIISymbol): boolean\n  {\n    return this.getSymbolRowIndex(source) === this.getSymbolRowIndex(target)\n  }\n\n  isSymbolBelow(source: TIISymbol, target: TIISymbol): boolean\n  {\n    return this.getSymbolRowIndex(source) < this.getSymbolRowIndex(target)\n  }\n\n  getFirstSymbol(symbols: TIISymbol[]): TIISymbol | undefined\n  {\n    if (!symbols.length) return\n    return symbols.reduce((previous, current) =>\n    {\n      if (previous) {\n        if (this.getSymbolRowIndex(previous) < this.getSymbolRowIndex(current)) {\n          return previous\n        }\n        else if (this.getSymbolRowIndex(previous) == this.getSymbolRowIndex(current) && previous.bounds.xMid < current.bounds.xMid) {\n          return previous\n        }\n      }\n      return current\n    })\n  }\n\n  getLastSymbol(symbols: TIISymbol[]): TIISymbol | undefined\n  {\n    if (!symbols.length) return\n    return symbols.reduce((previous, current) =>\n    {\n      if (previous) {\n        if (this.getSymbolRowIndex(previous) > this.getSymbolRowIndex(current)) {\n          return previous\n        }\n        if (this.getSymbolRowIndex(previous) < this.getSymbolRowIndex(current)) {\n          return current\n        }\n        else if (previous.bounds.xMid > current.bounds.xMid) {\n          return previous\n        }\n      }\n      return current\n    })\n  }\n\n  addSymbol(symbol: TIISymbol): void\n  {\n    this.#logger.info(\"addSymbol\", { symbol })\n    const sIndex = this.symbols.findIndex(s => s.id === symbol.id)\n    if (sIndex > -1) {\n      throw new Error(`Symbol id already exist: ${ symbol.id }`)\n    }\n    this.symbols.push(symbol)\n    this.modificationDate = Date.now()\n    this.converts = undefined\n    this.exports = undefined\n    this.#logger.debug(\"addSymbol\", this.symbols)\n  }\n\n  updateSymbol(updatedSymbol: TIISymbol): void\n  {\n    this.#logger.info(\"updateSymbol\", { updatedSymbol })\n    const sIndex = this.symbols.findIndex(s => s.id === updatedSymbol.id)\n    if (sIndex !== -1) {\n      updatedSymbol.modificationDate = Date.now()\n      this.symbols.splice(sIndex, 1, updatedSymbol)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"updateSymbol\", this.symbols)\n  }\n\n  replaceSymbol(id: string, symbols: TIISymbol[]): void\n  {\n    const sIndex = this.symbols.findIndex(s => s.id === id)\n    if (sIndex !== -1) {\n      this.symbols.splice(sIndex, 1, ...symbols)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n  }\n\n  changeOrderSymbol(id: string, position: \"first\" | \"last\" | \"forward\" | \"backward\")\n  {\n    const fromIndex = this.symbols.findIndex(s => s.id === id)\n    if (fromIndex > -1) {\n      let toIndex = fromIndex\n      switch (position) {\n        case \"first\":\n          toIndex = 0\n          break\n        case \"last\":\n          toIndex = this.symbols.length - 1\n          break\n        case \"forward\":\n          toIndex = Math.min(toIndex + 1, this.symbols.length - 1)\n          break\n        case \"backward\":\n          toIndex = Math.max(toIndex - 1, 0)\n          break\n      }\n      const sym = this.symbols.splice(fromIndex, 1)[0]\n      this.symbols.splice(toIndex, 0, sym)\n    }\n  }\n\n  removeSymbol(id: string): void\n  {\n    this.#logger.info(\"removeSymbol\", { id })\n    const symbolIndex = this.symbols.findIndex(s => s.id === id)\n    if (symbolIndex !== -1) {\n      this.symbols.splice(symbolIndex, 1)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"removeSymbol\", this.symbols)\n  }\n\n  extractDifferenceSymbols(model: IIModel): { added: TIISymbol[], removed: TIISymbol[] }\n  {\n    return {\n      added: this.symbols.filter(s1 => model.symbols.findIndex(s2 => s1.id === s2.id && s1.modificationDate === s2.modificationDate) === -1),\n      removed: model.symbols.filter(s1 => this.symbols.findIndex(s2 => s1.id === s2.id && s1.modificationDate === s2.modificationDate) === -1)\n    }\n  }\n\n  mergeExport(exports: TExport)\n  {\n    this.#logger.info(\"mergeExport\", { exports })\n    if (this.exports) {\n      Object.assign(this.exports, exports)\n    } else {\n      this.exports = exports\n    }\n    this.#logger.debug(\"mergeExport\", this.exports)\n  }\n\n  clone(): IIModel\n  {\n    this.#logger.info(\"clone\")\n    const clonedModel = new IIModel(this.width, this.height, this.rowHeight, this.creationTime)\n    clonedModel.modificationDate = this.modificationDate\n    clonedModel.symbols = this.symbols.map(s =>\n    {\n      const c = s.clone()\n      c.selected = false\n      return c\n    })\n    clonedModel.exports = structuredClone(this.exports)\n    clonedModel.idle = this.idle\n    this.#logger.debug(\"clone\", { clonedModel })\n    return clonedModel\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.modificationDate = Date.now()\n    this.symbols = []\n    this.currentSymbol = undefined\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n\n  }\n}\n","/**\n * @group Recognizer\n */\nexport type TScheme = \"https\" | \"http\"\n\n/**\n * @group Recognizer\n */\nexport type TServerHTTPConfiguration = {\n  scheme: TScheme,\n  host: string\n  applicationKey: string\n  hmacKey: string\n  version?: string\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultServerHTTPConfiguration: TServerHTTPConfiguration = {\n  scheme: \"https\",\n  host: \"cloud.myscript.com\",\n  applicationKey: \"\",\n  hmacKey: \"\",\n  version: \"\"\n}\n\n/**\n * @group Recognizer\n */\nexport type TServerWebsocketConfiguration = TServerHTTPConfiguration & {\n  websocket: {\n    pingEnabled: boolean\n    pingDelay: number\n    maxPingLostCount: number\n    autoReconnect: boolean\n    maxRetryCount: number\n    fileChunkSize: number\n  }\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultServerWebsocketConfiguration: TServerWebsocketConfiguration = {\n  ...DefaultServerHTTPConfiguration,\n  websocket: {\n    pingEnabled: true,\n    pingDelay: 15000,\n    maxPingLostCount: 20,\n    autoReconnect: true,\n    maxRetryCount: 2,\n    fileChunkSize: 300000\n  }\n}\n","\n/**\n * @group Recognizer\n */\nexport type TEraserConfiguration = {\n  \"erase-precisely\": boolean\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultEraserConfiguration: TEraserConfiguration = {\n  \"erase-precisely\": false\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\nimport { TTextConfConfiguration } from \"./TextConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TDiagramConvertConfiguration = {\n  types?: (\"text\" | \"shape\")[]\n  \"match-text-size\"?: boolean\n}\n\n/**\n * @group Recognizer\n */\nexport type TDiagramConfiguration = {\n  mimeTypes: (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n  \"enable-sub-blocks\"?: boolean\n  text?: TTextConfConfiguration\n  convert?: TDiagramConvertConfiguration\n  \"session-time\"?: number\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultDiagramConvertConfiguration: TDiagramConvertConfiguration = {\n  types: [\"text\", \"shape\"],\n  \"match-text-size\": true\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultDiagramConfiguration: TDiagramConfiguration = {\n  convert: DefaultDiagramConvertConfiguration,\n  eraser: DefaultEraserConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\n/**\n * @group Recognizer\n */\nexport type TImageViewportConfiguration = {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\n/**\n * @group Recognizer\n */\nexport type TImageConfiguration = {\n  guides: boolean\n  viewport: TImageViewportConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport type TJiixConfiguration = {\n  \"bounding-box\": boolean\n  strokes: boolean\n  ids: boolean\n  \"full-stroke-ids\": boolean\n  text: {\n    chars: boolean\n    words: boolean\n    lines?: boolean\n  }\n  style?: boolean\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultJiixConfiguration: TJiixConfiguration = {\n  \"bounding-box\": false,\n  strokes: false,\n  ids: false,\n  \"full-stroke-ids\": false,\n  text: {\n    chars: false,\n    words: true,\n    lines: false\n  },\n}\n\n/**\n * @group Recognizer\n */\nexport type TMathMLFlavor = {\n  name: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TMathMLExport = {\n  flavor: TMathMLFlavor\n}\n\n/**\n * @group Recognizer\n */\nexport type TExportConfiguration = {\n  \"image-resolution\"?: number\n  image?: TImageConfiguration\n  jiix: TJiixConfiguration\n  mathml?: TMathMLExport\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultExportConfiguration: TExportConfiguration = {\n  \"image-resolution\": 300,\n  jiix: DefaultJiixConfiguration\n}\n","\n/**\n * @group Recognizer\n */\nexport type TMarginConfiguration = {\n  bottom: number\n  left: number\n  right: number\n  top: number\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultMarginConfiguration: TMarginConfiguration = {\n  top: 20,\n  left: 10,\n  right: 10,\n  bottom: 10\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRoundingMode = \"half up\" | \"truncate\"\n\n/**\n * @group Recognizer\n */\nexport type TAngleUnit = \"deg\" | \"rad\"\n\n/**\n * @group Recognizer\n */\nexport type TSolverOptions = \"algebraic\" | \"numeric\"\n\n/**\n * @group Recognizer\n */\nexport type TSolverConfiguration = {\n  enable?: boolean\n  \"fractional-part-digits\"?: number\n  \"decimal-separator\"?: string\n  \"rounding-mode\"?: TRoundingMode\n  \"angle-unit\"?: TAngleUnit\n  options?: TSolverOptions\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultSolverConfiguration: TSolverConfiguration = {\n  enable: true,\n  \"fractional-part-digits\": 3,\n  \"decimal-separator\": \".\",\n  \"rounding-mode\": \"half up\",\n  \"angle-unit\": \"deg\"\n}\n\n/**\n * @group Recognizer\n */\nexport type TUndoRedoMode = \"stroke\" | \"session\"\n\n/**\n * @group Recognizer\n */\nexport type TMathUndoRedoConfiguration = {\n  mode: TUndoRedoMode\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultMathUndoRedoConfiguration: TMathUndoRedoConfiguration = {\n  mode: \"stroke\"\n}\n\n/**\n * @group Recognizer\n */\nexport type TMathConfiguration = {\n  mimeTypes: (\"application/x-latex\" | \"application/mathml+xml\" | \"application/vnd.myscript.jiix\")[]\n  solver?: TSolverConfiguration\n  margin: TMarginConfiguration\n  \"undo-redo\"?: TMathUndoRedoConfiguration\n  customGrammar?: string\n  customGrammarId?: string\n  customGrammarContent?: string\n  eraser?: TEraserConfiguration\n  \"session-time\"?: number\n  \"recognition-timeout\"?: number\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultMathConfiguration: TMathConfiguration = {\n  solver: DefaultSolverConfiguration,\n  margin: DefaultMarginConfiguration,\n  eraser: DefaultEraserConfiguration,\n  \"undo-redo\": DefaultMathUndoRedoConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\nimport { TTextConfConfiguration } from \"./TextConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRawContentConfiguration = {\n  text?: TTextConfConfiguration\n  \"session-time\"?: number\n  recognition: {\n    types: (\"text\" | \"shape\" | \"math\" | \"decoration\")[]\n  }\n  classification: {\n    types: (\"text\" | \"shape\" | \"math\" | \"decoration\" | \"drawing\")[]\n  }\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRawContentConfiguration: TRawContentConfiguration = {\n  recognition: {\n    types: [ \"text\", \"math\", \"shape\", \"decoration\"]\n  },\n  classification: {\n    types: [ \"text\", \"math\", \"shape\", \"decoration\", \"drawing\"]\n  },\n  eraser: DefaultEraserConfiguration,\n}\n","\n/**\n * @group Recognizer\n */\nexport type TRecognitionRendererDebugConfiguration = {\n  \"draw-text-boxes\": boolean\n  \"draw-image-boxes\": boolean\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultDebugConfiguration: TRecognitionRendererDebugConfiguration = {\n  \"draw-text-boxes\": false,\n  \"draw-image-boxes\": false\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognitionRendererConfiguration = {\n  debug: TRecognitionRendererDebugConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognitionRendererConfiguration: TRecognitionRendererConfiguration = {\n  debug: DefaultDebugConfiguration\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TTextGuidesConfiguration = {\n  enable: boolean\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultTextGuidesConfiguration: TTextGuidesConfiguration = {\n  enable: true\n}\n\n/**\n * @group Recognizer\n */\nexport type TTextConfConfiguration = {\n  customResources?: string[]\n  customLexicon?: string[]\n  addLKText?: boolean\n}\n\n/**\n * @group Recognizer\n */\nexport type TTextConfiguration = {\n  text?: boolean\n  mimeTypes: (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n  margin: TMarginConfiguration\n  guides?: TTextGuidesConfiguration\n  configuration?: TTextConfConfiguration\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultTextConfiguration: TTextConfiguration = {\n  guides: DefaultTextGuidesConfiguration,\n  eraser: DefaultEraserConfiguration,\n  margin: DefaultMarginConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TTextGuidesConfigurationV2 = {\n  enable: boolean,\n  \"line-gap-mm\"?: number,\n  \"origin-y-mm\"?: number,\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultTextGuidesConfigurationV2: TTextGuidesConfigurationV2 = {\n  enable: true,\n  \"line-gap-mm\": 100,\n  \"origin-y-mm\": 0,\n}\n\n/**\n * @group Recognizer\n */\nexport type TTextRecognizerHTTPV2ConfConfiguration = {\n  customResources?: string[]\n  customLexicon?: string[]\n  addLKText?: boolean\n}\n\n/**\n * @group Recognizer\n */\nexport type TTextRecognizerHTTPV2Configuration = {\n  text?: boolean\n  mimeTypes: (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n  margin: TMarginConfiguration\n  guides: TTextGuidesConfigurationV2\n  configuration?: TTextRecognizerHTTPV2ConfConfiguration\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultTexConfigurationV2: TTextRecognizerHTTPV2Configuration = {\n  guides: DefaultTextGuidesConfigurationV2,\n  eraser: DefaultEraserConfiguration,\n  margin: DefaultMarginConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\n/**\n * @group Recognizer\n */\nexport type TConvertionConfiguration = {\n    force?: {\n        \"on-stylesheet-change\": boolean\n    }\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultConvertionConfiguration: TConvertionConfiguration = {\n    force: {\n        \"on-stylesheet-change\": false\n    }\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TShapeConvertConfiguration = {\n  types?: (\"shape\")[]\n  \"match-text-size\"?: boolean\n}\n\nexport type TShapeBeautificationConfiguration = {\n    enable?: true\n}\n/**\n * @group Recognizer\n */\nexport type TShapeConfiguration = {\n  mimeTypes: (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n  \"enable-sub-blocks\"?: boolean\n  convert?: TShapeConvertConfiguration\n  \"session-time\"?: number\n  eraser?: TEraserConfiguration\n  beautification?: TShapeBeautificationConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultShapeConvertConfiguration: TShapeConvertConfiguration = {\n  types: [\"shape\"],\n  \"match-text-size\": true\n}\n\nexport const DefaultShapeBeautificationConfiguration: TShapeBeautificationConfiguration = {\n    enable: true\n  }\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultShapeConfiguration: TShapeConfiguration = {\n  convert: DefaultShapeConvertConfiguration,\n  eraser: DefaultEraserConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n  beautification: DefaultShapeBeautificationConfiguration\n}\n","import { THistoryContext } from \"../history\"\nimport { TExport } from \"../model\"\nimport { TRecognizerWebSocketSSRMessageSVGPatch } from \"./RecognizerWebSocketSSRMessage\"\n\n/**\n * @group Recognizer\n * @summary\n * Lists all events that can be listened to on the editor or DOM element\n * @example\n * You can run code on \"RecognizerEventName\" raised by using\n * ```ts\n * recognizer.events.addEventListener(RecognizerEventName.CONTENT_CHANGED, (evt) => console.log(evt.detail))\n * ```\n */\nexport enum RecognizerEventName\n{\n  /**\n   * @summary event emitted at the start of connection initialization\n   */\n  START_INITIALIZATION = \"start-initialization\",\n  /**\n   * @summary event emitted after full recognizer initialization\n   */\n  END_INITIALIZATION = \"end-initialization\",\n  /**\n   * @summary event emitted after receiving an \"contentChanged\" message\n   */\n  CONTENT_CHANGED = \"content-changed\",\n  /**\n   * @summary event emitted after receiving an \"idle\" message\n   */\n  IDLE = \"idle\",\n  /**\n   * @summary event emitted after receiving an \"exported\" message\n   */\n  EXPORTED = \"exported\",\n  /**\n   * @summary event emitted when the recognizer encounters an error\n   */\n  ERROR = \"error\",\n  /**\n   * @remarks event emitted after connection closed\n   */\n  CONNECTION_CLOSE = \"connection-close\",\n  /**\n   * @summary\n   * event emitted after receiving an \"svgPatch\" message\n   * @remarks\n   * only usable in the case of websocket\n   */\n  SVG_PATCH = \"svg-patch\",\n  /**\n   * @summary event emitted session opened\n   */\n  SESSION_OPENED = \"session-opened\",\n\n}\n\n/**\n * @group Recognizer\n */\nexport class RecognizerEvent extends EventTarget\n{\n  protected abortController: AbortController\n\n  constructor()\n  {\n    super()\n    this.abortController = new AbortController()\n  }\n\n  removeAllListeners(): void\n  {\n    this.abortController.abort()\n    this.abortController = new AbortController()\n  }\n\n  protected emit(type: string, data?: unknown): void\n  {\n    const evt = new CustomEvent(type, Object.assign({ bubbles: true, composed: true }, data ? { detail: data } : undefined))\n    this.dispatchEvent(evt)\n  }\n\n  emitStartInitialization(): void\n  {\n    this.emit(RecognizerEventName.START_INITIALIZATION)\n  }\n  addStartInitialization(callback: () => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.START_INITIALIZATION,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitEndtInitialization(): void\n  {\n    this.emit(RecognizerEventName.END_INITIALIZATION)\n  }\n  addEndInitialization(callback: () => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.END_INITIALIZATION,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitSessionOpened(sessionId: string): void\n  {\n    this.emit(RecognizerEventName.SESSION_OPENED, sessionId)\n  }\n  addSessionOpenedListener(callback: (sessionId: string) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.SESSION_OPENED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as string),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitContentChanged(undoRedoContext: THistoryContext): void\n  {\n    this.emit(RecognizerEventName.CONTENT_CHANGED, {\n      ...undoRedoContext,\n      canClear: !undoRedoContext.empty\n    })\n  }\n  addContentChangedListener(callback: (context: THistoryContext) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.CONTENT_CHANGED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as THistoryContext),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitIdle(idle: boolean): void\n  {\n    this.emit(RecognizerEventName.IDLE, idle)\n  }\n  addIdleListener(callback: (idle: boolean) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.IDLE,\n      (evt: unknown) => callback((evt as CustomEvent).detail as boolean),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitExported(exports: TExport): void\n  {\n    this.emit(RecognizerEventName.EXPORTED, exports)\n  }\n  addExportedListener(callback: (exports: TExport) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.EXPORTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TExport),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitError(err: Error): void\n  {\n    this.emit(RecognizerEventName.ERROR, err)\n  }\n  addErrorListener(callback: (err: Error) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.ERROR,\n      (evt: unknown) => callback((evt as CustomEvent).detail as Error),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitConnectionClose({ code, message }: { code: number, message?: string }): void\n  {\n    this.emit(RecognizerEventName.CONNECTION_CLOSE, { code, message })\n  }\n  addConnectionCloseListener(callback: ({ code, message }: { code: number, message?: string }) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.CONNECTION_CLOSE,\n      (evt: unknown) => callback((evt as CustomEvent).detail as { code: number, message?: string }),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  /**\n   * @remarks only use in the case of websocket\n   */\n  emitSVGPatch(svgPatch: TRecognizerWebSocketSSRMessageSVGPatch): void\n  {\n    this.emit(RecognizerEventName.SVG_PATCH, svgPatch)\n  }\n  /**\n   * @remarks only usable in the case of websocket\n   */\n  addSVGPatchListener(callback:  (svgPatch: TRecognizerWebSocketSSRMessageSVGPatch) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.SVG_PATCH,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TRecognizerWebSocketSSRMessageSVGPatch),\n      { signal: this.abortController.signal }\n    )\n  }\n}\n","/**\n * @group Recognizer\n * @remarks List all errors generated by the backend with their descriptions\n */\nexport enum RecognizerError {\n  NO_ACTIVITY = \"Session closed due to no activity. Without a connection on your part, it will be permanently lost after an hour.\",\n  WRONG_CREDENTIALS = \"Application credentials are invalid. Please check or regenerate your application key and hmackey.\",\n  TOO_OLD = \"Session is too old. Max Session Duration Reached.\",\n  NO_SESSION_FOUND = \"No sessions found. Without activation for 1 hour, sessions are deleted from the server. To avoid losing your work, use the json export, then import it this will create a new session.\",\n  UNKNOW = \"An unknown error has occurred.\",\n  ABNORMAL_CLOSURE = \"MyScript recognition server is not reachable.\",\n  CANT_ESTABLISH = \"Unable to establish a connection to MyScript recognition server. Check the host and your connectivity.\",\n  GOING_AWAY = \"MyScript recognition server is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.\",\n  PROTOCOL_ERROR = \"MyScript recognition server terminated the connection due to a protocol error.\",\n  UNSUPPORTED_DATA = \"MyScript recognition server terminated the connection because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)\",\n  INVALID_FRAME_PAYLOAD = \"MyScript recognition server terminated the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).\",\n  POLICY_VIOLATION = \"MyScript recognition server terminated the connection because it received a message that violates its policy.\",\n  MESSAGE_TOO_BIG = \"MyScript recognition server terminated the connection because a data frame was received that is too large.\",\n  INTERNAL_ERROR = \"MyScript recognition server terminated the connection because it encountered an unexpected condition that prevented it from fulfilling the request.\",\n  SERVICE_RESTART = \"MyScript recognition server terminated the connection because it is restarting.\",\n  TRY_AGAIN = \"MyScript recognition server terminated the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients.\",\n  BAD_GATEWAY = \"MyScript recognition server was acting as a gateway or proxy and received an invalid response from the upstream server.\",\n  TLS_HANDSHAKE = \"MyScript recognition server connection was closed due to a failure to perform a TLS handshake\",\n}\n","import { isVersionSuperiorOrEqual, mergeDeep, PartialDeep } from \"../utils\"\nimport {\n  DefaultDiagramConfiguration,\n  DefaultExportConfiguration,\n  DefaultMathConfiguration,\n  DefaultRawContentConfiguration,\n  DefaultRecognitionRendererConfiguration,\n  DefaultTextConfiguration,\n  TConvertionConfiguration,\n  TDiagramConfiguration,\n  TExportConfiguration,\n  TMathConfiguration,\n  TRawContentConfiguration,\n  TRecognitionRendererConfiguration,\n  TTextConfiguration\n} from \"./recognition\"\nimport { TRecognitionType } from \"./RecognitionConfiguration\"\nimport { DefaultServerHTTPConfiguration, TServerHTTPConfiguration } from \"./ServerConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRecognitionHTTPV1Configuration = {\n  type: TRecognitionType\n  lang: string\n  math: TMathConfiguration\n  text: TTextConfiguration\n  diagram: TDiagramConfiguration\n  \"raw-content\": TRawContentConfiguration\n  renderer: TRecognitionRendererConfiguration\n  export: TExportConfiguration\n  convert?: TConvertionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaulRecognitionHTTPV1ConfigurationConfiguration: TRecognitionHTTPV1Configuration = {\n  export: DefaultExportConfiguration,\n  math: DefaultMathConfiguration,\n  diagram: DefaultDiagramConfiguration,\n  \"raw-content\": DefaultRawContentConfiguration,\n  renderer: DefaultRecognitionRendererConfiguration,\n  text: DefaultTextConfiguration,\n  type: \"TEXT\",\n  lang: \"en_US\",\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV1Configuration = {\n  server: TServerHTTPConfiguration\n  recognition: TRecognitionHTTPV1Configuration\n}\n\n/**\n * @group Recognizer\n */\nexport const DefaultRecognizerHTTPV1Configuration: TRecognizerHTTPV1Configuration =\n{\n  server: DefaultServerHTTPConfiguration,\n  recognition: DefaulRecognitionHTTPV1ConfigurationConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport class RecognizerHTTPV1Configuration implements TRecognizerHTTPV1Configuration {\n  recognition: TRecognitionHTTPV1Configuration\n  server: TServerHTTPConfiguration\n\n  constructor(configuration?: PartialDeep<TRecognizerHTTPV1Configuration>)\n  {\n    this.server = mergeDeep({}, DefaultRecognizerHTTPV1Configuration.server, configuration?.server)\n    this.recognition = mergeDeep({}, DefaultRecognizerHTTPV1Configuration.recognition, configuration?.recognition)\n\n    if (configuration?.recognition?.text?.mimeTypes) {\n      this.recognition.text.mimeTypes = configuration.recognition.text.mimeTypes as (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n    }\n    this.recognition.text.mimeTypes = [...new Set(this.recognition.text.mimeTypes)]\n\n    if (configuration?.recognition?.math?.mimeTypes) {\n      this.recognition.math.mimeTypes = configuration.recognition.math.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/x-latex\" | \"application/mathml+xml\")[]\n    }\n    this.recognition.math.mimeTypes = [...new Set(this.recognition.math.mimeTypes)]\n\n    if (configuration?.recognition?.diagram?.mimeTypes) {\n      this.recognition.diagram.mimeTypes = configuration.recognition.diagram.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n    }\n    this.recognition.diagram.mimeTypes = [...new Set(this.recognition.diagram.mimeTypes)]\n\n    if (configuration?.recognition?.diagram?.convert?.types) {\n      this.recognition.diagram.convert!.types = configuration.recognition.diagram.convert.types as (\"text\" | \"shape\")[]\n    }\n\n    if (configuration?.recognition?.[\"raw-content\"]?.recognition?.types) {\n      this.recognition[\"raw-content\"].recognition!.types = configuration?.recognition?.[\"raw-content\"]?.recognition?.types as (\"text\" | \"shape\")[]\n    }\n    this.recognition[\"raw-content\"].recognition.types = [...new Set(this.recognition[\"raw-content\"].recognition.types.filter((type) => type !== \"decoration\"))]\n\n    if (configuration?.recognition?.[\"raw-content\"]?.classification?.types) {\n      this.recognition[\"raw-content\"].classification!.types = configuration?.recognition?.[\"raw-content\"]?.classification?.types as (\"text\" | \"shape\")[]\n    }\n\n    if (this.server.version) {\n      if (!isVersionSuperiorOrEqual(this.server.version, \"2.3.0\")) {\n        delete this.recognition.convert\n      }\n      if (!isVersionSuperiorOrEqual(this.server.version, \"3.2.0\")) {\n        delete this.recognition.export.jiix.text.lines\n      }\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { TStrokeGroup, TStrokeGroupToSend } from \"../symbol\"\nimport { StyleHelper, TPenStyle } from \"../style\"\nimport { computeHmac, getApiInfos, isVersionSuperiorOrEqual, PartialDeep } from \"../utils\"\nimport { RecognizerError } from \"./RecognizerError\"\nimport { RecognizerHTTPV1Configuration, TRecognizerHTTPV1Configuration } from \"./RecognizerHTTPV1Configuration\"\nimport { TConverstionState } from \"./RecognitionConfiguration\"\nimport { TDiagramConfiguration, TExportConfiguration, TMathConfiguration, TRawContentConfiguration, TTextConfiguration } from \"./recognition\"\n\ntype ApiError = {\n  code?: string\n  message: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV1PostConfiguration = {\n  lang: string,\n  diagram?: TDiagramConfiguration,\n  math?: TMathConfiguration,\n  \"raw-content\"?: TRawContentConfiguration,\n  text?: TTextConfiguration,\n  export: TExportConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV1PostData = {\n  configuration: TRecognizerHTTPV1PostConfiguration,\n  xDPI: number,\n  yDPI: number,\n  contentType: string,\n  conversionState?: TConverstionState\n  height: number,\n  width: number,\n  strokeGroups: TStrokeGroupToSend[]\n}\n\n/**\n * @deprecated Use {@link RecognizerHTTPV2} instead.\n * @group Recognizer\n */\nexport class RecognizerHTTPV1\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RECOGNIZER)\n\n  configuration: RecognizerHTTPV1Configuration\n\n  constructor(config: PartialDeep<TRecognizerHTTPV1Configuration>)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = new RecognizerHTTPV1Configuration(config)\n  }\n\n  get url()\n  {\n    return `${ this.configuration.server.scheme }://${ this.configuration.server.host }/api/v4.0/iink/batch`\n  }\n\n  get postConfig(): TRecognizerHTTPV1PostConfiguration\n  {\n    switch (this.configuration.recognition.type) {\n      case \"DIAGRAM\":\n        return {\n          lang: this.configuration.recognition.lang,\n          diagram: this.configuration.recognition.diagram,\n          export: this.configuration.recognition.export\n        }\n      case \"MATH\":\n        return {\n          lang: this.configuration.recognition.lang,\n          math: this.configuration.recognition.math,\n          export: this.configuration.recognition.export\n        }\n      case \"Raw Content\":\n        return {\n          lang: this.configuration.recognition.lang,\n          \"raw-content\": this.configuration.recognition[\"raw-content\"],\n          export: this.configuration.recognition.export\n        }\n      case \"TEXT\":\n        return {\n          lang: this.configuration.recognition.lang,\n          text: this.configuration.recognition.text,\n          export: this.configuration.recognition.export\n        }\n      default:\n        throw new Error(`get postConfig error Recognition type unkow \"${ this.configuration.recognition.type }\"`)\n        break\n    }\n  }\n\n  protected buildData(model: Model): TRecognizerHTTPV1PostData\n  {\n    this.#logger.info(\"buildData\", { model })\n    const isPenStyleEqual = (ps1: TPenStyle, ps2: TPenStyle) =>\n    {\n      return ps1 && ps2 && ps1[\"-myscript-pen-fill-color\"] === ps2[\"-myscript-pen-fill-color\"] &&\n        ps1[\"-myscript-pen-fill-style\"] === ps2[\"-myscript-pen-fill-style\"] &&\n        ps1[\"-myscript-pen-width\"] === ps2[\"-myscript-pen-width\"] &&\n        ps1.color === ps2.color &&\n        ps1.width === ps2.width\n    }\n\n    const strokeGroupByPenStyle: TStrokeGroup[] = []\n    model.symbols.forEach((s) =>\n    {\n      const groupIndex = strokeGroupByPenStyle.findIndex(sg => isPenStyleEqual(sg.penStyle, s.style))\n      if (groupIndex > -1) {\n        strokeGroupByPenStyle[groupIndex].strokes.push(s)\n      } else {\n        strokeGroupByPenStyle.push({\n          penStyle: s.style,\n          strokes: [s]\n        })\n      }\n    })\n\n    const strokeGroupsToSend: TStrokeGroupToSend[] = []\n    strokeGroupByPenStyle.forEach((group: TStrokeGroup) =>\n    {\n      const newPenStyle = JSON.stringify(group.penStyle) === \"{}\" ? undefined : StyleHelper.penStyleToCSS(group.penStyle as TPenStyle)\n      const newGroup = {\n        penStyle: newPenStyle,\n        strokes: group.strokes.map(s => s.formatToSend())\n      }\n      strokeGroupsToSend.push(newGroup)\n    })\n\n    const contentType: string = this.configuration.recognition.type === \"Raw Content\" ?\n      \"Raw Content\" :\n      this.configuration.recognition.type.charAt(0).toUpperCase() + this.configuration.recognition.type.slice(1).toLowerCase()\n\n    const data = {\n      configuration: this.postConfig,\n      xDPI: 96,\n      yDPI: 96,\n      contentType,\n      height: model.height,\n      width: model.width,\n      strokeGroups: strokeGroupsToSend\n    }\n    this.#logger.debug(\"buildData\", { data })\n    return data\n  }\n\n  protected async post(data: unknown, mimeType: string): Promise<unknown>\n  {\n    this.#logger.info(\"post\", { data, mimeType })\n    const headers = new Headers()\n    headers.append(\"Accept\", \"application/json,\" + mimeType)\n    headers.append(\"applicationKey\", this.configuration.server.applicationKey)\n    try {\n      const hmac = await computeHmac(JSON.stringify(data), this.configuration.server.applicationKey, this.configuration.server.hmacKey)\n      headers.append(\"hmac\", hmac)\n    } catch (error) {\n      this.#logger.error(\"post.computeHmac\", error)\n    }\n    headers.append(\"Content-Type\", \"application/json\")\n\n    if (!this.configuration.server.version) {\n      this.configuration.server.version = (await getApiInfos(this.configuration)).version\n    }\n    if (isVersionSuperiorOrEqual(this.configuration.server.version!, \"2.0.4\")) {\n      headers.append(\"myscript-client-name\", \"iink-ts\")\n      headers.append(\"myscript-client-version\", \"3.0.0\")\n    }\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"2.3.0\")) {\n      delete this.configuration.recognition.convert\n    }\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"3.2.0\")) {\n      delete this.configuration.recognition.export.jiix.text.lines\n    }\n\n    const reqInit: RequestInit = {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(data)\n    }\n    const request = new Request(this.url, reqInit)\n    const response: Response = await fetch(request)\n    if (response.ok) {\n      const contentType = response.headers.get(\"content-type\")\n      let result: unknown\n      switch (contentType) {\n        case \"application/vnd.openxmlformats-officedocument.presentationml.presentation\":\n        case \"image/png\":\n        case \"image/jpeg\":\n          result = await response.blob()\n          break\n        case \"application/json\":\n          result = await response.json()\n          break\n        case \"application/vnd.myscript.jiix\":\n          result = await response.clone().json().catch(async () => await response.text())\n          break\n        default:\n          result = await response.text()\n          break\n      }\n      this.#logger.debug(\"post\", { result })\n      return result\n    } else {\n      const err = await response.json() as ApiError\n      this.#logger.error(\"post\", { err })\n      throw err\n    }\n  }\n\n  protected async tryFetch(data: TRecognizerHTTPV1PostData, mimeType: string): Promise<TExport | never>\n  {\n    this.#logger.debug(\"tryFetch\", { data, mimeType })\n    return this.post(data, mimeType)\n      .then((res) =>\n      {\n        const exports: TExport = {}\n        exports[mimeType] = res as TJIIXExport | string | Blob\n        this.#logger.debug(\"tryFetch\", { exports })\n        return exports\n      })\n      .catch((err) =>\n      {\n        this.#logger.error(\"tryFetch\", { data, mimeType, err })\n        let message = err.message || RecognizerError.UNKNOW\n        if (!err.code) {\n          message = RecognizerError.CANT_ESTABLISH\n        } else if (err.code === \"access.not.granted\") {\n          message = RecognizerError.WRONG_CREDENTIALS\n        }\n        const error = new Error(message)\n        throw error\n      })\n  }\n\n  protected getMimeTypes(requestedMimeTypes?: string[]): string[]\n  {\n    this.#logger.info(\"getMimeTypes\", { requestedMimeTypes })\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.configuration.recognition.type) {\n        case \"DIAGRAM\":\n          mimeTypes = this.configuration.recognition.diagram.mimeTypes\n          break\n        case \"MATH\":\n          mimeTypes = this.configuration.recognition.math.mimeTypes\n          break\n        case \"Raw Content\":\n          mimeTypes = [\"application/vnd.myscript.jiix\"]\n          break\n        case \"TEXT\":\n          mimeTypes = this.configuration.recognition.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${ this.configuration.recognition.type }\" is unknown.\\n Possible types are:\\n -DIAGRAM\\n -MATH\\n -Raw Content\\n -TEXT`)\n          break\n      }\n    }\n    return mimeTypes\n  }\n\n  async convert(model: Model, conversionState?: TConverstionState, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"convert\", { model, conversionState, requestedMimeTypes })\n    const myModel = model.clone()\n    const mimeTypes = this.getMimeTypes(requestedMimeTypes)\n    const dataToConcert = this.buildData(myModel)\n    dataToConcert.conversionState = conversionState\n    const promises = mimeTypes.map(mt => this.tryFetch(dataToConcert, mt))\n    const exports: TExport[] = await Promise.all(promises)\n    exports.forEach(e =>\n    {\n      myModel.mergeConvert(e)\n    })\n    this.#logger.debug(\"convert\", { model: myModel })\n    return myModel\n  }\n\n  async export(model: Model, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"export\", { model, requestedMimeTypes })\n    const myModel = model.clone()\n    if (myModel.symbols.length === 0) {\n      return Promise.resolve(myModel)\n    }\n    const mimeTypes = this.getMimeTypes(requestedMimeTypes)\n    if (!mimeTypes.length) {\n      this.#logger.error(\"export\", { model, requestedMimeTypes, \"Export failed, no mimeTypes define in recognition configuration\": String })\n      return Promise.reject(new Error(\"Export failed, no mimeTypes define in recognition configuration\"))\n    }\n    const mimeTypesRequiringExport: string[] = mimeTypes.filter(m => !myModel.exports || !myModel.exports[m])\n    const data = this.buildData(model)\n    const exports: TExport[] = await Promise.all(mimeTypesRequiringExport.map(mimeType => this.tryFetch(data, mimeType)))\n    exports.forEach(e =>\n    {\n      myModel.mergeExport(e)\n    })\n    this.#logger.debug(\"export\", { model: myModel })\n    return myModel\n  }\n\n  async resize(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"resize\", { model })\n    return this.export(model)\n  }\n\n}\n","import { mergeDeep, isVersionSuperiorOrEqual, PartialDeep } from \"../utils\"\nimport {\n  DefaultShapeConfiguration,\n  DefaultExportConfiguration,\n  DefaultMathConfiguration,\n  DefaultRawContentConfiguration,\n  DefaultTexConfigurationV2,\n  TConvertionConfiguration,\n  TShapeConfiguration,\n  TExportConfiguration,\n  TMathConfiguration,\n  TRawContentConfiguration,\n  TTextRecognizerHTTPV2Configuration\n} from \"./recognition\"\nimport { TRecognitionType } from \"./RecognitionConfiguration\"\nimport { DefaultServerHTTPConfiguration, TServerHTTPConfiguration } from \"./ServerConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV2RecognitionConfiguration = {\n  type: TRecognitionType\n  lang: string\n  math: TMathConfiguration\n  text: TTextRecognizerHTTPV2Configuration\n  shape: TShapeConfiguration\n  \"raw-content\": TRawContentConfiguration\n  export: TExportConfiguration\n  convert?: TConvertionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognizerHTTPV2RecognitionConfiguration: TRecognizerHTTPV2RecognitionConfiguration = {\n  export: DefaultExportConfiguration,\n  math: DefaultMathConfiguration,\n  shape: DefaultShapeConfiguration,\n  \"raw-content\": DefaultRawContentConfiguration,\n  text: DefaultTexConfigurationV2,\n  type: \"TEXT\",\n  lang: \"en_US\",\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV2Configuration = {\n  server: TServerHTTPConfiguration\n  recognition: TRecognizerHTTPV2RecognitionConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport const DefaultRecognizerHTTPV2Configuration: TRecognizerHTTPV2Configuration =\n{\n  server: DefaultServerHTTPConfiguration,\n  recognition: DefaultRecognizerHTTPV2RecognitionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport class RecognizerHTTPV2Configuration implements TRecognizerHTTPV2Configuration {\n  recognition: TRecognizerHTTPV2RecognitionConfiguration\n  server: TServerHTTPConfiguration\n\n  constructor(configuration?: PartialDeep<TRecognizerHTTPV2Configuration>)\n  {\n    this.server = mergeDeep({}, DefaultRecognizerHTTPV2Configuration.server, configuration?.server)\n    this.recognition = mergeDeep({}, DefaultRecognizerHTTPV2Configuration.recognition, configuration?.recognition)\n\n    if (configuration?.recognition?.text?.mimeTypes) {\n      this.recognition.text.mimeTypes = configuration.recognition.text.mimeTypes as (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n    }\n    this.recognition.text.mimeTypes = [...new Set(this.recognition.text.mimeTypes)]\n\n    if (configuration?.recognition?.math?.mimeTypes) {\n      this.recognition.math.mimeTypes = configuration.recognition.math.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/x-latex\" | \"application/mathml+xml\")[]\n    }\n    this.recognition.math.mimeTypes = [...new Set(this.recognition.math.mimeTypes)]\n\n    if (configuration?.recognition?.shape?.mimeTypes) {\n      this.recognition.shape.mimeTypes = configuration.recognition.shape.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n    }\n    this.recognition.shape.mimeTypes = [...new Set(this.recognition.shape.mimeTypes)]\n\n    if (configuration?.recognition?.[\"raw-content\"]?.recognition?.types) {\n      this.recognition[\"raw-content\"].recognition!.types = configuration?.recognition?.[\"raw-content\"]?.recognition?.types as (\"text\" | \"shape\")[]\n    }\n    if (configuration?.recognition?.[\"raw-content\"]?.classification?.types) {\n      this.recognition[\"raw-content\"].classification!.types = configuration?.recognition?.[\"raw-content\"]?.classification?.types as (\"text\" | \"shape\")[]\n    }\n\n    if (this.server.version) {\n      if (!isVersionSuperiorOrEqual(this.server.version, \"2.3.0\")) {\n        delete this.recognition.convert\n      }\n      if (!isVersionSuperiorOrEqual(this.server.version, \"3.2.0\")) {\n        delete this.recognition.export.jiix.text.lines\n      }\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { TExport, TJIIXExport } from \"../model\"\nimport { TStroke, TStrokeToSend } from \"../symbol\"\nimport { computeHmac, isVersionSuperiorOrEqual, PartialDeep } from \"../utils\"\nimport { RecognizerError } from \"./RecognizerError\"\nimport { RecognizerHTTPV2Configuration, TRecognizerHTTPV2Configuration } from \"./RecognizerHTTPV2Configuration\"\nimport { TDiagramConfiguration, TExportConfiguration, TMathConfiguration, TRawContentConfiguration, TTextConfiguration } from \"./recognition\"\n\ntype ApiError = {\n  code?: string\n  message: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV2PostConfiguration = {\n  lang: string,\n  diagram?: TDiagramConfiguration,\n  math?: TMathConfiguration,\n  \"raw-content\"?: TRawContentConfiguration,\n  text?: TTextConfiguration,\n  export: TExportConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV2PostData = {\n  scaleX: number,\n  scaleY: number,\n  configuration: TRecognizerHTTPV2PostConfiguration,\n  contentType: string,\n  strokes: TStrokeToSend[]\n}\n\n/**\n * @group Recognizer\n */\nexport class RecognizerHTTPV2 {\n  #logger = LoggerManager.getLogger(LoggerCategory.RECOGNIZER)\n\n  protected configuration: RecognizerHTTPV2Configuration\n\n  constructor(config: PartialDeep<TRecognizerHTTPV2Configuration>) {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = new RecognizerHTTPV2Configuration(config)\n  }\n\n  get url() {\n    return `${this.configuration.server.scheme}://${this.configuration.server.host}/api/v4.0/iink/recognize`\n  }\n\n  get postConfig(): TRecognizerHTTPV2PostConfiguration {\n    switch (this.configuration.recognition.type) {\n      case \"SHAPE\":\n        return {\n          lang: this.configuration.recognition.lang,\n          diagram: this.configuration.recognition.shape,\n          export: this.configuration.recognition.export\n        }\n      case \"MATH\":\n        return {\n          lang: this.configuration.recognition.lang,\n          math: this.configuration.recognition.math,\n          export: this.configuration.recognition.export\n        }\n      case \"Raw Content\":\n        return {\n          lang: this.configuration.recognition.lang,\n          \"raw-content\": this.configuration.recognition[\"raw-content\"],\n          export: this.configuration.recognition.export\n        }\n      case \"TEXT\":\n        return {\n          lang: this.configuration.recognition.lang,\n          text: this.configuration.recognition.text,\n          export: this.configuration.recognition.export\n        }\n      default:\n        throw new Error(`get postConfig error Recognition type unkow \"${this.configuration.recognition.type}\"`)\n        break\n    }\n  }\n\n  protected formatStrokes(strokes: TStroke[]): TStrokeToSend[] {\n    return strokes.map(s => {\n      return {\n        id: s.id,\n        pointerType: s.pointerType,\n        p: s.pointers.map(p => p.p),\n        t: s.pointers.map(p => p.t),\n        x: s.pointers.map(p => p.x),\n        y: s.pointers.map(p => p.y)\n      }\n    })\n  }\n\n  protected buildData(strokes: TStroke[]): TRecognizerHTTPV2PostData {\n    this.#logger.info(\"buildData\", { strokes })\n\n    const contentType: string = this.configuration.recognition.type === \"Raw Content\" ?\n      \"Raw Content\" :\n      this.configuration.recognition.type.charAt(0).toUpperCase() + this.configuration.recognition.type.slice(1).toLowerCase()\n\n    const data = {\n      configuration: this.postConfig,\n      scaleX: 0.265,\n      scaleY: 0.265,\n      contentType,\n      strokes: this.formatStrokes(strokes)\n    }\n    this.#logger.debug(\"buildData\", { data })\n    return data\n  }\n\n  protected async post(data: unknown, mimeType: string): Promise<unknown> {\n    this.#logger.info(\"post\", { data, mimeType })\n    const headers = new Headers()\n    headers.append(\"Accept\", mimeType)\n    headers.append(\"applicationKey\", this.configuration.server.applicationKey)\n    try {\n      const hmac = await computeHmac(JSON.stringify(data), this.configuration.server.applicationKey, this.configuration.server.hmacKey)\n      headers.append(\"hmac\", hmac)\n    } catch (error) {\n      this.#logger.error(\"post.computeHmac\", error)\n    }\n    headers.append(\"Content-Type\", \"application/json\")\n\n\n    if (this.configuration.server.version && isVersionSuperiorOrEqual(this.configuration.server.version, \"2.0.4\")) {\n      headers.append(\"myscript-client-name\", \"iink-ts\")\n      headers.append(\"myscript-client-version\", \"3.0.0\")\n    }\n\n    const reqInit: RequestInit = {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(data)\n    }\n    const request = new Request(this.url, reqInit)\n    const response: Response = await fetch(request)\n    if (response.ok) {\n      const contentType = response.headers.get(\"content-type\")\n      let result: unknown\n      switch (contentType) {\n        case \"application/vnd.openxmlformats-officedocument.presentationml.presentation\":\n        case \"image/png\":\n        case \"image/jpeg\":\n          result = await response.blob()\n          break\n        case \"application/json\":\n          result = await response.json()\n          break\n        case \"application/vnd.myscript.jiix\":\n          result = await response.clone().json().catch(async () => await response.text())\n          break\n        default:\n          result = await response.text()\n          break\n      }\n      this.#logger.debug(\"post\", { result })\n      return result\n    } else {\n      const err = await response.json() as ApiError\n      this.#logger.error(\"post\", { err })\n      throw err\n    }\n  }\n\n  protected async tryFetch(data: TRecognizerHTTPV2PostData, mimeType: string): Promise<TExport | never> {\n    this.#logger.debug(\"tryFetch\", { data, mimeType })\n    return this.post(data, mimeType)\n      .then((res) => {\n        const exports: TExport = {}\n        exports[mimeType] = res as TJIIXExport | string | Blob\n        this.#logger.debug(\"tryFetch\", { exports })\n        return exports\n      })\n      .catch((err) => {\n        this.#logger.error(\"tryFetch\", { data, mimeType, err })\n        let message = err.message || RecognizerError.UNKNOW\n        if (!err.code) {\n          message = RecognizerError.CANT_ESTABLISH\n        } else if (err.code === \"access.not.granted\") {\n          message = RecognizerError.WRONG_CREDENTIALS\n        }\n        const error = new Error(message)\n        throw error\n      })\n  }\n\n  protected getMimeTypes(requestedMimeTypes?: string[]): string[] {\n    this.#logger.info(\"getMimeTypes\", { requestedMimeTypes })\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.configuration.recognition.type) {\n        case \"SHAPE\":\n          mimeTypes = this.configuration.recognition.shape.mimeTypes\n          break\n        case \"MATH\":\n          mimeTypes = this.configuration.recognition.math.mimeTypes\n          break\n        case \"Raw Content\":\n          mimeTypes = [\"application/vnd.myscript.jiix\"]\n          break\n        case \"TEXT\":\n          mimeTypes = this.configuration.recognition.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${this.configuration.recognition.type}\" is unknown.\\n Possible types are:\\n -DIAGRAM\\n -MATH\\n -Raw Content\\n -TEXT\\n -SHAPE`)\n          break\n      }\n    }\n    return mimeTypes\n  }\n\n  async send(strokes: TStroke[]): Promise<TExport> {\n    this.#logger.info(\"send\", strokes)\n    let recognition: TExport = {}\n\n    if (strokes.length === 0) {\n      return Promise.resolve(recognition)\n    }\n    if (this.configuration.recognition.type) {\n      const mimeTypes = this.getMimeTypes()\n      if (!mimeTypes.length) {\n        const error = new Error(\"send failed, no mimeTypes define in recognition configuration\")\n        this.#logger.error(\"send\", error)\n        return Promise.reject(error)\n      }\n      const data = this.buildData(strokes)\n      const exports: TExport[] = await Promise.all(mimeTypes.map(mimeType => this.tryFetch(data, mimeType)))\n      exports.forEach(e => {\n        Object.assign(recognition, e)\n      })\n    }\n    else {\n      const data = this.buildData(strokes)\n      recognition = await this.tryFetch(data, \"application/vnd.myscript.jiix\")\n    }\n\n    this.#logger.debug(\"send\", recognition)\n    return recognition\n  }\n}\n","import { TGesture } from \"../gesture\"\nimport { TExport } from \"../model\"\n\n/**\n * @group Recognizer\n */\nexport enum TRecognizerWebSocketMessageType\n{\n  HMAC_Challenge = \"hmacChallenge\",\n  Authenticated = \"authenticated\",\n  SessionDescription = \"sessionDescription\",\n  NewPart = \"newPart\",\n  PartChanged = \"partChanged\",\n  ContentChanged = \"contentChanged\",\n  Idle = \"idle\",\n  Pong = \"pong\",\n  Exported = \"exported\",\n  GestureDetected = \"gestureDetected\",\n  ContextlessGesture = \"contextlessGesture\",\n  Error = \"error\",\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessage<T = string> = {\n  type: T\n  [key: string]: unknown\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageAuthenticated = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Authenticated>\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageHMACChallenge = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.HMAC_Challenge> & {\n  hmacChallenge: string\n  iinkSessionId: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TInteractiveInkSessionDescriptionMessage = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.SessionDescription> & {\n  contentPartCount: number\n  iinkSessionId: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageNewPart = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.NewPart> & {\n  id: string\n  idx: null\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessagePartChange = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.PartChanged> & {\n  partIdx: number\n  partId: string\n  partCount: number\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageContentChange = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.ContentChanged> & {\n  partId: string\n  canUndo: boolean\n  canRedo: boolean\n  empty: boolean\n  undoStackIndex: number\n  possibleUndoCount: number\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageExport = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Exported> & {\n  partId: string\n  exports: TExport\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageGesture = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.GestureDetected> & TGesture\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageContextlessGesture = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.ContextlessGesture> & {\n  gestureType: \"none\" | \"scratch\" | \"left-right\" | \"right-left\" | \"bottom-top\" | \"top-bottom\" | \"surround\",\n  strokeId: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessagePong = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Pong>\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageIdle = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Idle>\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageError = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Error> & {\n  code?: number | string\n  message?: string\n  data?: {\n    code: number | string\n    message: string\n  }\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageReceived =\n  TRecognizerWebSocketMessageAuthenticated |\n  TRecognizerWebSocketMessageHMACChallenge |\n  TInteractiveInkSessionDescriptionMessage |\n  TRecognizerWebSocketMessageNewPart |\n  TRecognizerWebSocketMessagePartChange |\n  TRecognizerWebSocketMessageContentChange |\n  TRecognizerWebSocketMessageExport |\n  TRecognizerWebSocketMessageGesture |\n  TRecognizerWebSocketMessageContextlessGesture |\n  TRecognizerWebSocketMessagePong |\n  TRecognizerWebSocketMessageIdle |\n  TRecognizerWebSocketMessageError\n","import { mergeDeep, isVersionSuperiorOrEqual, PartialDeep } from \"../utils\"\nimport { TExportConfiguration, TTextConfConfiguration } from \"./recognition\"\nimport { DefaultServerWebsocketConfiguration, TServerWebsocketConfiguration } from \"./ServerConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRecognitionWebSocketConfiguration = {\n  lang: string\n  export: TExportConfiguration\n  \"raw-content\": {\n    text?: TTextConfConfiguration\n    \"session-time\"?: number\n    recognition?: {\n      types: (\"text\" | \"shape\")[]\n    }\n    classification?: {\n      types: (\"text\" | \"shape\")[]\n    }\n    gestures?: (\"underline\" | \"scratch-out\" | \"join\" | \"insert\" | \"strike-through\" | \"surround\")[]\n  }\n  gesture: {\n    enable: boolean,\n    ignoreGestureStrokes: boolean\n  }\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognitionWebSocketConfiguration: TRecognitionWebSocketConfiguration = {\n  export: {\n    jiix: {\n      \"bounding-box\": true,\n      \"full-stroke-ids\": true,\n      ids: true,\n      strokes: false,\n      text: {\n        chars: true,\n        words: true,\n        lines: true\n      }\n    }\n  },\n  \"raw-content\": {\n    recognition: {\n      types: [\"text\", \"shape\"]\n    },\n    classification: {\n      types: [\"text\", \"shape\"]\n    },\n    gestures: [\"underline\", \"scratch-out\", \"join\", \"insert\", \"strike-through\", \"surround\"]\n  },\n  lang: \"en_US\",\n  gesture: {\n    enable: true,\n    ignoreGestureStrokes: false,\n  }\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketConfiguration = {\n  server: TServerWebsocketConfiguration\n  recognition: TRecognitionWebSocketConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognizerWebSocketConfiguration: TRecognizerWebSocketConfiguration =\n{\n  server: DefaultServerWebsocketConfiguration,\n  recognition: DefaultRecognitionWebSocketConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport class RecognizerWebSocketConfiguration implements TRecognizerWebSocketConfiguration\n{\n  server: TServerWebsocketConfiguration\n  recognition: TRecognitionWebSocketConfiguration\n\n  constructor(configuration?: PartialDeep<TRecognizerWebSocketConfiguration>)\n  {\n    this.server = mergeDeep({}, DefaultRecognizerWebSocketConfiguration.server, configuration?.server)\n\n    this.recognition = mergeDeep({}, DefaultRecognizerWebSocketConfiguration.recognition, configuration?.recognition)\n    this.recognition.export.jiix[\"full-stroke-ids\"] = true\n    this.recognition.export.jiix.ids = true\n    this.recognition.export.jiix.text.words = true\n    this.recognition.export.jiix.text.chars = true\n    this.recognition.export.jiix.text.lines = true\n    this.recognition.export.jiix[\"bounding-box\"] = true\n    if (configuration?.recognition?.[\"raw-content\"]?.recognition?.types) {\n      this.recognition[\"raw-content\"].recognition!.types = configuration.recognition[\"raw-content\"].recognition.types as (\"text\" | \"shape\")[]\n    }\n    if (configuration?.recognition?.[\"raw-content\"]?.classification?.types) {\n      this.recognition[\"raw-content\"].classification!.types = configuration.recognition[\"raw-content\"].classification.types as (\"text\" | \"shape\")[]\n    }\n    if (configuration?.recognition?.[\"raw-content\"]?.gestures) {\n      this.recognition[\"raw-content\"].gestures = configuration.recognition[\"raw-content\"].gestures as (\"underline\" | \"scratch-out\" | \"join\" | \"insert\" | \"strike-through\" | \"surround\")[]\n    }\n    if (this.server.version && !isVersionSuperiorOrEqual(this.server.version, \"3.2.0\")) {\n      delete this.recognition.export.jiix.text.lines\n      delete this.recognition[\"raw-content\"].classification\n    }\n  }\n}\n","import { TIIHistoryBackendChanges, THistoryContext } from \"../history\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { TExport, TJIIXExport } from \"../model\"\nimport { IIStroke } from \"../symbol\"\nimport { TMatrixTransform } from \"../transform\"\nimport { computeHmac, mergeDeep, DeferredPromise, PartialDeep, isVersionSuperiorOrEqual, getApiInfos } from \"../utils\"\nimport\n{\n  TRecognizerWebSocketMessage,\n  TRecognizerWebSocketMessageContentChange,\n  TRecognizerWebSocketMessageContextlessGesture,\n  TRecognizerWebSocketMessageError,\n  TRecognizerWebSocketMessageExport,\n  TRecognizerWebSocketMessageGesture,\n  TRecognizerWebSocketMessageHMACChallenge,\n  TRecognizerWebSocketMessageNewPart,\n  TRecognizerWebSocketMessagePartChange,\n  TRecognizerWebSocketMessageReceived,\n  TRecognizerWebSocketMessageType,\n  TInteractiveInkSessionDescriptionMessage\n} from \"./RecognizerWebSocketMessage\"\nimport { RecognizerError } from \"./RecognizerError\"\nimport PingWorker from \"web-worker:../worker/ping.worker.ts\"\nimport { RecognizerEvent } from \"./RecognizerEvent\"\nimport { RecognizerWebSocketConfiguration, TRecognizerWebSocketConfiguration } from \"./RecognizerWebSocketConfiguration\"\n\n/**\n * A websocket dialog have this sequence :\n * --------------- Client --------------------------------------------------------------- Server ---------------\n * { type: \"authenticate\" }                           ==================>\n *                                                    <==================       { type: \"hmacChallenge\" }\n * { type: \"hmac\" }                                   ==================>\n *                                                    <==================       { type: \"authenticated\" }\n * { type: \"initSession\" | \"restoreSession\" }         ==================>\n *                                                    <==================       { type: \"sessionDescription\" }\n * { type: \"newContentPart\" | \"openContentPart\" }     ==================>\n *                                                    <==================       { type: \"partChanged\" }\n * { type: \"addStrokes\" }                             ==================>\n *                                                    <==================       { type: \"contentChanged\" }\n * { type: \"transform\" }                              ==================>\n *                                                    <==================       { type: \"contentChanged\" }\n * { type: \"eraseStrokes\" }                           ==================>\n *                                                    <==================       { type: \"contentChanged\" }\n */\n\n/**\n * @group Recognizer\n */\nexport class RecognizerWebSocket\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RECOGNIZER)\n\n  protected socket!: WebSocket\n  protected pingWorker?: Worker\n  protected pingCount = 0\n  protected reconnectionCount = 0\n  protected sessionId?: string\n  protected currentPartId?: string\n  protected currentErrorCode?: string | number\n\n  protected addStrokeDeferred?: DeferredPromise<TRecognizerWebSocketMessageGesture | undefined>\n  protected contextlessGestureDeferred: Map<string, DeferredPromise<TRecognizerWebSocketMessageContextlessGesture>>\n  protected transformStrokeDeferred?: DeferredPromise<void>\n  protected eraseStrokeDeferred?: DeferredPromise<void>\n  protected replaceStrokeDeferred?: DeferredPromise<void>\n  protected exportDeferredMap: Map<string, DeferredPromise<TExport>>\n  protected closeDeferred?: DeferredPromise<void>\n  protected waitForIdleDeferred?: DeferredPromise<void>\n  protected undoDeferred?: DeferredPromise<void>\n  protected redoDeferred?: DeferredPromise<void>\n  protected clearDeferred?: DeferredPromise<void>\n\n  configuration: RecognizerWebSocketConfiguration\n  initialized: DeferredPromise<void>\n  url: string\n  event: RecognizerEvent\n\n  constructor(config: PartialDeep<TRecognizerWebSocketConfiguration>, event?: RecognizerEvent)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = new RecognizerWebSocketConfiguration(config)\n    const scheme = (this.configuration.server.scheme === \"https\") ? \"wss\" : \"ws\"\n    this.url = `${ scheme }://${ this.configuration.server.host }/api/v4.0/iink/offscreen?applicationKey=${ this.configuration.server.applicationKey }`\n\n    this.event = event || new RecognizerEvent()\n    this.initialized = new DeferredPromise<void>()\n    this.exportDeferredMap = new Map()\n    this.contextlessGestureDeferred = new Map()\n  }\n\n  get mimeTypes(): string[]\n  {\n    return [\"application/vnd.myscript.jiix\"]\n  }\n\n  async #send(message: TRecognizerWebSocketMessage): Promise<void>\n  {\n    if (!this.socket) {\n      throw new Error(\"Recognizer must be initilized\")\n    }\n    if (this.socket.readyState === this.socket.OPEN) {\n      this.socket.send(JSON.stringify(message))\n    }\n    else {\n      throw new Error(`Can not send message: ${message.type}, connection not ready, state: ${ this.socket.readyState }`)\n    }\n  }\n\n  protected rejectDeferredPending(error: Error | string): void\n  {\n    this.initialized.reject(error)\n    this.addStrokeDeferred?.reject(error)\n    this.transformStrokeDeferred?.reject(error)\n    this.eraseStrokeDeferred?.reject(error)\n    this.replaceStrokeDeferred?.reject(error)\n    this.undoDeferred?.reject(error)\n    this.redoDeferred?.reject(error)\n    this.clearDeferred?.reject(error)\n    Array.from(this.contextlessGestureDeferred.values())\n      .forEach(v =>\n      {\n        v.reject(error)\n      })\n    Array.from(this.exportDeferredMap.values())\n      .forEach(v =>\n      {\n        v.reject(error)\n      })\n    this.waitForIdleDeferred?.reject(error)\n  }\n\n  protected resetAllDeferred(): void\n  {\n    this.initialized = new DeferredPromise<void>()\n    this.addStrokeDeferred = undefined\n    this.contextlessGestureDeferred.clear()\n    this.transformStrokeDeferred = undefined\n    this.eraseStrokeDeferred = undefined\n    this.replaceStrokeDeferred = undefined\n    this.exportDeferredMap.clear()\n    this.waitForIdleDeferred = undefined\n    this.closeDeferred = undefined\n  }\n\n  protected clearSocketListener(): void\n  {\n    this.socket.removeEventListener(\"open\", this.openCallback.bind(this))\n    this.socket.removeEventListener(\"close\", this.closeCallback.bind(this))\n    this.socket.removeEventListener(\"message\", this.messageCallback.bind(this))\n  }\n\n  protected closeCallback(evt: CloseEvent): void\n  {\n    this.#logger.info(\"closeCallback\", { evt })\n    let message = evt.reason\n    if (!this.currentErrorCode) {\n      switch (evt.code) {\n        case 1000:\n          // Normal Closure\n          break\n        case 1001:\n          message = RecognizerError.GOING_AWAY\n          break\n        case 1002:\n          message = RecognizerError.PROTOCOL_ERROR\n          break\n        case 1003:\n          message = RecognizerError.UNSUPPORTED_DATA\n          break\n        case 1006:\n          message = RecognizerError.ABNORMAL_CLOSURE\n          break\n        case 1007:\n          message = RecognizerError.INVALID_FRAME_PAYLOAD\n          break\n        case 1008:\n          message = RecognizerError.POLICY_VIOLATION\n          break\n        case 1009:\n          message = RecognizerError.MESSAGE_TOO_BIG\n          break\n        case 1011:\n          message = RecognizerError.INTERNAL_ERROR\n          break\n        case 1012:\n          message = RecognizerError.SERVICE_RESTART\n          break\n        case 1013:\n          message = RecognizerError.TRY_AGAIN\n          break\n        case 1014:\n          message = RecognizerError.BAD_GATEWAY\n          break\n        case 1015:\n          message = RecognizerError.TLS_HANDSHAKE\n          break\n        default:\n          message = RecognizerError.CANT_ESTABLISH\n          break\n      }\n    }\n\n    this.clearSocketListener()\n    this.closeDeferred?.resolve()\n    if (!this.currentErrorCode && evt.code !== 1000) {\n      const error = new Error(message)\n      this.event.emitError(error)\n      this.rejectDeferredPending(message)\n    }\n    this.pingWorker?.terminate()\n    this.resetAllDeferred()\n  }\n\n  protected openCallback(): void\n  {\n    this.reconnectionCount = 0\n    this.#send({\n      type: \"authenticate\",\n      \"myscript-client-name\": \"iink-ts\",\n      \"myscript-client-version\": \"3.0.0\",\n    })\n  }\n\n  protected async manageHMACChallenge(hmacChallengeMessage: TRecognizerWebSocketMessageHMACChallenge): Promise<void>\n  {\n    this.#send({\n      type: \"hmac\",\n      hmac: await computeHmac(hmacChallengeMessage.hmacChallenge, this.configuration.server.applicationKey, this.configuration.server.hmacKey)\n    })\n  }\n\n  protected initPing(): void\n  {\n    this.pingWorker = new PingWorker()\n    this.pingWorker.postMessage({\n      pingDelay: this.configuration.server.websocket.pingDelay,\n    })\n    this.pingWorker.onmessage = () =>\n    {\n      if (this.socket.readyState <= 1) {\n        if (this.pingCount < this.configuration.server.websocket.maxPingLostCount) {\n          this.send({ type: \"ping\" })\n        }\n        else {\n          this.close(1000, \"MAXIMUM_PING_REACHED\")\n          this.pingWorker?.terminate()\n        }\n        this.pingCount++\n      }\n    }\n  }\n\n  protected manageAuthenticated(): void\n  {\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"3.2.0\")) {\n      delete this.configuration.recognition.export.jiix.text.lines\n      delete this.configuration.recognition[\"raw-content\"].classification\n    }\n    const pixelTomm = 25.4 / 96\n    this.#send({\n      type: this.sessionId ? \"restoreSession\" : \"initSession\",\n      iinkSessionId: this.sessionId,\n      scaleX: pixelTomm,\n      scaleY: pixelTomm,\n      configuration: this.configuration.recognition\n    })\n  }\n\n  protected manageSessionDescriptionMessage(sessionDescriptionMessage: TInteractiveInkSessionDescriptionMessage): void\n  {\n    if (sessionDescriptionMessage.iinkSessionId) {\n      this.sessionId = sessionDescriptionMessage.iinkSessionId\n      this.event.emitSessionOpened(this.sessionId)\n    }\n    if (this.currentPartId) {\n      this.#send({ type: \"openContentPart\", id: this.currentPartId })\n    }\n    else {\n      this.#send({ type: \"newContentPart\", contentType: \"Raw Content\", mimeTypes: this.mimeTypes })\n    }\n  }\n\n  protected manageNewPartMessage(newPartMessage: TRecognizerWebSocketMessageNewPart): void\n  {\n    this.initialized.resolve()\n    this.currentPartId = newPartMessage.id\n  }\n\n  protected managePartChangeMessage(partChangeMessage: TRecognizerWebSocketMessagePartChange): void\n  {\n    this.initialized.resolve()\n    this.currentPartId = partChangeMessage.partId\n  }\n\n  protected manageContentChangedMessage(contentChangeMessage: TRecognizerWebSocketMessageContentChange): void\n  {\n    this.initialized.resolve()\n    this.replaceStrokeDeferred?.resolve()\n    this.transformStrokeDeferred?.resolve()\n    this.eraseStrokeDeferred?.resolve()\n    this.undoDeferred?.resolve()\n    this.redoDeferred?.resolve()\n    this.clearDeferred?.resolve()\n    this.event.emitContentChanged({\n      canRedo: contentChangeMessage.canRedo,\n      canUndo: contentChangeMessage.canRedo,\n    } as THistoryContext)\n  }\n\n  protected manageExportMessage(exportMessage: TRecognizerWebSocketMessageExport): void\n  {\n    if (exportMessage.exports[\"application/vnd.myscript.jiix\"]) {\n      exportMessage.exports[\"application/vnd.myscript.jiix\"] = JSON.parse(exportMessage.exports[\"application/vnd.myscript.jiix\"].toString()) as TJIIXExport\n    }\n\n    Object.keys(exportMessage.exports)\n      .forEach(key =>\n      {\n        if (this.exportDeferredMap.has(key)) {\n          this.exportDeferredMap.get(key)!.resolve(exportMessage.exports)\n        }\n      })\n    this.event.emitExported(exportMessage.exports)\n  }\n\n  protected manageWaitForIdle(): void\n  {\n    this.waitForIdleDeferred?.resolve()\n    this.event.emitIdle(true)\n  }\n\n  protected manageErrorMessage(errorMessage: TRecognizerWebSocketMessageError): void\n  {\n    this.currentErrorCode = errorMessage.data?.code || errorMessage.code\n    let message = errorMessage.data?.message || errorMessage.message || RecognizerError.UNKNOW\n\n    if (this.currentErrorCode === \"no.activity\") {\n      this.rejectDeferredPending(message)\n      this.event.emitConnectionClose({ code: 1000,  message: RecognizerError.NO_ACTIVITY })\n    }\n    else {\n      switch (this.currentErrorCode) {\n        case \"access.not.granted\":\n          message = RecognizerError.WRONG_CREDENTIALS\n          break\n        case \"session.too.old\":\n          message = RecognizerError.TOO_OLD\n          break\n        case \"restore.session.not.found\":\n          message = RecognizerError.NO_SESSION_FOUND\n          break\n      }\n      this.rejectDeferredPending(message)\n      this.event.emitError(new Error(message))\n    }\n  }\n\n  protected manageGestureDetected(gestureMessage: TRecognizerWebSocketMessageGesture): void\n  {\n    this.addStrokeDeferred?.resolve(gestureMessage)\n  }\n\n  protected manageContextlessGesture(gestureMessage: TRecognizerWebSocketMessageContextlessGesture): void\n  {\n    this.contextlessGestureDeferred.get(gestureMessage.strokeId)?.resolve(gestureMessage)\n  }\n\n  protected messageCallback(message: MessageEvent<string>): void\n  {\n    this.currentErrorCode = undefined\n    try {\n      const websocketMessage: TRecognizerWebSocketMessageReceived = JSON.parse(message.data)\n      if (websocketMessage.type === TRecognizerWebSocketMessageType.Pong) {\n        return\n      }\n      this.pingCount = 0\n      switch (websocketMessage.type) {\n        case TRecognizerWebSocketMessageType.HMAC_Challenge:\n          this.manageHMACChallenge(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.Authenticated:\n          this.manageAuthenticated()\n          break\n        case TRecognizerWebSocketMessageType.SessionDescription:\n          this.manageSessionDescriptionMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.NewPart:\n          this.manageNewPartMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.PartChanged:\n          this.managePartChangeMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.ContentChanged:\n          this.manageContentChangedMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.Exported:\n          this.manageExportMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.GestureDetected:\n          this.manageGestureDetected(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.ContextlessGesture:\n          this.manageContextlessGesture(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.Error:\n          this.manageErrorMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.Idle:\n          this.manageWaitForIdle()\n          break\n        default:\n          this.#logger.warn(\"messageCallback\", `Message type unknow: \"${ websocketMessage }\".`)\n          break\n      }\n    }\n    catch {\n      this.event.emitError(new Error(message.data))\n    }\n  }\n\n  async newSession(config: PartialDeep<TRecognizerWebSocketConfiguration>): Promise<void>\n  {\n    await this.close(1000, \"new-session\")\n    this.configuration = mergeDeep({}, this.configuration, config)\n    this.sessionId = undefined\n    this.currentPartId = undefined\n    await this.init()\n  }\n\n  async init(): Promise<void>\n  {\n    this.event.emitStartInitialization()\n    if (this.currentErrorCode === \"restore.session.not.found\") {\n      this.currentErrorCode = undefined\n      this.sessionId = undefined\n      this.currentPartId = undefined\n    }\n    this.initialized = new DeferredPromise<void>()\n    if (!this.configuration.server.version) {\n      this.configuration.server.version = (await getApiInfos(this.configuration)).version\n    }\n    this.socket = new WebSocket(this.url)\n    this.clearSocketListener()\n    this.socket.addEventListener(\"open\", this.openCallback.bind(this))\n    this.socket.addEventListener(\"close\", this.closeCallback.bind(this))\n    this.socket.addEventListener(\"message\", this.messageCallback.bind(this))\n    await this.initialized.promise\n    if (this.configuration.server.websocket.pingEnabled) {\n      this.pingCount = 0\n      this.initPing()\n    }\n    this.event.emitEndtInitialization()\n  }\n\n  async send(message: TRecognizerWebSocketMessage): Promise<void>\n  {\n    if (!this.socket) {\n      return Promise.reject(new Error(\"Recognizer must be initilized\"))\n    }\n\n    switch (this.socket.readyState) {\n      case this.socket.CONNECTING:\n      case this.socket.OPEN:\n        await this.initialized.promise\n        this.#send(message)\n        return Promise.resolve()\n      case this.socket.CLOSING:\n      case this.socket.CLOSED:\n        if (this.configuration.server.websocket.autoReconnect) {\n          this.reconnectionCount++\n          if (this.configuration.server.websocket.maxRetryCount > this.reconnectionCount) {\n            await this.init()\n            await this.waitForIdle()\n            return this.#send(message)\n          }\n          else {\n            return Promise.reject(new Error(\"Unable to send message. The maximum number of connection attempts has been reached.\"))\n          }\n        }\n        else {\n          return Promise.reject(new Error(\"Unable to send message. Connection closed and automatic reconnection disabled\"))\n        }\n        break\n    }\n  }\n\n  protected buildAddStrokesMessage(strokes: IIStroke[], processGestures = true): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"addStrokes\",\n      processGestures,\n      strokes: strokes.map(s => s.formatToSend())\n    }\n  }\n  async addStrokes(strokes: IIStroke[], processGestures = true): Promise<TRecognizerWebSocketMessageGesture | undefined>\n  {\n    this.addStrokeDeferred = new DeferredPromise<TRecognizerWebSocketMessageGesture | undefined>()\n    if (strokes.length === 0) {\n      this.addStrokeDeferred.resolve(undefined)\n      return this.addStrokeDeferred?.promise\n    }\n    await this.send(this.buildAddStrokesMessage(strokes, processGestures))\n    return this.addStrokeDeferred?.promise\n  }\n\n  protected buildReplaceStrokesMessage(oldStrokeIds: string[], newStrokes: IIStroke[]): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"replaceStrokes\",\n      oldStrokeIds,\n      newStrokes: newStrokes.map(s => s.formatToSend())\n    }\n  }\n  async replaceStrokes(oldStrokeIds: string[], newStrokes: IIStroke[]): Promise<void>\n  {\n    this.replaceStrokeDeferred = new DeferredPromise<void>()\n    if (oldStrokeIds.length === 0) {\n      this.replaceStrokeDeferred.resolve()\n      return this.replaceStrokeDeferred?.promise\n    }\n    await this.send(this.buildReplaceStrokesMessage(oldStrokeIds, newStrokes))\n    return this.replaceStrokeDeferred?.promise\n  }\n\n  protected buildTransformTranslateMessage(strokeIds: string[], tx: number, ty: number): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"transform\",\n      transformationType: \"TRANSLATE\",\n      strokeIds,\n      tx,\n      ty\n    }\n  }\n  async transformTranslate(strokeIds: string[], tx: number, ty: number): Promise<void>\n  {\n    this.transformStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.transformStrokeDeferred.resolve()\n      return this.transformStrokeDeferred?.promise\n    }\n    await this.send(this.buildTransformTranslateMessage(strokeIds, tx, ty))\n    return this.transformStrokeDeferred?.promise\n  }\n\n  protected buildTransformRotateMessage(strokeIds: string[], angle: number, x0: number = 0, y0: number = 0): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"transform\",\n      transformationType: \"ROTATE\",\n      strokeIds,\n      angle,\n      x0,\n      y0\n    }\n  }\n  async transformRotate(strokeIds: string[], angle: number, x0: number = 0, y0: number = 0): Promise<void>\n  {\n    this.transformStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.transformStrokeDeferred.resolve()\n      return this.transformStrokeDeferred?.promise\n    }\n    await this.send(this.buildTransformRotateMessage(strokeIds, angle, x0, y0))\n    return this.transformStrokeDeferred?.promise\n  }\n\n  protected buildTransformScaleMessage(strokeIds: string[], scaleX: number, scaleY: number, x0: number = 0, y0: number = 0): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"transform\",\n      transformationType: \"SCALE\",\n      strokeIds,\n      scaleX,\n      scaleY,\n      x0,\n      y0\n    }\n  }\n  async transformScale(strokeIds: string[], scaleX: number, scaleY: number, x0: number = 0, y0: number = 0): Promise<void>\n  {\n    this.transformStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.transformStrokeDeferred.resolve()\n      return this.transformStrokeDeferred?.promise\n    }\n    await this.send(this.buildTransformScaleMessage(strokeIds, scaleX, scaleY, x0, y0))\n    return this.transformStrokeDeferred?.promise\n  }\n\n  protected buildTransformMatrixMessage(strokeIds: string[], matrix: TMatrixTransform): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"transform\",\n      transformationType: \"MATRIX\",\n      strokeIds,\n      ...matrix\n    }\n  }\n  async transformMatrix(strokeIds: string[], matrix: TMatrixTransform): Promise<void>\n  {\n    this.transformStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.transformStrokeDeferred.resolve()\n      return this.transformStrokeDeferred?.promise\n    }\n    await this.send(this.buildTransformMatrixMessage(strokeIds, matrix))\n    return this.transformStrokeDeferred?.promise\n  }\n\n  protected buildEraseStrokesMessage(strokeIds: string[]): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"eraseStrokes\",\n      strokeIds\n    }\n  }\n  async eraseStrokes(strokeIds: string[]): Promise<void>\n  {\n    this.eraseStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.eraseStrokeDeferred.resolve()\n      return this.eraseStrokeDeferred?.promise\n    }\n    await this.send(this.buildEraseStrokesMessage(strokeIds))\n    return this.eraseStrokeDeferred?.promise\n  }\n\n  async recognizeGesture(stroke: IIStroke): Promise<TRecognizerWebSocketMessageContextlessGesture | undefined>\n  {\n    if (!stroke) {\n      return\n    }\n    this.contextlessGestureDeferred.set(stroke.id, new DeferredPromise<TRecognizerWebSocketMessageContextlessGesture>())\n    const pixelTomm = 25.4 / 96\n    await this.send({\n      type: \"contextlessGesture\",\n      scaleX: pixelTomm,\n      scaleY: pixelTomm,\n      stroke: stroke.formatToSend()\n    })\n    return this.contextlessGestureDeferred.get(stroke.id)!.promise\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    if (!this.waitForIdleDeferred || this.waitForIdleDeferred.isFullFilled) {\n      this.waitForIdleDeferred = new DeferredPromise<void>()\n    }\n    const message: TRecognizerWebSocketMessage = {\n      type: \"waitForIdle\",\n    }\n    await this.send(message)\n    return this.waitForIdleDeferred?.promise\n  }\n\n  protected buildUndoRedoChanges(changes: TIIHistoryBackendChanges): TRecognizerWebSocketMessage[]\n  {\n    const changesMessages: TRecognizerWebSocketMessage[] = []\n    if (changes.added?.length) {\n      changesMessages.push(this.buildAddStrokesMessage(changes.added, false))\n    }\n    if (changes.erased?.length) {\n      changesMessages.push(this.buildEraseStrokesMessage(changes.erased.map(s => s.id)))\n    }\n    if (changes.replaced?.newStrokes.length) {\n      changesMessages.push(this.buildReplaceStrokesMessage(changes.replaced.oldStrokes.map(s => s.id), changes.replaced.newStrokes))\n    }\n    if (changes.matrix?.strokes.length) {\n      changesMessages.push(this.buildTransformMatrixMessage(changes.matrix.strokes.map(s => s.id), changes.matrix.matrix))\n    }\n    if (changes.translate?.length) {\n      changes.translate.forEach(tr =>\n      {\n        changesMessages.push(this.buildTransformTranslateMessage(tr.strokes.map(s => s.id), tr.tx, tr.ty))\n      })\n    }\n    if (changes.rotate?.length) {\n      changes.rotate.forEach(tr =>\n      {\n        changesMessages.push(this.buildTransformRotateMessage(tr.strokes.map(s => s.id), tr.angle, tr.center.x, tr.center.y))\n      })\n    }\n    if (changes.scale?.length) {\n      changes.scale.forEach(tr =>\n      {\n        changesMessages.push(this.buildTransformScaleMessage(tr.strokes.map(s => s.id), tr.scaleX, tr.scaleY, tr.origin.x, tr.origin.y))\n      })\n    }\n    return changesMessages\n  }\n\n  async undo(actions: TIIHistoryBackendChanges): Promise<void>\n  {\n    const changes = this.buildUndoRedoChanges(actions)\n    if (changes.length === 0) {\n      return\n    }\n    this.undoDeferred = new DeferredPromise<void>()\n    const message: TRecognizerWebSocketMessage = {\n      type: \"undo\",\n      changes\n    }\n    await this.send(message)\n    return this.undoDeferred?.promise\n  }\n\n  async redo(actions: TIIHistoryBackendChanges): Promise<void>\n  {\n    const changes = this.buildUndoRedoChanges(actions)\n    if (changes.length === 0) {\n      return\n    }\n    this.redoDeferred = new DeferredPromise<void>()\n\n    const message: TRecognizerWebSocketMessage = {\n      type: \"redo\",\n      changes\n    }\n    await this.send(message)\n    return this.redoDeferred?.promise\n  }\n\n  async export(requestedMimeTypes?: string[]): Promise<TExport>\n  {\n    const mimeTypes: string[] = requestedMimeTypes || this.mimeTypes.slice()\n    await Promise.all(mimeTypes.map(mt => this.exportDeferredMap.get(mt)?.promise))\n    mimeTypes.forEach(mt =>\n    {\n      this.exportDeferredMap.set(mt, new DeferredPromise<TExport>())\n    })\n\n    const message: TRecognizerWebSocketMessage = {\n      type: \"export\",\n      partId: this.currentPartId,\n      mimeTypes\n    }\n    await this.send(message)\n    const exports = await Promise.all(mimeTypes.map(mt => this.exportDeferredMap.get(mt)!.promise))\n    return Object.assign({}, ...exports)\n  }\n\n  async clear(): Promise<void>\n  {\n    this.clearDeferred = new DeferredPromise<void>()\n    await this.send({\n      type: \"clear\"\n    })\n    return this.clearDeferred?.promise\n  }\n\n  async close(code: number, reason: string): Promise<void>\n  {\n    this.resetAllDeferred()\n    this.closeDeferred = new DeferredPromise<void>()\n    if (this.socket.readyState === this.socket.OPEN || this.socket.readyState === this.socket.CONNECTING) {\n      this.socket.close(code, reason)\n    }\n    else {\n      this.closeDeferred.resolve()\n    }\n    await this.closeDeferred.promise\n  }\n\n  async destroy(): Promise<void>\n  {\n    if (this.socket) {\n      await this.close(1000, \"Recognizer destroyed\")\n    }\n  }\n}\n","import { isVersionSuperiorOrEqual, mergeDeep, PartialDeep } from \"../utils\"\nimport {\n  DefaultExportConfiguration,\n  DefaultMathConfiguration,\n  DefaultRecognitionRendererConfiguration,\n  DefaultTextConfiguration,\n  TConvertionConfiguration,\n  TExportConfiguration,\n  TMathConfiguration,\n  TRecognitionRendererConfiguration,\n  TTextConfiguration\n} from \"./recognition\"\nimport { TRecognitionType } from \"./RecognitionConfiguration\"\nimport { DefaultServerWebsocketConfiguration, TServerWebsocketConfiguration } from \"./ServerConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketSSRRecognitionConfiguration = {\n  type: Omit<TRecognitionType, \"DIAGRAM\" | \"Raw Content\">\n  lang: string\n  math: TMathConfiguration\n  text: TTextConfiguration\n  renderer: TRecognitionRendererConfiguration\n  export: TExportConfiguration\n  convert?: TConvertionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognizerWebSocketSSRRecognitionConfiguration: TRecognizerWebSocketSSRRecognitionConfiguration = {\n  export: DefaultExportConfiguration,\n  math: DefaultMathConfiguration,\n  renderer: DefaultRecognitionRendererConfiguration,\n  text: DefaultTextConfiguration,\n  type: \"TEXT\",\n  lang: \"en_US\",\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketSSRConfiguration = {\n  server: TServerWebsocketConfiguration\n  recognition: TRecognizerWebSocketSSRRecognitionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognizerWebSocketSSRConfiguration: TRecognizerWebSocketSSRConfiguration =\n{\n  server: DefaultServerWebsocketConfiguration,\n  recognition: DefaultRecognizerWebSocketSSRRecognitionConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport class RecognizerWebSocketSSRConfiguration implements TRecognizerWebSocketSSRConfiguration\n{\n  recognition: TRecognizerWebSocketSSRRecognitionConfiguration\n  server: TServerWebsocketConfiguration\n\n  constructor(configuration?: PartialDeep<TRecognizerWebSocketSSRConfiguration>) {\n    this.server = mergeDeep({}, DefaultRecognizerWebSocketSSRConfiguration.server, configuration?.server)\n    this.recognition = mergeDeep({}, DefaultRecognizerWebSocketSSRConfiguration.recognition, configuration?.recognition)\n\n    if (configuration?.recognition?.text?.mimeTypes) {\n      this.recognition.text.mimeTypes = configuration.recognition.text.mimeTypes as (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n    }\n    this.recognition.text.mimeTypes = [...new Set(this.recognition.text.mimeTypes)]\n\n    if (configuration?.recognition?.math?.mimeTypes) {\n      this.recognition.math.mimeTypes = configuration.recognition.math.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/x-latex\" | \"application/mathml+xml\")[]\n    }\n    this.recognition.math.mimeTypes = [...new Set(this.recognition.math.mimeTypes)]\n\n    if (this.server.version) {\n      if (!isVersionSuperiorOrEqual(this.server.version, \"2.3.0\")) {\n        delete this.recognition.convert\n      }\n      if (!isVersionSuperiorOrEqual(this.server.version, \"3.2.0\")) {\n        delete this.recognition.export.jiix.text.lines\n      }\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { Stroke } from \"../symbol\"\nimport { StyleHelper, TPenStyle, TTheme } from \"../style\"\nimport { THistoryContext } from \"../history\"\nimport { DeferredPromise, PartialDeep, computeHmac, getApiInfos, isVersionSuperiorOrEqual } from \"../utils\"\nimport\n{\n  TRecognizerWebSocketSSRMessage,\n  TRecognizerWebSocketSSRMessageContentChange,\n  TRecognizerWebSocketSSRMessageError,\n  TRecognizerWebSocketSSRMessageExport,\n  TRecognizerWebSocketSSRMessageHMACChallenge,\n  TRecognizerWebSocketSSRMessagePartChange,\n  TRecognizerWebSocketSSRMessageSVGPatch\n} from \"./RecognizerWebSocketSSRMessage\"\nimport { RecognizerError } from \"./RecognizerError\"\nimport { RecognizerEvent } from \"./RecognizerEvent\"\nimport { TRecognizerWebSocketSSRConfiguration, RecognizerWebSocketSSRConfiguration } from \"./RecognizerWebSocketSSRConfiguration\"\nimport { TConverstionState } from \"./RecognitionConfiguration\"\n\n/**\n * A websocket dialog have this sequence :\n * --------------------------- Client --------------------------------------------------- Server ----------------------------------\n * init: send newContentPackage or restoreIInkSession           ==================>\n *                                                              <==================       ack\n * answer ack:\n *  send the hmac (if enable)                                   ==================>\n *  send the configuration                                      ==================>\n *                                                              <==================       contentPackageDescription\n * answer contentPackageDescription:\n *  send newContentPart or openContentPart                      ==================>\n *                                                              <==================        partChanged\n *                                                              <==================        contentChanged\n *                                                              <==================        newPart\n *                                                              <==================        svgPatch\n *\n * setPenStyle (send the parameters)                            ==================>\n * setTheme (send the parameters)                               ==================>\n * setPenStyleClasses (send the parameters)                     ==================>\n *                                                              <==================        svgPatch\n * addStrokes (send the strokes ) ============>\n *                                                              <==================        update\n */\n\n/**\n * @group Recognizer\n */\nexport class RecognizerWebSocketSSR\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RECOGNIZER)\n\n  protected socket!: WebSocket\n  protected pingCount = 0\n  protected reconnectionCount = 0\n  protected viewSizeHeight!: number\n  protected viewSizeWidth!: number\n  protected sessionId?: string\n  // contentPartCount = 0\n  currentPartId?: string\n  protected currentErrorCode?: string | number\n\n  protected penStyle?: TPenStyle\n  protected penStyleClasses?: string\n  protected theme?: TTheme\n\n  protected connected?: DeferredPromise<void>\n  protected ackDeferred?: DeferredPromise<void>\n  protected addStrokeDeferred?: DeferredPromise<TExport>\n  protected exportDeferred?: DeferredPromise<TExport>\n  protected convertDeferred?: DeferredPromise<TExport>\n  protected importDeferred?: DeferredPromise<TExport>\n  protected resizeDeferred?: DeferredPromise<void>\n  protected undoDeferred?: DeferredPromise<TExport>\n  protected redoDeferred?: DeferredPromise<TExport>\n  protected clearDeferred?: DeferredPromise<TExport>\n  protected importPointEventsDeferred?: DeferredPromise<TExport>\n  protected waitForIdleDeferred?: DeferredPromise<void>\n\n  configuration: TRecognizerWebSocketSSRConfiguration\n  initialized: DeferredPromise<void>\n  url: string\n  event: RecognizerEvent\n\n  constructor(config?: PartialDeep<TRecognizerWebSocketSSRConfiguration>)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = new RecognizerWebSocketSSRConfiguration(config)\n    const scheme = (this.configuration.server.scheme === \"https\") ? \"wss\" : \"ws\"\n    this.url = `${ scheme }://${ this.configuration.server.host }/api/v4.0/iink/document?applicationKey=${ this.configuration.server.applicationKey }`\n    this.event = new RecognizerEvent()\n    this.initialized = new DeferredPromise<void>()\n  }\n\n  get mimeTypes(): string[]\n  {\n    switch (this.configuration.recognition.type.toLocaleLowerCase()) {\n      case \"text\":\n        return this.configuration.recognition.text.mimeTypes\n      case \"math\":\n        return this.configuration.recognition.math.mimeTypes\n      default:\n        throw new Error(`Unauthorized recognition type: \"${ this.configuration.recognition.type }\"`)\n    }\n  }\n\n  protected infinitePing(): void\n  {\n    this.pingCount++\n    if (this.configuration.server.websocket.maxPingLostCount < this.pingCount) {\n      this.socket.close(1000, \"MAXIMUM_PING_REACHED\")\n    } else if (this.socket.readyState <= 1) {\n      setTimeout(() =>\n      {\n        if (this.socket.readyState <= 1) {\n          this.socket.send(JSON.stringify({ type: \"ping\" }))\n          this.infinitePing()\n        }\n      }, this.configuration.server.websocket.pingDelay)\n    }\n  }\n\n  protected openCallback(): void\n  {\n    this.connected?.resolve()\n    const params: TRecognizerWebSocketSSRMessage = {\n      type: this.sessionId ? \"restoreIInkSession\" : \"newContentPackage\",\n      iinkSessionId: this.sessionId,\n      applicationKey: this.configuration.server.applicationKey,\n      xDpi: 96,\n      yDpi: 96,\n      viewSizeHeight: this.viewSizeHeight,\n      viewSizeWidth: this.viewSizeWidth\n    }\n    if (isVersionSuperiorOrEqual(this.configuration.server.version!, \"2.0.4\")) {\n      params[\"myscript-client-name\"] = \"iink-ts\"\n      params[\"myscript-client-version\"] = \"3.0.0\"\n    }\n    this.send(params)\n  }\n\n  protected rejectDeferredPending(error: Error): void\n  {\n    if (this.connected?.isPending) {\n      this.connected?.reject(error)\n    }\n    if (this.initialized.isPending) {\n      this.initialized.reject(error)\n    }\n    if (this.addStrokeDeferred?.isPending) {\n      this.addStrokeDeferred?.reject(error)\n    }\n    if (this.exportDeferred?.isPending) {\n      this.exportDeferred?.reject(error)\n    }\n    if (this.importPointEventsDeferred?.isPending) {\n      this.importPointEventsDeferred?.reject(error)\n    }\n    if (this.convertDeferred?.isPending) {\n      this.convertDeferred?.reject(error)\n    }\n    if (this.importDeferred?.isPending) {\n      this.importDeferred?.reject(error)\n    }\n    if (this.resizeDeferred?.isPending) {\n      this.resizeDeferred?.reject(error)\n    }\n    if (this.waitForIdleDeferred?.isPending) {\n      this.waitForIdleDeferred?.reject(error)\n    }\n    if (this.undoDeferred?.isPending) {\n      this.undoDeferred?.reject(error)\n    }\n    if (this.redoDeferred?.isPending) {\n      this.redoDeferred?.reject(error)\n    }\n    if (this.clearDeferred?.isPending) {\n      this.clearDeferred.reject(error)\n    }\n    if (this.waitForIdleDeferred?.isPending) {\n      this.waitForIdleDeferred.reject(error)\n    }\n  }\n\n  protected closeCallback(evt: CloseEvent): void\n  {\n    let message = \"\"\n    if (!this.currentErrorCode) {\n      switch (evt.code) {\n        case 1000:\n          // Normal Closure\n          break\n        case 1001:\n          message = RecognizerError.GOING_AWAY\n          break\n        case 1002:\n          message = RecognizerError.PROTOCOL_ERROR\n          break\n        case 1003:\n          message = RecognizerError.UNSUPPORTED_DATA\n          break\n        case 1006:\n          message = RecognizerError.ABNORMAL_CLOSURE\n          break\n        case 1007:\n          message = RecognizerError.INVALID_FRAME_PAYLOAD\n          break\n        case 1008:\n          message = RecognizerError.POLICY_VIOLATION\n          break\n        case 1009:\n          message = RecognizerError.MESSAGE_TOO_BIG\n          break\n        case 1011:\n          message = RecognizerError.INTERNAL_ERROR\n          break\n        case 1012:\n          message = RecognizerError.SERVICE_RESTART\n          break\n        case 1013:\n          message = RecognizerError.TRY_AGAIN\n          break\n        case 1014:\n          message = RecognizerError.BAD_GATEWAY\n          break\n        case 1015:\n          message = RecognizerError.TLS_HANDSHAKE\n          break\n        default:\n          this.#logger.warn(\"closeCallback\", \"unknow CloseEvent.code\", { evt })\n          message = RecognizerError.CANT_ESTABLISH\n          break\n      }\n    }\n\n    if (!this.currentErrorCode && evt.code !== 1000) {\n      const error = new Error(message || evt.reason)\n      this.rejectDeferredPending(error)\n      this.event.emitError(error)\n    }\n  }\n\n  protected async manageAckMessage(websocketMessage: TRecognizerWebSocketSSRMessage): Promise<void>\n  {\n    this.#logger.info(\"manageAckMessage\", { websocketMessage })\n    const hmacChallengeMessage = websocketMessage as TRecognizerWebSocketSSRMessageHMACChallenge\n    if (hmacChallengeMessage.hmacChallenge) {\n      this.send({\n        type: \"hmac\",\n        hmac: await computeHmac(hmacChallengeMessage.hmacChallenge, this.configuration.server.applicationKey, this.configuration.server.hmacKey)\n      })\n    }\n    if (hmacChallengeMessage.iinkSessionId) {\n      this.sessionId = hmacChallengeMessage.iinkSessionId\n    }\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"2.3.0\")) {\n      delete this.configuration.recognition.convert\n    }\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"3.2.0\")) {\n      delete this.configuration.recognition.export.jiix.text.lines\n    }\n    this.send({ ...this.configuration.recognition, type: \"configuration\" })\n    this.ackDeferred?.resolve()\n  }\n\n  protected async manageContentPackageDescriptionMessage(): Promise<void>\n  {\n    this.reconnectionCount = 0\n    await this.ackDeferred?.promise\n    this.#logger.info(\"manageContentPackageDescriptionMessage\")\n    if (this.currentPartId) {\n      this.send({ type: \"openContentPart\", id: this.currentPartId, mimeTypes: this.mimeTypes })\n    }\n    else {\n      this.send({ type: \"newContentPart\", contentType: this.configuration.recognition.type, mimeTypes: this.mimeTypes })\n    }\n  }\n\n  protected managePartChangeMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    this.#logger.info(\"managePartChangeMessage\", { websocketMessage })\n    const partChangeMessage = websocketMessage as TRecognizerWebSocketSSRMessagePartChange\n    this.currentPartId = partChangeMessage.partId\n    this.initialized.resolve()\n  }\n\n  protected manageExportMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    this.#logger.info(\"manageExportMessage\", { websocketMessage })\n    const exportMessage = websocketMessage as TRecognizerWebSocketSSRMessageExport\n    if (exportMessage.exports[\"application/vnd.myscript.jiix\"]) {\n      exportMessage.exports[\"application/vnd.myscript.jiix\"] = JSON.parse(exportMessage.exports[\"application/vnd.myscript.jiix\"].toString()) as TJIIXExport\n    }\n    this.initialized.resolve()\n    this.addStrokeDeferred?.resolve(exportMessage.exports)\n    this.exportDeferred?.resolve(exportMessage.exports)\n    this.convertDeferred?.resolve(exportMessage.exports)\n    this.importDeferred?.resolve(exportMessage.exports)\n    this.undoDeferred?.resolve(exportMessage.exports)\n    this.redoDeferred?.resolve(exportMessage.exports)\n    this.clearDeferred?.resolve(exportMessage.exports)\n    this.importPointEventsDeferred?.resolve(exportMessage.exports)\n    this.event.emitExported(exportMessage.exports)\n  }\n\n  protected async manageWaitForIdle(): Promise<void>\n  {\n    this.event.emitIdle(true)\n    this.waitForIdleDeferred?.resolve()\n  }\n\n  protected manageErrorMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    const err = websocketMessage as TRecognizerWebSocketSSRMessageError\n    this.currentErrorCode = err.data?.code || err.code\n    let message = err.data?.message || err.message || RecognizerError.UNKNOW\n\n    switch (this.currentErrorCode) {\n      case \"no.activity\":\n        message = RecognizerError.NO_ACTIVITY\n        break\n      case \"access.not.granted\":\n        message = RecognizerError.WRONG_CREDENTIALS\n        break\n      case \"session.too.old\":\n        message = RecognizerError.TOO_OLD\n        break\n    }\n    const error = new Error(message)\n    this.rejectDeferredPending(error)\n    this.event.emitError(error)\n  }\n\n  protected manageContentChangeMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    this.#logger.info(\"manageContentChangeMessage\", { websocketMessage })\n    const contentChangeMessage = websocketMessage as TRecognizerWebSocketSSRMessageContentChange\n    const context: THistoryContext = {\n      canRedo: contentChangeMessage.canRedo,\n      canUndo: contentChangeMessage.canUndo,\n      empty: contentChangeMessage.empty,\n      stackIndex: contentChangeMessage.undoStackIndex,\n      possibleUndoCount: contentChangeMessage.possibleUndoCount,\n    }\n    this.event.emitContentChanged(context)\n  }\n\n  protected manageSVGPatchMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    this.#logger.info(\"manageSVGPatchMessage\", { websocketMessage })\n    this.resizeDeferred?.resolve()\n    const svgPatchMessage = websocketMessage as TRecognizerWebSocketSSRMessageSVGPatch\n    this.event.emitSVGPatch(svgPatchMessage)\n  }\n\n  protected messageCallback(message: MessageEvent<string>): void\n  {\n    this.#logger.debug(\"messageCallback\", { message })\n    this.currentErrorCode = undefined\n    const websocketMessage: TRecognizerWebSocketSSRMessage = JSON.parse(message.data)\n    if (websocketMessage.type !== \"pong\") {\n      this.pingCount = 0\n      switch (websocketMessage.type) {\n        case \"ack\":\n          this.manageAckMessage(websocketMessage)\n          break\n        case \"contentPackageDescription\":\n          this.manageContentPackageDescriptionMessage()\n          break\n        case \"partChanged\":\n          this.managePartChangeMessage(websocketMessage)\n          break\n        case \"newPart\":\n          this.initialized.resolve()\n          break\n        case \"contentChanged\":\n          this.manageContentChangeMessage(websocketMessage)\n          break\n        case \"exported\":\n          this.manageExportMessage(websocketMessage)\n          break\n        case \"svgPatch\":\n          this.manageSVGPatchMessage(websocketMessage)\n          break\n        case \"error\":\n          this.manageErrorMessage(websocketMessage)\n          break\n        case \"idle\":\n          this.manageWaitForIdle()\n          break\n        default:\n          this.#logger.warn(\"messageCallback\", `Message type unknow: \"${ websocketMessage.type }\".`)\n      }\n    }\n  }\n\n  async init(height: number, width: number): Promise<void>\n  {\n    try {\n      this.event.emitStartInitialization()\n      this.#logger.info(\"init\", { height, width })\n      this.destroy()\n\n      if (!this.configuration.server.version) {\n        this.configuration.server.version = (await getApiInfos(this.configuration)).version\n      }\n      this.connected = new DeferredPromise<void>()\n      this.initialized = new DeferredPromise<void>()\n      this.ackDeferred = new DeferredPromise<void>()\n      this.viewSizeHeight = height\n      this.viewSizeWidth = width\n      this.pingCount = 0\n      this.socket = new WebSocket(this.url)\n\n      if (this.configuration.server.websocket.pingEnabled) {\n        this.infinitePing()\n      }\n\n      this.socket.addEventListener(\"open\", this.openCallback.bind(this))\n      this.socket.addEventListener(\"close\", this.closeCallback.bind(this))\n      this.socket.addEventListener(\"message\", this.messageCallback.bind(this))\n      this.event.emitEndtInitialization()\n      await this.connected.promise\n      await this.initialized.promise\n    } catch (err: unknown) {\n      this.rejectDeferredPending(err as Error)\n      return this.initialized.promise\n    }\n  }\n\n  async send(message: TRecognizerWebSocketSSRMessage): Promise<void>\n  {\n    if (!this.socket) {\n      return Promise.reject(new Error(\"Recognizer must be initilized\"))\n    }\n    await this.connected?.promise\n    if (this.socket.readyState === this.socket.OPEN) {\n      this.#logger.debug(\"send\", { message })\n      this.socket.send(JSON.stringify(message))\n      return Promise.resolve()\n    } else {\n      if (this.socket.readyState != this.socket.CONNECTING && this.configuration.server.websocket.autoReconnect) {\n        this.reconnectionCount++\n        if (this.configuration.server.websocket.maxRetryCount >= this.reconnectionCount) {\n          this.#logger.debug(\"send\", `try to reconnect number: ${ this.reconnectionCount }.`)\n          await this.init(this.viewSizeHeight, this.viewSizeWidth)\n          await this.setPenStyle(this.penStyle as TPenStyle)\n          await this.setPenStyleClasses(this.penStyleClasses as string)\n          await this.setTheme(this.theme as TTheme)\n          return this.send(message)\n        }\n        else {\n          return Promise.reject(new Error(\"Unable to send message. The maximum number of connection attempts has been reached.\"))\n        }\n      }\n    }\n  }\n\n  async addStrokes(strokes: Stroke[]): Promise<TExport>\n  {\n    this.#logger.info(\"addStrokes\", { strokes })\n    await this.initialized.promise\n    this.addStrokeDeferred = new DeferredPromise<TExport>()\n    if (strokes.length === 0) {\n      this.addStrokeDeferred.resolve({} as TExport)\n    }\n    else {\n      await this.send({\n        type: \"addStrokes\",\n        strokes: strokes.map(s => s.formatToSend())\n      })\n    }\n    return this.addStrokeDeferred?.promise\n  }\n\n  async setPenStyle(penStyle: TPenStyle): Promise<void>\n  {\n    this.#logger.info(\"setPenStyle\", { penStyle })\n    await this.initialized.promise\n    this.penStyle = penStyle\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"setPenStyle\",\n      style: StyleHelper.penStyleToCSS(penStyle)\n    }\n    return this.send(message)\n  }\n\n  async setPenStyleClasses(penStyleClasses: string): Promise<void>\n  {\n    await this.initialized.promise\n    this.penStyleClasses = penStyleClasses\n    this.#logger.info(\"setPenStyleClasses\", { penStyleClasses })\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"setPenStyleClasses\",\n      styleClasses: penStyleClasses\n    }\n    return this.send(message)\n  }\n\n  async setTheme(theme: TTheme): Promise<void>\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    await this.initialized.promise\n    this.theme = theme\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"setTheme\",\n      theme: StyleHelper.themeToCSS(theme)\n    }\n    return this.send(message)\n  }\n\n  async export(model: Model, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"export\", { model, requestedMimeTypes })\n    await this.initialized.promise\n    this.exportDeferred = new DeferredPromise<TExport>()\n    const localModel = model.clone()\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.configuration.recognition.type) {\n        case \"MATH\":\n          mimeTypes = this.configuration.recognition.math.mimeTypes\n          break\n        case \"TEXT\":\n          mimeTypes = this.configuration.recognition.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${ this.configuration.recognition.type }\" is unknown.\\n Possible types are:\\n -MATH\\n -TEXT`)\n      }\n    }\n\n    if (!mimeTypes.length) {\n      return Promise.reject(new Error(`Export failed, no mimeTypes define in recognition ${ this.configuration.recognition.type } configuration`))\n    }\n\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"export\",\n      partId: this.currentPartId,\n      mimeTypes\n    }\n    await this.send(message)\n    const exports: TExport = await this.exportDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(exports)\n    this.#logger.debug(\"export\", { model: localModel })\n    return localModel\n  }\n\n  async import(model: Model, data: Blob, mimeType?: string): Promise<Model>\n  {\n    this.#logger.info(\"import\", { data, mimeType })\n    await this.initialized.promise\n    const localModel = model.clone()\n    const chunkSize = this.configuration.server.websocket.fileChunkSize\n    const importFileId = Math.random().toString(10).substring(2, 6)\n    this.importDeferred = new DeferredPromise<TExport>()\n    const readBlob = (blob: Blob): Promise<string | never> =>\n    {\n      const fileReader = new FileReader()\n      return new Promise((resolve, reject) =>\n      {\n        fileReader.onloadend = (ev) => resolve(ev.target?.result as string)\n        fileReader.onerror = () => reject()\n        fileReader.readAsText(blob)\n      })\n    }\n\n    const importFileMessage: TRecognizerWebSocketSSRMessage = {\n      type: \"importFile\",\n      importFileId,\n      mimeType\n    }\n    await this.send(importFileMessage)\n    for (let i = 0; i < data.size; i += chunkSize) {\n      const blobPart = data.slice(i, i + chunkSize, data.type)\n      const partFileString = await readBlob(blobPart)\n      const fileChuckMessage: TRecognizerWebSocketSSRMessage = {\n        type: \"fileChunk\",\n        importFileId,\n        data: partFileString,\n        lastChunk: i + chunkSize > data.size\n      }\n      await this.send(fileChuckMessage)\n    }\n    const exports = await this.importDeferred?.promise\n    this.importDeferred = undefined\n    localModel.mergeExport(exports)\n    return localModel\n  }\n\n  async resize(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"resize\", { model })\n    await this.initialized.promise\n    this.resizeDeferred = new DeferredPromise<void>()\n    const localModel = model.clone()\n    this.viewSizeHeight = localModel.height\n    this.viewSizeWidth = localModel.width\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"changeViewSize\",\n      height: this.viewSizeHeight,\n      width: this.viewSizeWidth,\n    }\n    await this.send(message)\n    await this.resizeDeferred?.promise\n    return localModel\n  }\n\n  async importPointEvents(strokes: Stroke[]): Promise<TExport>\n  {\n    this.#logger.info(\"importPointsEvents\", { strokes })\n    await this.initialized.promise\n    this.importPointEventsDeferred = new DeferredPromise<TExport>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"pointerEvents\",\n      events: strokes.map(s => s.formatToSend())\n    }\n    await this.send(message)\n    return this.importPointEventsDeferred?.promise\n  }\n\n  async convert(model: Model, conversionState?: TConverstionState): Promise<Model>\n  {\n    this.#logger.info(\"convert\", { model, conversionState })\n    await this.initialized.promise\n    this.convertDeferred = new DeferredPromise<TExport>()\n    const localModel = model.clone()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"convert\",\n      conversionState\n    }\n    await this.send(message)\n    const myExportConverted: TExport = await this.convertDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeConvert(myExportConverted)\n    this.#logger.debug(\"convert\", { model: localModel })\n    return localModel\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    await this.initialized.promise\n    this.waitForIdleDeferred = new DeferredPromise<void>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"waitForIdle\",\n    }\n    await this.send(message)\n    return this.waitForIdleDeferred?.promise\n  }\n\n  async undo(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"undo\", { model })\n    await this.initialized.promise\n    const localModel = model.clone()\n    this.undoDeferred = new DeferredPromise<TExport>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"undo\",\n    }\n    await this.send(message)\n    const undoExports = await this.undoDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(undoExports)\n    this.#logger.debug(\"undo\", { model: localModel })\n    this.undoDeferred = undefined\n    return localModel\n  }\n\n  async redo(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"redo\", { model })\n    await this.initialized.promise\n    const localModel = model.clone()\n    this.redoDeferred = new DeferredPromise<TExport>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"redo\",\n    }\n    await this.send(message)\n    const redoExports = await this.redoDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(redoExports)\n    this.#logger.debug(\"redo\", { model: redoExports })\n    this.redoDeferred = undefined\n    return localModel\n  }\n\n  async clear(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"clear\", { model })\n    await this.initialized.promise\n    const localModel = model.clone()\n    localModel.modificationDate = Date.now()\n    this.clearDeferred = new DeferredPromise<TExport>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"clear\",\n    }\n    await this.send(message)\n    const clearExports = await this.clearDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(clearExports)\n    this.clearDeferred = undefined\n    this.#logger.info(\"clear\", { model: localModel })\n    return localModel\n  }\n\n  close(code: number, reason: string): void\n  {\n    if (this.socket.readyState === this.socket.OPEN || this.socket.readyState === this.socket.CONNECTING) {\n      this.#logger.info(\"close\", { code, reason })\n      this.socket.removeEventListener(\"close\", this.closeCallback)\n      this.socket.removeEventListener(\"message\", this.messageCallback)\n      this.socket.removeEventListener(\"open\", this.openCallback)\n      this.socket.close(code, reason)\n    }\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    this.connected = undefined\n    this.ackDeferred = undefined\n    this.addStrokeDeferred = undefined\n    this.exportDeferred = undefined\n    this.convertDeferred = undefined\n    this.importDeferred = undefined\n    this.importPointEventsDeferred = undefined\n    this.waitForIdleDeferred = undefined\n    this.resizeDeferred = undefined\n    this.undoDeferred = undefined\n    this.redoDeferred = undefined\n    this.clearDeferred = undefined\n    if (this.socket) {\n      this.socket.removeEventListener(\"close\", this.closeCallback)\n      this.socket.removeEventListener(\"message\", this.messageCallback)\n      this.socket.removeEventListener(\"open\", this.openCallback)\n      this.close(1000, \"Recognizer destroyed\")\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { TPoint, TCanvasShapeEllipseSymbol, TCanvasShapeLineSymbol, TCanvasShapeTableSymbol, TSymbol } from \"../../symbol\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererShape\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n\n  symbols = {\n    table: \"table\",\n    ellipse: \"ellipse\",\n    line: \"line\"\n  }\n\n  protected phi(angle: number): number\n  {\n    let returnedAngle = ((angle + Math.PI) % (Math.PI * 2)) - Math.PI\n    if (returnedAngle < -Math.PI) {\n      returnedAngle += Math.PI * 2\n    }\n    this.#logger.debug(\"phi\", { angle, returnedAngle })\n    return returnedAngle\n  }\n\n  protected drawEllipseArc(context2D: CanvasRenderingContext2D, shapeEllipse: TCanvasShapeEllipseSymbol): TPoint[]\n  {\n    this.#logger.debug(\"drawEllipseArc\", { context2D, shapeEllipse })\n    const { centerPoint, maxRadius, minRadius, orientation, startAngle, sweepAngle } = shapeEllipse\n    const angleStep = 0.02\n    const z1 = Math.cos(orientation) * maxRadius\n    const z2 = Math.cos(orientation) * minRadius\n    const z3 = Math.sin(orientation) * maxRadius\n    const z4 = Math.sin(orientation) * minRadius\n    const n = Math.floor(Math.abs(sweepAngle) / angleStep)\n    const boundariesPoints = []\n    context2D.save()\n    try {\n      context2D.beginPath()\n      for (let i = 0; i <= n; i++) {\n        const angle = startAngle + ((i / n) * sweepAngle)\n        const alpha = Math.atan2(Math.sin(angle) / minRadius, Math.cos(angle) / maxRadius)\n        const cosAlpha = Math.cos(alpha)\n        const sinAlpha = Math.sin(alpha)\n        const x = (centerPoint.x + (z1 * cosAlpha)) - (z4 * sinAlpha)\n        const y = (centerPoint.y + (z2 * sinAlpha)) + (z3 * cosAlpha)\n        if (i === 0) {\n          context2D.moveTo(x, y)\n        } else {\n          context2D.lineTo(x, y)\n        }\n        if (i === 0 || i === n) {\n          boundariesPoints.push({ x, y })\n        }\n      }\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"drawEllipseArc\", { error })\n    } finally {\n      context2D.restore()\n    }\n    return boundariesPoints\n  }\n\n  protected drawLine(context2D: CanvasRenderingContext2D, p1: TPoint, p2: TPoint)\n  {\n    this.#logger.debug(\"drawLine\", { context2D, p1, p2 })\n    context2D.save()\n    try {\n      context2D.beginPath()\n      context2D.moveTo(p1.x, p1.y)\n      context2D.lineTo(p2.x, p2.y)\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"drawLine\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawArrowHead(context2D: CanvasRenderingContext2D, headPoint: TPoint, angle: number, length: number)\n  {\n    this.#logger.debug(\"drawArrowHead\", { context2D, headPoint, angle, length })\n    const alpha = this.phi(angle + (Math.PI * (7 / 8)))\n    const beta = this.phi(angle - (Math.PI * (7 / 8)))\n    context2D.save()\n    try {\n      context2D.fillStyle = context2D.strokeStyle\n\n      context2D.moveTo(headPoint.x, headPoint.y)\n      context2D.beginPath()\n      context2D.lineTo(headPoint.x + (length * Math.cos(alpha)), headPoint.y + (length * Math.sin(alpha)))\n      context2D.lineTo(headPoint.x + (length * Math.cos(beta)), headPoint.y + (length * Math.sin(beta)))\n      context2D.lineTo(headPoint.x, headPoint.y)\n      context2D.fill()\n    } catch(error) {\n      this.#logger.error(\"drawArrowHead\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawShapeEllipse(context2D: CanvasRenderingContext2D, shapeEllipse: TCanvasShapeEllipseSymbol)\n  {\n    this.#logger.debug(\"drawShapeEllipse\", { context2D, shapeEllipse })\n    const points = this.drawEllipseArc(context2D, shapeEllipse)\n\n    if (shapeEllipse?.beginDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, points[0], shapeEllipse.beginTangentAngle, 12.0)\n    }\n    if (shapeEllipse?.endDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, points[1], shapeEllipse.endTangentAngle, 12.0)\n    }\n  }\n\n  protected drawShapeLine(context2D: CanvasRenderingContext2D, shapeLine: TCanvasShapeLineSymbol)\n  {\n    this.#logger.debug(\"drawShapeLine\", { context2D, shapeLine })\n    this.drawLine(context2D, shapeLine.firstPoint, shapeLine.lastPoint)\n    if (shapeLine.beginDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, shapeLine.firstPoint, shapeLine.beginTangentAngle, 12.0)\n    }\n    if (shapeLine.endDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, shapeLine.lastPoint, shapeLine.endTangentAngle, 12.0)\n    }\n  }\n\n  draw(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.info(\"draw\", { context2D, symbol })\n    context2D.save()\n    context2D.lineWidth = symbol.style.width as number\n    context2D.strokeStyle = symbol.style.color as string\n\n    switch (symbol.type) {\n      case this.symbols.table: {\n        const tableSymbols = symbol as TCanvasShapeTableSymbol\n        tableSymbols.lines.forEach(line => this.drawLine(context2D, line.p1, line.p2))\n        break\n      }\n      case this.symbols.ellipse: {\n        this.drawShapeEllipse(context2D, symbol as TCanvasShapeEllipseSymbol)\n        break\n      }\n      case this.symbols.line: {\n        this.drawShapeLine(context2D, symbol as TCanvasShapeLineSymbol)\n        break\n      }\n      default:\n        this.#logger.warn(\"draw\", `${ symbol.type } not implemented`)\n        break\n    }\n  }\n\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { Stroke, TPointer } from \"../../symbol\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererStroke\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n\n  protected renderArc(context2d: CanvasRenderingContext2D, center: TPointer, radius: number): void\n  {\n    this.#logger.debug(\"renderArc\", { context2d, center, radius })\n    context2d.arc(center.x, center.y, radius, 0, Math.PI * 2, true)\n  }\n\n  protected renderLine(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderLine\", { context2d, begin, end, width })\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n\n    context2d.moveTo(linkPoints1[0].x, linkPoints1[0].y)\n    context2d.lineTo(linkPoints2[0].x, linkPoints2[0].y)\n    context2d.lineTo(linkPoints2[1].x, linkPoints2[1].y)\n    context2d.lineTo(linkPoints1[1].x, linkPoints1[1].y)\n  }\n\n  protected renderFinal(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderFinal\", { context2d, begin, end, width })\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    context2d.moveTo(linkPoints[0].x, linkPoints[0].y)\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - ((i * Math.PI) / ARCSPLIT)\n      context2d.lineTo(end.x - ((end.p * width) * Math.sin(newAngle)), end.y + (end.p * width * Math.cos(newAngle)))\n    }\n  }\n\n  protected renderQuadratic(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, ctrl: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderQuadratic\", { context2d, begin, end, ctrl, width })\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, ctrl), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(ctrl, end), width)\n    const linkPoints3 = computeLinksPointers(ctrl, computeAngleAxeRadian(begin, end), width)\n\n    context2d.moveTo(linkPoints1[0].x, linkPoints1[0].y)\n    context2d.quadraticCurveTo(linkPoints3[0].x, linkPoints3[0].y, linkPoints2[0].x, linkPoints2[0].y)\n    context2d.lineTo(linkPoints2[1].x, linkPoints2[1].y)\n    context2d.quadraticCurveTo(linkPoints3[1].x, linkPoints3[1].y, linkPoints1[1].x, linkPoints1[1].y)\n  }\n\n  draw(context2d: CanvasRenderingContext2D, stroke: Stroke): void\n  {\n    this.#logger.info(\"draw\", { context2d, stroke })\n    const NUMBER_POINTS = stroke.pointers.length\n    const NUMBER_QUADRATICS = NUMBER_POINTS - 2\n    const width = (stroke.style.width as number) > 0 ? (stroke.style.width as number) : context2d.lineWidth\n    const color = (stroke.style.color as string) ? (stroke.style.color as string) : context2d.strokeStyle\n    const firstPoint = stroke.pointers[0] as TPointer\n\n    context2d.save()\n    try {\n      context2d.beginPath()\n      if (NUMBER_POINTS < 3) {\n        this.renderArc(context2d, firstPoint, width * 0.6)\n      } else {\n        this.renderArc(context2d, firstPoint, width * firstPoint.p)\n        const secondPoint: TPointer = computeMiddlePointer(firstPoint, stroke.pointers[1])\n        this.renderLine(context2d, firstPoint, secondPoint, width)\n\n        // Possibility to try this (the start looks better when the ink is large)\n        // var first = computeMiddlePoint(stroke.pointers[0], stroke.pointers[1]);\n        // context2d.arc(first.x, first.y, width * first.p, 0, Math.PI * 2, true);\n\n        for (let i = 0; i < NUMBER_QUADRATICS; i++) {\n          const begin: TPointer = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n          const end: TPointer = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n          const ctrl: TPointer = stroke.pointers[i + 1]\n          this.renderQuadratic(context2d, begin, end, ctrl, width)\n        }\n        const beginLine: TPointer = computeMiddlePointer(stroke.pointers[NUMBER_POINTS - 2], stroke.pointers[NUMBER_POINTS - 1])\n        const endLine: TPointer = stroke.pointers[NUMBER_POINTS - 1]\n        this.renderLine(context2d, beginLine, endLine, width)\n\n        const beginFinal: TPointer = stroke.pointers[NUMBER_POINTS - 2]\n        const endFinal: TPointer = stroke.pointers[NUMBER_POINTS - 1]\n        this.renderFinal(context2d, beginFinal, endFinal, width)\n      }\n      context2d.closePath()\n      if (color !== undefined) {\n        context2d.fillStyle = color\n        context2d.fill()\n      }\n      context2d.save()\n    }\n    catch (error) {\n      this.#logger.error(\"draw\", { error })\n    }\n    finally {\n      context2d.restore()\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { TSymbol, TCanvasTextSymbol, TCanvasTextUnderlineSymbol, TCanvasUnderLineSymbol, TPoint } from \"../../symbol\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererText\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n\n  symbols = {\n    char: \"char\",\n    string: \"string\",\n    textLine: \"textLine\"\n  }\n\n  protected drawUnderline(context2D: CanvasRenderingContext2D, textUnderline: TCanvasTextUnderlineSymbol, underline: TCanvasUnderLineSymbol)\n  {\n    this.#logger.debug(\"#drawUnderline\", { context2D, textUnderline, underline })\n    context2D.save()\n    try {\n      const delta = textUnderline.data.width / textUnderline.label.length\n      const p1: TPoint = {\n        x: textUnderline.data.topLeftPoint.x + (underline.data.firstCharacter * delta),\n        y: textUnderline.data.topLeftPoint.y + textUnderline.data.height\n      }\n      const p2: TPoint = {\n        x: textUnderline.data.topLeftPoint.x + (underline.data.lastCharacter * delta),\n        y: textUnderline.data.topLeftPoint.y + textUnderline.data.height\n      }\n      context2D.beginPath()\n      context2D.moveTo(p1.x, p1.y)\n      context2D.lineTo(p2.x, p2.y)\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"#drawUnderline\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawText(context2D: CanvasRenderingContext2D, text: TCanvasTextSymbol)\n  {\n    this.#logger.debug(\"#drawText\", { context2D, text })\n    context2D.save()\n    try {\n      context2D.font = `${ text.data.textHeight }px serif`\n      context2D.textAlign = (text.data.justificationType === \"CENTER\") ? \"center\" : \"left\"\n      context2D.textBaseline = \"bottom\"\n      context2D.fillStyle = context2D.strokeStyle\n      context2D.fillText(text.label, text.data.topLeftPoint.x, (text.data.topLeftPoint.y + text.data.height))\n    } catch(error) {\n      this.#logger.error(\"#drawText\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawTextLine(context2D: CanvasRenderingContext2D, textUnderline: TCanvasTextUnderlineSymbol)\n  {\n    this.#logger.debug(\"#drawTextLine\", { context2D, textUnderline })\n    this.drawText(context2D, textUnderline)\n    textUnderline.underlineList.forEach((underline) =>\n    {\n      this.drawUnderline(context2D, textUnderline, underline)\n    })\n  }\n\n  draw(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.info(\"draw\", { context2D, symbol })\n    context2D.lineWidth = (symbol.style.width as number)\n    context2D.strokeStyle = (symbol.style.color as string)\n    switch (symbol.type) {\n      case this.symbols.char:\n      case this.symbols.string:\n        this.drawText(context2D, symbol as TCanvasTextSymbol)\n        break\n      case this.symbols.textLine:\n        this.drawTextLine(context2D, symbol as TCanvasTextUnderlineSymbol)\n        break\n      default:\n        this.#logger.warn(\"draw\", `${symbol.type} not implemented`)\n        break\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { Model } from \"../../model\"\nimport { Stroke, TSymbol } from \"../../symbol\"\nimport { TRendererConfiguration } from \"../RendererConfiguration\"\nimport { CanvasRendererShape } from \"./CanvasRendererShape\"\nimport { CanvasRendererStroke } from \"./CanvasRendererStroke\"\nimport { CanvasRendererText } from \"./CanvasRendererText\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRenderer\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n  configuration: Omit<TRendererConfiguration, \"guides\">\n  strokeRenderer: CanvasRendererStroke\n  shapeRenderer: CanvasRendererShape\n  textRenderer: CanvasRendererText\n  context!: {\n    parent: HTMLElement\n    renderingCanvas: HTMLCanvasElement\n    renderingCanvasContext: CanvasRenderingContext2D\n    capturingCanvas: HTMLCanvasElement\n    capturingCanvasContext: CanvasRenderingContext2D\n  }\n\n  constructor(config: Omit<TRendererConfiguration, \"guides\">)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = config\n    this.strokeRenderer = new CanvasRendererStroke()\n    this.shapeRenderer = new CanvasRendererShape()\n    this.textRenderer = new CanvasRendererText()\n  }\n\n  protected createCanvas(type: string): HTMLCanvasElement\n  {\n    this.#logger.debug(\"createCanvas\", { type })\n    const canvas: HTMLCanvasElement = document.createElement(\"canvas\")\n    canvas.id = type\n    canvas.classList.add(type)\n    canvas.classList.add(\"ms-canvas\")\n    return canvas\n  }\n\n  protected resizeContent(): void\n  {\n    const pixelRatio: number = window.devicePixelRatio\n    const elements: HTMLCanvasElement[] = [this.context.renderingCanvas, this.context.capturingCanvas]\n    elements.forEach((canvas) =>\n    {\n      const domElement = canvas.parentNode as HTMLElement\n      const width = Math.max(this.configuration.minWidth, domElement.clientWidth)\n      const height = Math.max(this.configuration.minHeight, domElement.clientHeight)\n      canvas.width = width * pixelRatio\n      canvas.height = height * pixelRatio\n      canvas.getContext(\"2d\")?.scale(pixelRatio, pixelRatio)\n      canvas.style.width = `${ width }px`\n      canvas.style.height = `${ height }px`\n    })\n  }\n\n  protected drawSymbol(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.debug(\"drawSymbol\", { symbol })\n    if (symbol.type === \"stroke\") {\n      const stroke = symbol as Stroke\n      if (stroke.pointerType !== \"eraser\") {\n        this.strokeRenderer.draw(context2D, stroke)\n      }\n    } else if (Object.keys(this.textRenderer.symbols).includes(symbol.type)) {\n      this.textRenderer.draw(context2D, symbol)\n    } else if (Object.keys(this.shapeRenderer.symbols).includes(symbol.type)) {\n      this.shapeRenderer.draw(context2D, symbol)\n    } else {\n      this.#logger.warn(\"drawSymbol\", `symbol type unknow: ${symbol.type}`)\n    }\n  }\n\n  init(element: HTMLElement, guide?: { x?: number, y?: number } ): void\n  {\n    this.#logger.info(\"init\", { element })\n    const renderingCanvas: HTMLCanvasElement = this.createCanvas(\"ms-rendering-canvas\")\n    renderingCanvas.setAttribute(\"data-layer\", \"MODEL\")\n    if (guide) {\n      renderingCanvas.style.backgroundSize = `${guide.x || 1}px ${guide.y || 1}px`\n    }\n    element.appendChild(renderingCanvas)\n\n    const capturingCanvas: HTMLCanvasElement = this.createCanvas(\"ms-capture-canvas\")\n    capturingCanvas.setAttribute(\"data-layer\", \"CAPTURE\")\n    element.appendChild(capturingCanvas)\n\n    this.context = {\n      parent: element,\n      renderingCanvas,\n      renderingCanvasContext: renderingCanvas.getContext(\"2d\") as CanvasRenderingContext2D,\n      capturingCanvas,\n      capturingCanvasContext: capturingCanvas.getContext(\"2d\") as CanvasRenderingContext2D\n    }\n\n    this.resizeContent()\n  }\n\n  drawModel(model: Model): void\n  {\n    this.#logger.info(\"drawModel\", { model })\n    this.context.renderingCanvasContext?.clearRect(0, 0, this.context.renderingCanvas.width, this.context.renderingCanvas.height)\n    model.symbols.forEach(symbol => this.drawSymbol(this.context.renderingCanvasContext, symbol))\n    this.context.capturingCanvasContext.clearRect(0, 0, this.context.capturingCanvas.width, this.context.capturingCanvas.height)\n  }\n\n  drawPendingStroke(stroke: Stroke | undefined): void\n  {\n    this.#logger.info(\"drawPendingStroke\", { stroke })\n    this.context.capturingCanvasContext.clearRect(0, 0, this.context.capturingCanvas.width, this.context.capturingCanvas.height)\n    if (stroke && stroke?.pointerType !== \"eraser\") {\n      this.strokeRenderer.draw(this.context.capturingCanvasContext, stroke)\n    }\n  }\n\n  resize(model: Model): void\n  {\n    this.#logger.info(\"resize\", { model })\n    this.resizeContent()\n    this.drawModel(model)\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    if (this.context.parent) {\n      this.context.parent.innerHTML = \"\"\n    }\n  }\n}\n","\n/**\n * @group Renderer\n */\nexport const IISVGRendererConst =\n{\n  arrowHeadStartMarker: \"arrow-head-start\",\n  arrowHeadEndMaker: \"arrow-head-end\",\n  selectionFilterId: \"selection-filter\",\n  removalFilterId: \"removal-filter\",\n  crossMarker: \"cross-marker\",\n  noSelection: \"pointer-events: none; -webkit-touch-callout: none; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\",\n}","import { TBox, TPoint } from \"../../symbol\"\n\nconst XMLNS = \"http://www.w3.org/2000/svg\"\n/**\n * @group Renderer\n */\nexport class SVGBuilder\n{\n  static createLayer(boundingBox: TBox, attrs: { [key: string]: string } = {}): SVGSVGElement\n  {\n    const svgEl = document.createElementNS(XMLNS, \"svg\")\n    svgEl.setAttribute(\"width\", `${ boundingBox.width }px`)\n    svgEl.setAttribute(\"height\", `${ boundingBox.height }px`)\n    svgEl.setAttribute(\"viewBox\", `${boundingBox.x}, ${boundingBox.y}, ${boundingBox. width }, ${ boundingBox.height }`)\n    Object.keys(attrs).forEach(k =>\n    {\n      svgEl.setAttribute(k, attrs[k])\n    })\n    return svgEl\n  }\n\n  static createFilter(id: string, attrs: { [key: string]: string } = {}): SVGFilterElement\n  {\n    const filter = document.createElementNS(XMLNS, \"filter\")\n    filter.id = id\n    Object.keys(attrs).forEach(k =>\n    {\n      filter.setAttribute(k, attrs[k])\n    })\n    return filter\n  }\n\n  static createDefs(): SVGDefsElement\n  {\n    return document.createElementNS(XMLNS, \"defs\")\n  }\n\n  static createMarker(id: string, attrs: { [key: string]: string } = {}): SVGMarkerElement\n  {\n    const marker = document.createElementNS(XMLNS, \"marker\")\n    marker.setAttribute(\"id\", id)\n    Object.keys(attrs).forEach(k =>\n    {\n      marker.setAttribute(k, attrs[k])\n    })\n    return marker\n  }\n\n  static createComponentTransfert(): SVGFEComponentTransferElement\n  {\n    return document.createElementNS(XMLNS, \"feComponentTransfer\")\n  }\n\n  static createDropShadow({ dx = 0, dy = 0, deviation = 0, color = \"#3e68ff\", opacity = 1 }): SVGFEDropShadowElement\n  {\n    const shadow = document.createElementNS(XMLNS, \"feDropShadow\")\n    shadow.setAttribute(\"dx\", dx.toString())\n    shadow.setAttribute(\"dy\", dy.toString())\n    shadow.setAttribute(\"stdDeviation\", deviation.toString())\n    shadow.setAttribute(\"flood-color\", color)\n    shadow.setAttribute(\"flood-opacity\", opacity.toString())\n    return shadow\n  }\n\n  static createTransfertFunctionTable(type: \"feFuncA\" | \"feFuncB\" | \"feFuncG\" | \"feFuncR\", values: string): SVGFEFuncAElement\n  {\n    const feFunc = document.createElementNS(XMLNS, type)\n    feFunc.setAttribute(\"type\", \"table\")\n    feFunc.setAttribute(\"tableValues\", values)\n    return feFunc\n  }\n\n  static createGroup(attrs: { [key: string]: string } = {}): SVGGElement\n  {\n    const groupEl = document.createElementNS(XMLNS, \"g\")\n    Object.keys(attrs).forEach(k =>\n    {\n      groupEl.setAttribute(k, attrs[k])\n    })\n    return groupEl\n  }\n\n  static createLine(p1: TPoint, p2: TPoint, attrs: { [key: string]: string } = {}): SVGLineElement\n  {\n    const lineEl = document.createElementNS(XMLNS, \"line\")\n    lineEl.setAttribute(\"x1\", p1.x.toString())\n    lineEl.setAttribute(\"y1\", p1.y.toString())\n    lineEl.setAttribute(\"x2\", p2.x.toString())\n    lineEl.setAttribute(\"y2\", p2.y.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      lineEl.setAttribute(k, attrs[k])\n    })\n    return lineEl\n  }\n\n  static createCircle(p: TPoint, r: number, attrs: { [key: string]: string } = {}): SVGCircleElement\n  {\n    const circleEl = document.createElementNS(XMLNS, \"circle\")\n    circleEl.setAttribute(\"cx\", p.x.toString())\n    circleEl.setAttribute(\"cy\", p.y.toString())\n    circleEl.setAttribute(\"r\", r.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      circleEl.setAttribute(k, attrs[k])\n    })\n    return circleEl\n  }\n\n  static createPath(attrs: { [key: string]: string } = {}): SVGPathElement\n  {\n    const pathEl = document.createElementNS(XMLNS, \"path\")\n    Object.keys(attrs).forEach(k =>\n    {\n      pathEl.setAttribute(k, attrs[k])\n    })\n    return pathEl\n  }\n\n  static createPolygon(points: number[], attrs: { [key: string]: string } = {}): SVGPolylineElement\n  {\n    const polygonEl = document.createElementNS(XMLNS, \"polygon\")\n    polygonEl.setAttribute(\"points\", points.join(\",\"))\n    Object.keys(attrs).forEach(k =>\n    {\n      polygonEl.setAttribute(k, attrs[k])\n    })\n    return polygonEl\n  }\n\n  static createRect(box: TBox, attrs: { [key: string]: string } = {}): SVGRectElement\n  {\n    const rectEl = document.createElementNS(XMLNS, \"rect\")\n    rectEl.setAttribute(\"x\", box.x.toString())\n    rectEl.setAttribute(\"y\", box.y.toString())\n    rectEl.setAttribute(\"width\", box.width.toString())\n    rectEl.setAttribute(\"height\", box.height.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      rectEl.setAttribute(k, attrs[k])\n    })\n    return rectEl\n  }\n\n  static createTSpan(text: string, attrs: { [key: string]: string } = {}): SVGTSpanElement\n  {\n    const tSpanEl = document.createElementNS(XMLNS, \"tspan\")\n    tSpanEl.textContent = text\n    Object.keys(attrs).forEach(k =>\n    {\n      tSpanEl.setAttribute(k, attrs[k])\n    })\n    return tSpanEl\n  }\n\n  static createForeignObject(box: TBox, node: HTMLElement, attrs: { [key: string]: string } = {}): SVGForeignObjectElement\n  {\n    const objEl = document.createElementNS(XMLNS, \"foreignObject\")\n    objEl.setAttribute(\"x\", box.x.toString())\n    objEl.setAttribute(\"y\", box.y.toString())\n    objEl.setAttribute(\"width\", box.width.toString())\n    objEl.setAttribute(\"height\", box.height.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      objEl.setAttribute(k, attrs[k])\n    })\n    objEl.appendChild(node)\n    return objEl\n  }\n\n  static createText(p: TPoint, text: string, attrs: { [key: string]: string } = {}): SVGTextElement\n  {\n    const textEl = document.createElementNS(XMLNS, \"text\")\n    textEl.textContent = text\n    textEl.setAttribute(\"x\", p.x.toString())\n    textEl.setAttribute(\"y\", p.y.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      textEl.setAttribute(k, attrs[k])\n    })\n    return textEl\n  }\n}\n","import { EdgeDecoration, EdgeKind, IIEdgeArc, IIEdgeLine, IIEdgePolyLine, TIIEdge } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { IISVGRendererConst } from \"./IISVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class IISVGRendererEdgeUtil\n{\n  static getLinePath(line: IIEdgeLine): string\n  {\n    return `M ${ line.start.x } ${ line.start.y } L ${ line.end.x } ${ line.end.y }`\n  }\n\n  static getPolyLinePath(line: IIEdgePolyLine): string\n  {\n    return `M ${ line.vertices[0].x } ${ line.vertices[0].y } ${ line.vertices.map(p => `L ${ p.x } ${ p.y }`).join(\" \") }`\n  }\n\n  static getArcPath(arc: IIEdgeArc): string\n  {\n    return `M ${ arc.vertices[0].x } ${ arc.vertices[0].y } Q ${ arc.vertices.map(p => `${ p.x } ${ p.y }`).join(\" \") }`\n  }\n\n  static getSVGPath(edge: TIIEdge): string\n  {\n    switch (edge.kind) {\n      case EdgeKind.Line:\n        return IISVGRendererEdgeUtil.getLinePath(edge)\n      case EdgeKind.PolyEdge:\n        return IISVGRendererEdgeUtil.getPolyLinePath(edge)\n      case EdgeKind.Arc:\n        return IISVGRendererEdgeUtil.getArcPath(edge)\n      default:\n        throw new Error(`Can't getSVGPath for edge cause kind is unknow: \"${ JSON.stringify(edge) }\"`)\n    }\n  }\n\n  static getSVGElement(edge: TIIEdge): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": edge.id,\n      \"type\": edge.type,\n      \"kind\": edge.kind,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n    }\n    if (edge.selected) {\n      attrs[\"filter\"] = `url(#${ IISVGRendererConst.selectionFilterId })`\n    }\n    if (edge.deleting) {\n      attrs[\"filter\"] = `url(#${ IISVGRendererConst.removalFilterId })`\n    }\n    const group = SVGBuilder.createGroup(attrs)\n\n    const pathAttrs: { [key: string]: string } = {\n      \"fill\": \"transparent\",\n      \"stroke\": edge.style.color || DefaultStyle.color!,\n      \"stroke-width\": (edge.style.width || DefaultStyle.width).toString(),\n      \"d\": IISVGRendererEdgeUtil.getSVGPath(edge),\n    }\n    if (edge.style.opacity) {\n      pathAttrs[\"opacity\"] = edge.style.opacity.toString()\n    }\n\n    if (edge.startDecoration === EdgeDecoration.Arrow) {\n      pathAttrs[\"marker-start\"] = `url(#${ IISVGRendererConst.arrowHeadStartMarker })`\n    }\n    if (edge.endDecoration === EdgeDecoration.Arrow) {\n      pathAttrs[\"marker-end\"] = `url(#${ IISVGRendererConst.arrowHeadEndMaker })`\n    }\n    group.appendChild(SVGBuilder.createPath(pathAttrs))\n    return group\n  }\n\n\n}","import { IIEraser, TPointer } from \"../../symbol\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class IISVGRendererEraserUtil\n{\n  static getSVGPath(eraser: IIEraser): string\n  {\n    if (eraser.pointers.length < 1) return \"\"\n\n    const firstPoint = eraser.pointers.at(0) as TPointer\n\n    const startPath = `M ${ firstPoint.x } ${ firstPoint.y }`\n\n    if (eraser.pointers.length === 1) {\n      const strokeWith = eraser.style.width || 4\n      return `${startPath} L ${ firstPoint.x  + strokeWith / 2 } ${ firstPoint.y }`\n    }\n\n    const middlePoints = eraser.pointers.slice(1)\n\n    return middlePoints.reduce((acc, point) => {\n      return `${ acc } L ${ point.x } ${ point.y }`\n    }, startPath)\n  }\n\n  static getSVGElement(eraser: IIEraser): SVGPathElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": eraser.id,\n      \"type\": \"eraser\",\n      \"stroke-width\": \"12\",\n      \"stroke\": \"grey\",\n      \"opacity\": \"0.2\",\n      \"shadowBlur\": \"5\",\n      \"stroke-linecap\": \"round\",\n      \"fill\": \"transparent\",\n      \"d\": IISVGRendererEraserUtil.getSVGPath(eraser)\n    }\n    return SVGBuilder.createPath(attrs)\n  }\n\n}","import { DecoratorKind, IIDecorator, RecognizedKind, SymbolType, TBox, TIISymbol } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class IISVGRendererDecoratorUtil\n{\n  static getSVGElement(decorator: IIDecorator, symbol: TIISymbol): SVGGeometryElement | undefined\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": decorator.id,\n      \"type\": \"decorator\",\n      \"kind\": decorator.kind,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n    }\n    if (decorator.style.opacity) {\n      attrs[\"opacity\"] = decorator.style.opacity.toString()\n    }\n    if (symbol.deleting) {\n      attrs[\"opacity\"] = ((decorator.style.opacity || 1) * 0.5).toString()\n    }\n\n    let element: SVGGeometryElement | undefined\n\n    switch (decorator.kind) {\n      case DecoratorKind.Highlight: {\n        attrs[\"opacity\"] = symbol.deleting ? \"0.25\" : \"0.5\"\n        attrs[\"stroke\"] = \"transparent\"\n        attrs[\"fill\"] = decorator.style.color || DefaultStyle.color!\n        const boundingBox: TBox = {\n          x: symbol.bounds.x - +(symbol.style.width || DefaultStyle.width),\n          y: symbol.bounds.y - +(symbol.style.width || DefaultStyle.width),\n          height: symbol.bounds.height + +(symbol.style.width || DefaultStyle.width) * 2,\n          width: symbol.bounds.width + +(symbol.style.width || DefaultStyle.width) * 2,\n        }\n        element = SVGBuilder.createRect(boundingBox, attrs)\n        break\n      }\n      case DecoratorKind.Surround: {\n        attrs[\"fill\"] = \"transparent\"\n        attrs[\"stroke\"] = decorator.style.color || DefaultStyle.color!\n        attrs[\"stroke-width\"] = (decorator.style.width || DefaultStyle.width).toString()\n        const boundingBox: TBox = {\n          x: symbol.bounds.x - +(symbol.style.width || DefaultStyle.width),\n          y: symbol.bounds.y - +(symbol.style.width || DefaultStyle.width),\n          height: symbol.bounds.height + +(symbol.style.width || DefaultStyle.width) * 2,\n          width: symbol.bounds.width + +(symbol.style.width || DefaultStyle.width) * 2,\n        }\n        element = SVGBuilder.createRect(boundingBox, attrs)\n        break\n      }\n      case DecoratorKind.Strikethrough: {\n        attrs[\"fill\"] = \"transparent\"\n        attrs[\"stroke\"] = decorator.style.color || DefaultStyle.color!\n        attrs[\"stroke-width\"] = (decorator.style.width || DefaultStyle.width).toString()\n        const p1 = {\n          x: symbol.bounds.xMin,\n          y: symbol.bounds.yMid\n        }\n        const p2 = {\n          x: symbol.bounds.xMax,\n          y: symbol.bounds.yMid\n        }\n        if (symbol.type === SymbolType.Recognized && symbol.kind === RecognizedKind.Text) {\n          p1.y = symbol.baseline - symbol.xHeight / 2\n          p2.y = symbol.baseline - symbol.xHeight / 2\n        }\n        element = SVGBuilder.createLine(p1, p2, attrs)\n        break\n      }\n      case DecoratorKind.Underline: {\n        attrs[\"fill\"] = \"transparent\"\n        attrs[\"stroke\"] = decorator.style.color || DefaultStyle.color!\n        attrs[\"stroke-width\"] = (decorator.style.width || DefaultStyle.width).toString()\n        const p1 = {\n          x: symbol.bounds.xMin,\n          y: symbol.bounds.yMax + +(symbol.style.width || DefaultStyle.width)\n        }\n        const p2 = {\n          x: symbol.bounds.xMax,\n          y: symbol.bounds.yMax + +(symbol.style.width || DefaultStyle.width)\n        }\n        if (symbol.type === SymbolType.Recognized && symbol.kind === RecognizedKind.Text) {\n          p1.y = symbol.baseline + symbol.xHeight / 2\n          p2.y = symbol.baseline + symbol.xHeight / 2\n        }\n        element = SVGBuilder.createLine(p1, p2, attrs)\n        break\n      }\n    }\n\n    return element\n  }\n}","import { IIShapeCircle, IIShapeEllipse, IIShapePolygon, ShapeKind, TIIShape } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { convertRadianToDegree } from \"../../utils\"\nimport { IISVGRendererConst } from \"./IISVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class IISVGRendererShapeUtil\n{\n  static getPolygonePath(polygon: IIShapePolygon): string\n  {\n    return `M ${polygon.points[0].x} ${polygon.points[0].y} ${polygon.points.slice(1).map(p => `L ${p.x} ${p.y}`).join(\" \")} Z`\n  }\n\n  static getCirclePath(circle: IIShapeCircle): string\n  {\n    return `M ${circle.center.x - circle.radius} ${circle.center.y} a ${circle.radius} ${circle.radius} 0 1 1 ${circle.radius * 2} 0 a ${circle.radius} ${circle.radius} 0 1 1 -${circle.radius * 2} 0 Z`\n  }\n\n  static getEllipsePath(ellipse: IIShapeEllipse): string\n  {\n    return `M ${ellipse.center.x - ellipse.radiusX} ${ellipse.center.y} a ${ellipse.radiusX} ${ellipse.radiusY} 0 1 1 ${ellipse.radiusX * 2} 0 a ${ellipse.radiusX} ${ellipse.radiusY} 0 1 1 -${ellipse.radiusX * 2} 0 Z`\n  }\n\n  static getSVGPath(shape: TIIShape): string\n  {\n    switch(shape.kind) {\n      case ShapeKind.Polygon:\n        return IISVGRendererShapeUtil.getPolygonePath(shape as IIShapePolygon)\n      case ShapeKind.Circle:\n        return IISVGRendererShapeUtil.getCirclePath(shape as IIShapeCircle)\n      case ShapeKind.Ellipse:\n        return IISVGRendererShapeUtil.getEllipsePath(shape as IIShapeEllipse)\n      default:\n        throw new Error(`Can't getSVGPath for shape cause kind is unknow: \"${ JSON.stringify(shape) }\"`)\n    }\n  }\n\n  static getSVGElement(shape: TIIShape): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": shape.id,\n      \"type\": shape.type,\n      \"kind\": shape.kind,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n    }\n    if (shape.selected) {\n      attrs[\"filter\"] = `url(#${ IISVGRendererConst.selectionFilterId })`\n    }\n    if (shape.deleting) {\n      attrs[\"filter\"] = `url(#${ IISVGRendererConst.removalFilterId })`\n    }\n\n    const group = SVGBuilder.createGroup(attrs)\n\n    const pathAttrs: { [key: string]: string } = {\n      \"fill\": shape.style.fill || \"transparent\",\n      \"stroke\": shape.style.color || DefaultStyle.color!,\n      \"stroke-width\": (shape.style.width || DefaultStyle.width).toString(),\n      \"d\": IISVGRendererShapeUtil.getSVGPath(shape),\n    }\n    if (shape.style.opacity) {\n      pathAttrs[\"opacity\"] = shape.style.opacity.toString()\n    }\n    if (shape.kind === ShapeKind.Ellipse) {\n      pathAttrs.transform = `rotate(${ convertRadianToDegree(shape.orientation) }, ${shape.center.x}, ${shape.center.y})`\n    }\n\n    group.appendChild(SVGBuilder.createPath(pathAttrs))\n\n    return group\n  }\n}","import { DecoratorKind, IIStroke, TPointer } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\nimport { IISVGRendererDecoratorUtil } from \"./IISVGRendererDecoratorUtil\"\nimport { IISVGRendererConst } from \"./IISVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class IISVGRendererStrokeUtil\n{\n\n  protected static getArcPath(center: TPointer, radius: number): string\n  {\n    const svgPath = [\n      `M ${ center.x } ${ center.y }`,\n      `m ${ -radius } 0`,\n      `a ${ radius } ${ radius } 0 1 0 ${ radius * 2 } 0`,\n      `a ${ radius } ${ radius } 0 1 0 ${ -(radius * 2) } 0`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected static getLinePath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x } ${ linkPoints1[0].y }`,\n      `L ${ linkPoints2[0].x } ${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x } ${ linkPoints2[1].y }`,\n      `L ${ linkPoints1[1].x } ${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected static getFinalPath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    const parts = [`M ${ linkPoints[0].x } ${ linkPoints[0].y }`]\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - (i * (Math.PI / ARCSPLIT))\n      const x = +(end.x - (end.p * width * Math.sin(newAngle))).toFixed(3)\n      const y = +(end.y + (end.p * width * Math.cos(newAngle))).toFixed(3)\n      parts.push(`L ${ x } ${ y }`)\n    }\n    const svgPath = parts.join(\" \")\n    return svgPath\n  }\n\n  protected static getQuadraticPath(begin: TPointer, end: TPointer, central: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, central), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(central, end), width)\n    const linkPoints3 = computeLinksPointers(central, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x } ${ linkPoints1[0].y }`,\n      `Q ${ linkPoints3[0].x } ${ linkPoints3[0].y } ${ linkPoints2[0].x } ${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x } ${ linkPoints2[1].y }`,\n      `Q ${ linkPoints3[1].x } ${ linkPoints3[1].y } ${ linkPoints1[1].x } ${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  static getSVGPath(stroke: IIStroke): string\n  {\n    const STROKE_LENGTH = stroke.pointers.length\n    if (!STROKE_LENGTH) return \"\"\n    const STROKE_WIDTH = (stroke.style.width as number)\n    const NB_QUADRATICS = STROKE_LENGTH - 2\n    const firstPoint = stroke.pointers[0]\n\n    const parts = []\n    if (STROKE_LENGTH < 3) {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * 0.6))\n    } else {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * firstPoint.p))\n      parts.push(this.getLinePath(firstPoint, computeMiddlePointer(firstPoint, stroke.pointers[1]), STROKE_WIDTH))\n\n      for (let i = 0; i < NB_QUADRATICS; i++) {\n        const begin = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n        const end = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n        const central = stroke.pointers[i + 1]\n        parts.push(this.getQuadraticPath(begin, end, central, STROKE_WIDTH)\n        )\n      }\n      const beforeLastPoint = stroke.pointers[STROKE_LENGTH - 2]\n      const lastPoint = stroke.pointers[STROKE_LENGTH - 1]\n      parts.push(this.getLinePath(computeMiddlePointer(beforeLastPoint, lastPoint), lastPoint, STROKE_WIDTH))\n      parts.push(this.getFinalPath(beforeLastPoint, lastPoint, STROKE_WIDTH))\n    }\n    return parts.join(\" \")\n  }\n\n  static getSVGElement(stroke: IIStroke): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": stroke.id,\n      \"type\": \"stroke\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n    }\n    if (stroke.selected) {\n      attrs[\"filter\"] = `url(#${ IISVGRendererConst.selectionFilterId })`\n    }\n    if (stroke.deleting) {\n      attrs[\"filter\"] = `url(#${ IISVGRendererConst.removalFilterId })`\n    }\n\n    const strokeGroup = SVGBuilder.createGroup(attrs)\n\n    const strokeAttrs: { [key: string]: string } = {\n      \"fill\": stroke.style.color || DefaultStyle.color!,\n      \"stroke-width\": stroke.style.width.toString(),\n      \"d\": IISVGRendererStrokeUtil.getSVGPath(stroke)\n    }\n    if (stroke.style.opacity) {\n      strokeAttrs.opacity = stroke.style.opacity.toString()\n    }\n    strokeGroup.append(SVGBuilder.createPath(strokeAttrs))\n\n    stroke.decorators.forEach(d =>\n    {\n      const deco = IISVGRendererDecoratorUtil.getSVGElement(d, stroke)\n      if (deco) {\n        if (d.kind === DecoratorKind.Highlight) {\n          strokeGroup.prepend(deco)\n        }\n        else {\n          strokeGroup.append(deco)\n        }\n      }\n    })\n\n    return strokeGroup\n  }\n\n}","import { DecoratorKind, IIText } from \"../../symbol\"\nimport { IISVGRendererDecoratorUtil } from \"./IISVGRendererDecoratorUtil\"\nimport { IISVGRendererConst } from \"./IISVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class IISVGRendererTextUtil\n{\n  static getSVGElement(text: IIText): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": text.id,\n      \"type\": text.type,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"style\": IISVGRendererConst.noSelection,\n    }\n    if (text.style.opacity) {\n      attrs.opacity = text.style.opacity.toString()\n    }\n    if (text.rotation) {\n      attrs.transform = `rotate(${ text.rotation.degree }, ${ text.rotation.center.x }, ${ text.rotation.center.y })`\n    }\n    if (text.selected) {\n      attrs[\"filter\"] = `url(#${ IISVGRendererConst.selectionFilterId })`\n    }\n    if (text.deleting) {\n      attrs[\"filter\"] = `url(#${ IISVGRendererConst.removalFilterId })`\n    }\n\n    const textGroup = SVGBuilder.createGroup(attrs)\n\n    const textElement = SVGBuilder.createText(text.point, \"\")\n\n    text.chars.forEach(c =>\n    {\n      const attrs: { [key: string]: string } = {\n        id: c.id,\n        fill: c.color,\n        \"font-size\": `${ c.fontSize }px`,\n        \"font-weight\": c.fontWeight.toString(),\n      }\n      textElement.appendChild(SVGBuilder.createTSpan(c.label, attrs))\n    })\n    textGroup.append(textElement)\n\n    text.decorators.forEach(d =>\n    {\n      const deco = IISVGRendererDecoratorUtil.getSVGElement(d, text)\n      if (deco) {\n        if (d.kind === DecoratorKind.Highlight) {\n          textGroup.prepend(deco)\n        }\n        else {\n          textGroup.append(deco)\n        }\n      }\n    })\n\n    return textGroup\n  }\n}","import { DecoratorKind, RecognizedKind, TIIRecognized } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { IISVGRendererDecoratorUtil } from \"./IISVGRendererDecoratorUtil\"\nimport { IISVGRendererStrokeUtil } from \"./IISVGRendererStrokeUtil\"\nimport { IISVGRendererConst } from \"./IISVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class IISVGRendererRecognizedUtil\n{\n  static getSVGElement(recognizedSymbol: TIIRecognized): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": recognizedSymbol.id,\n      \"type\": recognizedSymbol.type,\n      \"kind\": recognizedSymbol.kind,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"fill\": recognizedSymbol.style.color || DefaultStyle.color,\n      \"stroke-width\": (recognizedSymbol.style.width || DefaultStyle.width).toString(),\n    }\n    if (recognizedSymbol.style.opacity) {\n      attrs[\"opacity\"] = recognizedSymbol.style.opacity.toString()\n    }\n    if (recognizedSymbol.selected) {\n      attrs[\"filter\"] = `url(#${ IISVGRendererConst.selectionFilterId })`\n    }\n    if (recognizedSymbol.deleting) {\n      attrs[\"filter\"] = `url(#${ IISVGRendererConst.removalFilterId })`\n    }\n\n    const groupEl = SVGBuilder.createGroup(attrs)\n\n    recognizedSymbol.strokes.forEach(s =>\n    {\n      groupEl.append(IISVGRendererStrokeUtil.getSVGElement(s))\n    })\n\n    if (recognizedSymbol.kind === RecognizedKind.Text) {\n      recognizedSymbol.decorators.forEach(d =>\n      {\n        const deco = IISVGRendererDecoratorUtil.getSVGElement(d, recognizedSymbol)\n        if (deco) {\n          if (d.kind === DecoratorKind.Highlight) {\n            groupEl.prepend(deco)\n          }\n          else {\n            groupEl.append(deco)\n          }\n        }\n      })\n    }\n\n    return groupEl\n  }\n\n}","import { DecoratorKind, IIEraser, IISymbolGroup, SymbolType, TIISymbol } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { IISVGRendererDecoratorUtil } from \"./IISVGRendererDecoratorUtil\"\nimport { IISVGRendererEdgeUtil } from \"./IISVGRendererEdgeUtil\"\nimport { IISVGRendererShapeUtil } from \"./IISVGRendererShapeUtil\"\nimport { IISVGRendererStrokeUtil } from \"./IISVGRendererStrokeUtil\"\nimport { IISVGRendererConst } from \"./IISVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\nimport { IISVGRendererTextUtil } from \"./IISVGRendererTextUtil\"\nimport { IISVGRendererRecognizedUtil } from \"./IISVGRendererRecognizedUtil\"\n\n/**\n * @group Renderer\n */\nexport class IISVGRendererGroupUtil\n{\n\n  static getChildElement(symbol: TIISymbol | IIEraser): SVGGraphicsElement | undefined\n  {\n    let element: SVGGraphicsElement | undefined\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        element = IISVGRendererStrokeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Shape:\n        element = IISVGRendererShapeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Edge:\n        element = IISVGRendererEdgeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Text:\n        element = IISVGRendererTextUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Group:\n        element = IISVGRendererGroupUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Recognized:\n        element = IISVGRendererRecognizedUtil.getSVGElement(symbol)\n        break\n    }\n    return element\n  }\n\n  static getSVGElement(symbolGroup: IISymbolGroup): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": symbolGroup.id,\n      \"type\": \"group\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"fill\": symbolGroup.style.color || DefaultStyle.color!,\n      \"stroke-width\": (symbolGroup.style.width || DefaultStyle.width).toString(),\n    }\n    if (symbolGroup.style.opacity) {\n      attrs[\"opacity\"] = symbolGroup.style.opacity.toString()\n    }\n    if (symbolGroup.selected) {\n      attrs[\"filter\"] = `url(#${ IISVGRendererConst.selectionFilterId })`\n    }\n    if (symbolGroup.deleting) {\n      attrs[\"filter\"] = `url(#${ IISVGRendererConst.removalFilterId })`\n    }\n\n    const groupEl = SVGBuilder.createGroup(attrs)\n\n    symbolGroup.children.forEach(sym =>\n    {\n      groupEl.append(IISVGRendererGroupUtil.getChildElement(sym)!)\n    })\n\n    symbolGroup.decorators.forEach(d =>\n    {\n      const deco = IISVGRendererDecoratorUtil.getSVGElement(d, symbolGroup)\n      if (deco) {\n        if (d.kind === DecoratorKind.Highlight) {\n          groupEl.prepend(deco)\n        }\n        else {\n          groupEl.append(deco)\n        }\n      }\n    })\n\n    return groupEl\n  }\n\n}","import { SvgElementRole } from \"../../Constants\"\nimport { getClosestPoints } from \"../../utils\"\nimport { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { TIISymbol, TPoint, TBox, Box, IIEraser, SymbolType } from \"../../symbol\"\nimport { TIIRendererConfiguration } from \"../RendererConfiguration\"\nimport { IISVGRendererConst } from \"./IISVGRendererConst\"\nimport { IISVGRendererEdgeUtil } from \"./IISVGRendererEdgeUtil\"\nimport { IISVGRendererEraserUtil } from \"./IISVGRendererEraserUtil\"\nimport { IISVGRendererGroupUtil } from \"./IISVGRendererGroupUtil\"\nimport { IISVGRendererShapeUtil } from \"./IISVGRendererShapeUtil\"\nimport { IISVGRendererStrokeUtil } from \"./IISVGRendererStrokeUtil\"\nimport { IISVGRendererTextUtil } from \"./IISVGRendererTextUtil\"\nimport { IISVGRendererRecognizedUtil } from \"./IISVGRendererRecognizedUtil\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class IISVGRenderer\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n  groupGuidesId = \"guides-wrapper\"\n\n  configuration: TIIRendererConfiguration\n  parent!: HTMLElement\n  layer!: SVGSVGElement\n  definitionGroup!: SVGGElement\n\n  verticalGuides: number[] = []\n  horizontalGuides: number[] = []\n\n  constructor(configuration: TIIRendererConfiguration)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n  }\n\n  protected initLayer(): void\n  {\n    const width = Math.max(this.configuration.minWidth, this.parent.clientWidth)\n    const height = Math.max(this.configuration.minHeight, this.parent.clientHeight)\n    this.layer = SVGBuilder.createLayer({ x: 0, y: 0, width, height })\n    this.layer.style.setProperty(\"height\", \"auto\")\n    this.layer.style.setProperty(\"width\", \"auto\")\n    this.layer.appendChild(this.createSVGTools())\n    this.parent.style.setProperty(\"overflow\", \"auto\")\n    this.parent.appendChild(this.layer)\n  }\n\n  protected createDefs(): SVGDefsElement\n  {\n    const defs = SVGBuilder.createDefs()\n\n    const SIZE = 5\n    const REFX = SIZE - 1, REFY = SIZE / 2\n    const arrowHeadMarkerAttrs = {\n      style: IISVGRendererConst.noSelection,\n      fill: \"context-stroke\",\n      markerWidth: SIZE.toString(),\n      markerHeight: SIZE.toString(),\n      refX: REFX.toString(),\n      refY: REFY.toString(),\n    }\n\n    const arrowHeadStart = SVGBuilder.createMarker(IISVGRendererConst.arrowHeadStartMarker, { ...arrowHeadMarkerAttrs, orient: \"auto-start-reverse\" })\n    arrowHeadStart.appendChild(SVGBuilder.createPolygon([0, 0, SIZE, REFY, 0, SIZE], arrowHeadMarkerAttrs))\n    defs.appendChild(arrowHeadStart)\n\n    const arrowHeadEnd = SVGBuilder.createMarker(IISVGRendererConst.arrowHeadEndMaker, { ...arrowHeadMarkerAttrs, orient: \"auto\" })\n    arrowHeadEnd.appendChild(SVGBuilder.createPolygon([0, 0, SIZE, REFY, 0, SIZE], arrowHeadMarkerAttrs))\n    defs.appendChild(arrowHeadEnd)\n\n    const crossMarkerAttrs = {\n      style: IISVGRendererConst.noSelection,\n      markerWidth: \"5\",\n      markerHeight: \"5\",\n      refX: \"0\",\n      refY: \"0\",\n      viewBox: \"-5 -5 10 10\"\n    }\n    const cross = SVGBuilder.createMarker(IISVGRendererConst.crossMarker, crossMarkerAttrs)\n    cross.appendChild(SVGBuilder.createPath({ d: \"M -4,-4 L 4,4 M -4,4 L 4,-4\", stroke: \"white\", \"stroke-width\": \"3\" }))\n    cross.appendChild(SVGBuilder.createPath({ d: \"M -4,-4 L 4,4 M -4,4 L 4,-4\", stroke: \"context-stroke\", \"stroke-width\": \"2\" }))\n    defs.appendChild(cross)\n\n    return defs\n  }\n\n  protected createFilters(): SVGGElement\n  {\n    const filtersGroup = SVGBuilder.createGroup({ id: \"definition-group\" })\n    const removalFilter = SVGBuilder.createFilter(IISVGRendererConst.removalFilterId, { filterUnits: \"userSpaceOnUse\" })\n    const bfeComponentTransfer = SVGBuilder.createComponentTransfert()\n    const bfeFuncA = SVGBuilder.createTransfertFunctionTable(\"feFuncA\", \"0 0.25\")\n    bfeComponentTransfer.appendChild(bfeFuncA)\n    removalFilter.appendChild(bfeComponentTransfer)\n    filtersGroup.appendChild(removalFilter)\n\n    const selectionFilter = SVGBuilder.createFilter(IISVGRendererConst.selectionFilterId, { filterUnits: \"userSpaceOnUse\" })\n    selectionFilter.appendChild(SVGBuilder.createDropShadow({ dx: -1, dy: -1, deviation: 1 }))\n    filtersGroup.appendChild(selectionFilter)\n\n    return filtersGroup\n  }\n\n  protected drawGuides(): void\n  {\n    this.verticalGuides = []\n    this.horizontalGuides = []\n    const height = Number(this.layer.getAttribute(\"height\")?.replace(\"px\", \"\"))\n    const width = Number(this.layer.getAttribute(\"width\")?.replace(\"px\", \"\"))\n    const offSet = this.configuration.guides.gap\n    const subOffSet = this.configuration.guides.gap / 5\n    const attrs = {\n      id: this.groupGuidesId,\n      stroke: \"grey\",\n      opacity: \"0.5\",\n      style: IISVGRendererConst.noSelection,\n      role: SvgElementRole.Guide\n    }\n    const guidesGroup = SVGBuilder.createGroup(attrs)\n    switch (this.configuration.guides.type) {\n      case \"line\":\n        for (let y = offSet; y < height; y += offSet) {\n          const begin: TPoint = { x: offSet, y }\n          const end: TPoint = { x: width - offSet, y }\n          this.horizontalGuides.push(y)\n          const svgLine = SVGBuilder.createLine(begin, end, { \"stroke-width\": \"1\", style: IISVGRendererConst.noSelection })\n          guidesGroup.appendChild(svgLine)\n        }\n        break\n      case \"grid\":\n        for (let y = 0; y < height; y += offSet) {\n          const begin: TPoint = { x: 0, y }\n          const end: TPoint = { x: width, y }\n          const svgLine = SVGBuilder.createLine(begin, end, { \"stroke-width\": \"1\", style: IISVGRendererConst.noSelection })\n          guidesGroup.appendChild(svgLine)\n          this.horizontalGuides.push(y)\n          for (let subY = y + subOffSet; subY < y + offSet; subY += subOffSet) {\n            this.horizontalGuides.push(subY)\n            const svgLine = SVGBuilder.createLine({ x: 0, y: subY }, { x: width, y: subY }, { \"stroke-width\": \"0.25\", style: IISVGRendererConst.noSelection })\n            guidesGroup.appendChild(svgLine)\n          }\n        }\n        for (let x = 0; x < width; x += offSet) {\n          const begin: TPoint = { x, y: 0 }\n          const end: TPoint = { x, y: height }\n          const svgLine = SVGBuilder.createLine(begin, end, { \"stroke-width\": \"1\", style: IISVGRendererConst.noSelection })\n          guidesGroup.appendChild(svgLine)\n          this.verticalGuides.push(x)\n          for (let subX = x + subOffSet; subX < x + offSet; subX += subOffSet) {\n            this.verticalGuides.push(subX)\n            const svgLine = SVGBuilder.createLine({ x: subX, y: 0 }, { x: subX, y: height }, { \"stroke-width\": \"0.25\", style: IISVGRendererConst.noSelection })\n            guidesGroup.appendChild(svgLine)\n          }\n        }\n        break\n      case \"point\":\n        for (let x = offSet; x < width; x += offSet) {\n          this.verticalGuides.push(x)\n          for (let y = offSet; y < height; y += offSet) {\n            this.horizontalGuides.push(y)\n            const svgPoint = SVGBuilder.createCircle({ x, y }, 1)\n            guidesGroup.appendChild(svgPoint)\n          }\n        }\n        break\n      default:\n        this.#logger.error(\"drawGuides\", `Guide type unknow: ${ this.configuration.guides.type }`)\n        break\n    }\n    this.horizontalGuides = [...new Set(this.horizontalGuides)]\n    this.verticalGuides = [...new Set(this.verticalGuides)]\n    this.definitionGroup.appendChild(guidesGroup)\n  }\n\n  protected removeGuides(): void\n  {\n    this.verticalGuides = []\n    this.horizontalGuides = []\n    this.layer.querySelector(`#${ this.groupGuidesId }`)?.remove()\n  }\n\n  protected createSVGTools(): SVGGElement\n  {\n    this.definitionGroup = SVGBuilder.createGroup({ id: \"definition-group\" })\n    this.definitionGroup.appendChild(this.createDefs())\n    this.definitionGroup.appendChild(this.createFilters())\n    if (this.configuration.guides.enable) {\n      this.drawGuides()\n    }\n    return this.definitionGroup\n  }\n\n  init(element: HTMLElement): void\n  {\n    this.#logger.info(\"init\", { element })\n    this.parent = element\n    this.parent.oncontextmenu = () => false\n    this.initLayer()\n  }\n\n  getAttribute(id: string, name: string): string | undefined | null\n  {\n    const element = this.layer.querySelector(`#${ id }`) as HTMLElement | null\n    return element?.getAttribute(name)\n  }\n\n  setAttribute(id: string, name: string, value: string): void\n  {\n    const element = this.layer.querySelector(`#${ id }`) as HTMLElement | null\n    element?.setAttribute(name, value)\n  }\n\n  buildElementFromSymbol(symbol: TIISymbol | IIEraser): SVGGraphicsElement | undefined\n  {\n    let element: SVGGraphicsElement | undefined\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        element = IISVGRendererStrokeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Eraser:\n        element = IISVGRendererEraserUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Shape:\n        element = IISVGRendererShapeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Edge:\n        element = IISVGRendererEdgeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Text:\n        element = IISVGRendererTextUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Group:\n        element = IISVGRendererGroupUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Recognized:\n        element = IISVGRendererRecognizedUtil.getSVGElement(symbol)\n        break\n      default:\n        this.#logger.error(\"buildElementFromSymbol\", `symbol unknow: \"${ JSON.stringify(symbol) }\"`)\n    }\n    return element\n  }\n\n  prependElement(el: Element): void\n  {\n    this.layer.prepend(el)\n  }\n\n  changeOrderSymbol(symbolToMove: TIISymbol, position: \"first\" | \"last\" | \"forward\" | \"backward\"): void\n  {\n    const moveEl = this.layer.querySelector(`#${ symbolToMove.id }`)\n    if (!moveEl) return\n    switch (position) {\n      case \"first\":\n        this.definitionGroup.insertAdjacentElement(\"afterend\", moveEl)\n        break\n      case \"last\":\n        this.layer.insertAdjacentElement(\"beforeend\", moveEl)\n        break\n      case \"forward\":\n        moveEl.nextElementSibling?.insertAdjacentElement(\"afterend\", moveEl)\n        break\n      case \"backward\":\n        if (moveEl.previousElementSibling !== this.definitionGroup) {\n          moveEl.previousElementSibling?.insertAdjacentElement(\"beforebegin\", moveEl)\n        }\n        break\n    }\n  }\n\n  appendElement(el: Element): void\n  {\n    this.layer.appendChild(el)\n  }\n\n  removeElement(id: string): void\n  {\n    this.#logger.debug(\"Element\", { id })\n    const oldStroke = this.layer.querySelector(`#${ id }`)\n    if (oldStroke) {\n      oldStroke.remove()\n    }\n  }\n\n  drawSymbol(symbol: TIISymbol | IIEraser): SVGGraphicsElement | undefined\n  {\n    this.#logger.debug(\"drawSymbol\", { symbol })\n    const oldNode = this.layer.querySelector(`#${ symbol?.id }`)\n    const svgEl = this.buildElementFromSymbol(symbol)\n\n    if (svgEl) {\n      if (oldNode) {\n        oldNode.replaceWith(svgEl)\n      }\n      else {\n        this.layer.appendChild(svgEl)\n      }\n    }\n    return svgEl\n  }\n\n  replaceSymbol(id: string, symbols: TIISymbol[]): SVGGraphicsElement[] | undefined\n  {\n    this.#logger.debug(\"drawSymbol\", { symbols })\n    const oldNode = this.layer.querySelector(`#${ id }`)\n    const elements = symbols.map(s => this.buildElementFromSymbol(s)).filter(x => !!x) as SVGGraphicsElement[]\n\n    if (elements.length) {\n      if (oldNode) {\n        elements.forEach(e => oldNode.insertAdjacentElement(\"beforebegin\", e))\n        oldNode.remove()\n      }\n      else {\n        elements.forEach(e => this.layer.appendChild(e))\n      }\n    }\n    return elements\n  }\n\n  removeSymbol(id: string): void\n  {\n    this.#logger.debug(\"removeSymbol\", { id })\n    this.removeElement(id)\n  }\n\n  drawCircle(point: TPoint, radius: number, attrs: { [key: string]: string } = {}): void\n  {\n    this.#logger.info(\"drawCircle\", { point, radius, attrs })\n    this.layer.appendChild(SVGBuilder.createCircle(point, radius, attrs))\n  }\n\n  drawRect(box: TBox, attrs: { [key: string]: string } = {}): void\n  {\n    this.#logger.info(\"drawCircle\", { box, attrs })\n    this.layer.appendChild(SVGBuilder.createRect(box, attrs))\n  }\n\n  drawLine(p1: TPoint, p2: TPoint, attrs: { [key: string]: string } = {}): void\n  {\n    this.#logger.info(\"drawLine\", { p1, p2, attrs })\n    this.layer.appendChild(SVGBuilder.createLine(p1, p2, attrs))\n  }\n\n  drawConnectionBetweenBox(id: string, box1: TBox, box2: TBox, attrs?: { [key: string]: string }): void\n  {\n    const points1: TPoint[] = new Box(box1).corners\n    const points2: TPoint[] = new Box(box2).corners\n    const { p1, p2 } = getClosestPoints(points1, points2)\n    const attrsLine = {\n      id,\n      fill: \"transparent\",\n      style: IISVGRendererConst.noSelection,\n      ...attrs\n    }\n    this.drawLine(p1, p2, attrsLine)\n  }\n\n  resize(height: number, width: number): void\n  {\n    this.#logger.info(\"resize\", { height, width })\n    this.layer.setAttribute(\"width\", `${ width }px`)\n    this.layer.setAttribute(\"height\", `${ height }px`)\n    this.layer.setAttribute(\"viewBox\", `0, 0, ${ width }, ${ height }`)\n    this.removeGuides()\n    if (this.configuration.guides.enable) {\n      this.drawGuides()\n    }\n  }\n\n  getElementById(id: string): SVGGraphicsElement | null\n  {\n    return this.layer.querySelector(`#${ id }`) as SVGGraphicsElement | null\n  }\n\n  getElements({ tagName, attrs }: { tagName?: string, attrs?: { [key: string]: string } }): NodeListOf<Element>\n  {\n    this.#logger.info(\"getElements\", { tagName, attrs })\n    let query = tagName || \"*\"\n    if (attrs) {\n      Object.keys(attrs).forEach(k =>\n      {\n        query += `[${ k }=${ attrs[k] }]`\n      })\n    }\n    return this.layer.querySelectorAll(query)\n  }\n\n  clearElements({ tagName, attrs }: { tagName?: string, attrs?: { [key: string]: string } }): void\n  {\n    this.#logger.info(\"clearElements\", { tagName, attrs })\n    this.getElements({ tagName, attrs })\n      .forEach(e => e.remove())\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    if (this.layer) {\n      while (this.layer.firstChild) {\n        this.layer.firstChild.remove()\n      }\n      this.layer.appendChild(this.createSVGTools())\n    }\n  }\n\n  destroy(): void\n  {\n    if (this.layer) {\n      this.layer.remove()\n    }\n  }\n}","import { TPointer, TStroke } from \"../../symbol\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\n\n/**\n * @group Renderer\n */\nexport class SVGStroker\n{\n\n  protected getArcPath(center: TPointer, radius: number): string\n  {\n    const svgPath = [\n      `M ${ center.x },${ center.y }`,\n      `m ${ -radius },0`,\n      `a ${ radius },${ radius } 0 1 0 ${ radius * 2 },0`,\n      `a ${ radius },${ radius } 0 1 0 ${ -(radius * 2) },0`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected getLinePath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x },${ linkPoints1[0].y }`,\n      `L ${ linkPoints2[0].x },${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x },${ linkPoints2[1].y }`,\n      `L ${ linkPoints1[1].x },${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected getFinalPath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    const parts = [`M ${ linkPoints[0].x },${ linkPoints[0].y }`]\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - (i * (Math.PI / ARCSPLIT))\n      parts.push(`L ${ end.x - (end.p * width * Math.sin(newAngle)) },${ end.y + (end.p * width * Math.cos(newAngle)) }`)\n    }\n    const svgPath = parts.join(\" \")\n    return svgPath\n  }\n\n  protected getQuadraticPath(begin: TPointer, end: TPointer, central: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, central), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(central, end), width)\n    const linkPoints3 = computeLinksPointers(central, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x },${ linkPoints1[0].y }`,\n      `Q ${ linkPoints3[0].x },${ linkPoints3[0].y } ${ linkPoints2[0].x },${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x },${ linkPoints2[1].y }`,\n      `Q ${ linkPoints3[1].x },${ linkPoints3[1].y } ${ linkPoints1[1].x },${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected buildSVGPath(stroke: TStroke): string\n  {\n    const STROKE_LENGTH = stroke.pointers.length\n    const STROKE_WIDTH = (stroke.style.width as number)\n    const NB_QUADRATICS = STROKE_LENGTH - 2\n    const firstPoint = stroke.pointers[0]\n\n    const parts = []\n    if (STROKE_LENGTH < 3) {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * 0.6))\n    } else {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * firstPoint.p))\n      parts.push(this.getLinePath(firstPoint, computeMiddlePointer(firstPoint, stroke.pointers[1]), STROKE_WIDTH))\n\n      for (let i = 0; i < NB_QUADRATICS; i++) {\n        const begin = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n        const end = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n        const central = stroke.pointers[i + 1]\n        parts.push(this.getQuadraticPath(begin, end, central, STROKE_WIDTH)\n        )\n      }\n      const beforeLastPoint = stroke.pointers[STROKE_LENGTH - 2]\n      const lastPoint = stroke.pointers[STROKE_LENGTH - 1]\n      parts.push(this.getLinePath(computeMiddlePointer(beforeLastPoint, lastPoint), lastPoint, STROKE_WIDTH))\n      parts.push(this.getFinalPath(beforeLastPoint, lastPoint, STROKE_WIDTH))\n    }\n    return parts.join(\" \")\n  }\n\n  drawStroke(svgElement: SVGElement, stroke: TStroke, attrs?: { name: string, value: string }[]): void\n  {\n    const svgPathElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\")\n    svgPathElement.classList.add(\"pending-stroke\")\n    svgPathElement.setAttribute(\"id\", stroke.id)\n    svgPathElement.setAttribute(\"type\", stroke.pointerType)\n    attrs?.forEach(a =>\n    {\n      svgPathElement.setAttribute(a.name, a.value)\n    })\n    const svgPath = this.buildSVGPath(stroke)\n    svgPathElement.setAttribute(\"d\", `${ svgPath }Z`)\n    svgElement.appendChild(svgPathElement)\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { Model } from \"../../model\"\nimport { TStroke } from \"../../symbol\"\nimport { TRendererConfiguration } from \"../RendererConfiguration\"\nimport { TUpdatePatch, TUpdatePatchAppendChild, TUpdatePatchInsertBefore, TUpdatePatchRemoveAttribut, TUpdatePatchRemoveChild, TUpdatePatchRemoveElement, TUpdatePatchReplaceAll, TUpdatePatchReplaceELement, TUpdatePatchSetAttribut } from \"../../recognizer\"\nimport { SVGStroker } from \"./SVGStroker\"\n\n/**\n * @group Renderer\n */\nexport class InteractiveInkSSRSVGRenderer\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n\n  config: TRendererConfiguration\n  stroker: SVGStroker\n  context!: {\n    parent: HTMLElement\n  }\n\n  constructor(config: TRendererConfiguration)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.config = config\n    this.stroker = new SVGStroker()\n  }\n\n  init(element: HTMLElement): void\n  {\n    this.#logger.info(\"init\", { element })\n    element.style.fontSize = \"10px\"\n    this.context = {\n      parent: element\n    }\n  }\n\n  protected drawStroke(svgElement: SVGElement, stroke: TStroke)\n  {\n    let style: string\n    if (stroke.pointerType === \"eraser\") {\n      stroke.style.width = 12\n      style = \"fill:grey;stroke:transparent;shadowBlur:5;opacity:0.2;\"\n    } else {\n      style = `fill:${ stroke.style.color };stroke:transparent;`\n    }\n    this.stroker.drawStroke(svgElement, stroke, [{ name: \"style\", value: style }])\n  }\n\n  protected replaceAll(layerName: string, update: TUpdatePatchReplaceAll): void\n  {\n    const oldLayer = this.context.parent.querySelector(`svg[data-layer=\"${ layerName }\"]`) as SVGElement | null\n    oldLayer?.remove()\n    this.context.parent.insertAdjacentHTML(\"beforeend\", update.svg)\n    const layer = this.context.parent.querySelector(`svg[data-layer=\"${ layerName }\"]`) as SVGElement\n    if (layerName === \"MODEL\") {\n      const pendingStrokesGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n      pendingStrokesGroup.id = \"pendingStrokes\"\n      layer.appendChild(pendingStrokesGroup)\n    }\n  }\n\n  protected replaceElement(update: TUpdatePatchReplaceELement): void\n  {\n    const elementToRemove = this.context.parent.querySelector(`#${ update.id }`) as HTMLElement | null\n    if (elementToRemove) {\n      const parent = elementToRemove.parentNode as HTMLElement | null | undefined\n      elementToRemove?.remove()\n      parent?.insertAdjacentHTML(\"beforeend\", update.svg)\n    }\n  }\n\n  protected appendChild(layerName: string, update: TUpdatePatchAppendChild): void\n  {\n    const parentSelector = update.parentId ? `#${ update.parentId }` : `svg[data-layer=\"${ layerName }\"]`\n    const parent = this.context.parent.querySelector(parentSelector) as HTMLElement\n    parent?.insertAdjacentHTML(\"beforeend\", update.svg)\n  }\n\n  protected removeChild(update: TUpdatePatchRemoveChild): void\n  {\n    this.context.parent.querySelector(`#${ update.parentId } > *:nth-child(${ update.index + 1 })`)?.remove()\n  }\n\n  protected removeElement(update: TUpdatePatchRemoveElement): void\n  {\n    const elementToRemove = this.context.parent.querySelector(`#${ update.id }`)\n    if (elementToRemove) {\n      if (update.id.includes(\"s\") || update.id.includes(\"MODEL\")) {\n        elementToRemove.remove()\n      } else {\n        elementToRemove.setAttribute(\"class\", \"removed-stroke\")\n        setTimeout(() =>\n        {\n          elementToRemove?.remove()\n        }, 100)\n      }\n    }\n  }\n\n  protected insertBefore(update: TUpdatePatchInsertBefore): void\n  {\n    const parent = this.context.parent.querySelector(`#${ update.refId }`) as HTMLElement | null\n    parent?.insertAdjacentHTML(\"beforebegin\", update.svg)\n  }\n\n  protected setAttribute(update: TUpdatePatchSetAttribut): void\n  {\n    const selector = update.id ? `#${ update.id }` : \"svg\"\n    const element = this.context.parent.querySelector(selector) as HTMLElement | null\n    element?.setAttribute(update.name, update.value)\n  }\n\n  protected removeAttribute(update: TUpdatePatchRemoveAttribut): void\n  {\n    const selector = update.id ? `#${ update.id }` : \"svg\"\n    const element = this.context.parent.querySelector(selector) as HTMLElement | null\n    element?.removeAttribute(update.name)\n  }\n\n  updateLayer(layerName: string, update: TUpdatePatch): void\n  {\n    this.#logger.info(\"updateLayer\", { layerName, update })\n    switch (update.type) {\n      case \"REPLACE_ALL\":\n        this.replaceAll(layerName, update as TUpdatePatchReplaceAll)\n        break\n      case \"REPLACE_ELEMENT\":\n        this.replaceElement(update as TUpdatePatchReplaceELement)\n        break\n      case \"APPEND_CHILD\":\n        this.appendChild(layerName, update as TUpdatePatchAppendChild)\n        break\n      case \"REMOVE_ELEMENT\":\n        this.removeElement(update as TUpdatePatchRemoveElement)\n        break\n      case \"REMOVE_CHILD\":\n        this.removeChild(update as TUpdatePatchRemoveChild)\n        break\n      case \"INSERT_BEFORE\":\n        this.insertBefore(update as TUpdatePatchInsertBefore)\n        break\n      case \"SET_ATTRIBUTE\":\n        this.setAttribute(update as TUpdatePatchSetAttribut)\n        break\n      case \"REMOVE_ATTRIBUTE\":\n        this.removeAttribute(update as TUpdatePatchRemoveAttribut)\n        break\n      default:\n        this.#logger.warn(\"updateLayer\", `update.type unknow ${update.type}`)\n        break\n    }\n  }\n\n  updatesLayer(layerName: string, updates: TUpdatePatch[]): void\n  {\n    this.#logger.info(\"updatesLayer\", { layerName, updates })\n    updates.forEach(u => this.updateLayer(layerName, u))\n    this.clearPendingStroke()\n  }\n\n  clearPendingStroke(): void\n  {\n    this.#logger.info(\"clearPendingStroke\")\n    const pendingStrokeGroup = this.context.parent.querySelector(\"#pendingStrokes\") as SVGElement\n    if (pendingStrokeGroup) {\n      pendingStrokeGroup.innerHTML = \"\"\n    }\n  }\n\n  drawPendingStroke(stroke: TStroke): void\n  {\n    this.#logger.info(\"drawPendingStroke\", { stroke })\n    if (stroke) {\n      const pendingStrokeGroup = this.context.parent.querySelector(\"#pendingStrokes\") as SVGElement\n      if (pendingStrokeGroup) {\n        const oldStroke = pendingStrokeGroup.querySelector(`#${ stroke?.id }`)\n        if (oldStroke) {\n          oldStroke.remove()\n        }\n        this.drawStroke(pendingStrokeGroup, stroke)\n      }\n    }\n  }\n\n  clearErasingStrokes(): void\n  {\n    const erasingStrokeList = this.context.parent.querySelectorAll(\"[type=eraser]\") as NodeListOf<SVGElement>\n    erasingStrokeList.forEach(erasingStroke => {\n      erasingStroke.remove()\n    })\n  }\n\n  resize(model: Model): void\n  {\n    this.#logger.info(\"resize\", { model })\n    const rect = this.context.parent.getBoundingClientRect()\n    const svgList = this.context.parent.querySelectorAll(\"svg\")\n    const width = Math.max(rect.width, model.width)\n    const height = Math.max(rect.height, model.height)\n    svgList.forEach(svg =>\n    {\n      svg.setAttribute(\"viewBox\", `0 0 ${ width }, ${ height }`)\n      svg.setAttribute(\"width\", `${ width }px`)\n      svg.setAttribute(\"height\", `${ height }px`)\n    })\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\", { context: this.context })\n    if (this.context?.parent) {\n      this.context.parent.querySelectorAll(\"svg\").forEach(n => n.remove())\n    }\n  }\n}","\n/**\n * @group Renderer\n */\nexport type TGuidesConfiguration = {\n  enable: boolean,\n  gap: number\n}\n\n/**\n * @group Renderer\n * @source\n */\nexport const DefaultGuidesConfiguration: TGuidesConfiguration = {\n  enable: true,\n  gap: 50,\n}\n\n/**\n * @group Renderer\n */\nexport type TRendererConfiguration = {\n  minHeight: number\n  minWidth: number\n  guides: TGuidesConfiguration\n}\n\n/**\n * @group Renderer\n * @source\n */\nexport const DefaultRendererConfiguration: TRendererConfiguration = {\n  guides: DefaultGuidesConfiguration,\n  minHeight: 100,\n  minWidth: 100,\n}\n\n/**\n * @group Renderer\n */\nexport type TIIRendererConfiguration = TRendererConfiguration & {\n  guides: TGuidesConfiguration & {\n    type: \"line\" | \"grid\" | \"point\"\n  },\n}\n\n/**\n * @group Renderer\n * @source\n */\nexport const DefaultIIRendererConfiguration: TIIRendererConfiguration = {\n  guides: {\n    enable: true,\n    gap: 50,\n    type: \"point\"\n  },\n  minHeight: 100,\n  minWidth: 100,\n}\n","import { InteractiveInkEditor } from \"../editor\"\nimport { LoggerManager, LoggerCategory } from \"../logger\"\nimport\n{\n  IIModel,\n  TJIIXChar,\n  TJIIXEdgeArc,\n  TJIIXEdgeElement,\n  JIIXEdgeKind,\n  TJIIXEdgeLine,\n  TJIIXEdgePolyEdge,\n  TJIIXExport,\n  TJIIXNodeCircle,\n  TJIIXNodeElement,\n  TJIIXNodeEllipse,\n  JIIXNodeKind,\n  TJIIXNodeParrallelogram,\n  TJIIXNodePolygon,\n  TJIIXNodeRectangle,\n  TJIIXNodeRhombus,\n  TJIIXNodeTriangle,\n  TJIIXTextElement,\n  TJIIXWord\n} from \"../model\"\nimport\n{\n  Box,\n  DecoratorKind,\n  IIDecorator,\n  IIEdgeArc,\n  IIEdgeLine,\n  IIEdgePolyLine,\n  IIShapeCircle,\n  IIShapeEllipse,\n  IIShapePolygon,\n  IIStroke,\n  IIText,\n  SymbolType,\n  TIIEdge,\n  TIIShape,\n  TIISymbol,\n  TIISymbolChar,\n  TPoint\n} from \"../symbol\"\nimport { RecognizedKind } from \"../symbol\"\nimport { computeAngleAxeRadian, computeAverage, convertBoundingBoxMillimeterToPixel, convertMillimeterToPixel, createUUID } from \"../utils\"\n\n/**\n * @group Manager\n */\nexport class IIConversionManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.CONVERTER)\n  editor: InteractiveInkEditor\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get configuration(): { size: number | \"auto\", weight: \"bold\" | \"normal\" | \"auto\" } {\n    return this.editor.configuration.fontStyle\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get rowHeight(): number\n  {\n    return this.editor.configuration.rendering.guides.gap\n  }\n\n  protected computeFontSize(chars: TJIIXChar[]): number\n  {\n    if (chars.some(c => c[\"bounding-box\"])) {\n      const height = convertMillimeterToPixel(computeAverage(chars.map(c => c[\"bounding-box\"]?.height || 1)))\n      return Math.round(Math.round(height * this.rowHeight) / this.rowHeight / 2) * 2\n    }\n    return Math.round(this.rowHeight / 2)\n  }\n\n  buildChar(char: TJIIXChar, strokes: IIStroke[], fontSize: number): TIISymbolChar\n  {\n    const points = char.grid.map(p => ({\n      x: convertMillimeterToPixel(p.x),\n      y: convertMillimeterToPixel(p.y),\n    }))\n    let fontWeight = this.configuration.weight\n    if (fontWeight === \"auto\") {\n      fontWeight = (strokes[0].style.width || 1) > 2 ? \"bold\" : \"normal\"\n    }\n\n    const color = strokes[0].style.color || \"black\"\n    return {\n      id: `text-char-${ createUUID() }`,\n      label: char.label,\n      color,\n      fontSize,\n      fontWeight,\n      bounds: Box.createFromPoints(points)\n    }\n  }\n\n  buildText(word: TJIIXWord, chars: TJIIXChar[], strokes: IIStroke[], size: number | \"auto\"): IIText\n  {\n    const boundingBox = Box.createFromBoxes([convertBoundingBoxMillimeterToPixel(word[\"bounding-box\"])])\n    const charSymbols: TIISymbolChar[] = []\n    const charFontSize = size === \"auto\" ? this.computeFontSize(chars) : size\n\n    chars.forEach(char =>\n    {\n      const charStrokes = strokes.filter(s => char.items?.some(i => i[\"full-id\"] === s.id)) as IIStroke[]\n      if (charStrokes.length) {\n        charSymbols.push(this.buildChar(char, charStrokes, charFontSize))\n      }\n    })\n    const point: TPoint = {\n      x: boundingBox.xMin,\n      y: boundingBox.yMax\n    }\n    const text = new IIText(charSymbols, point, boundingBox, strokes[0].style)\n    const decorators = strokes.flatMap(s => s.decorators)\n    strokes.forEach(s =>\n    {\n      const sym = this.model.getRootSymbol(s.id)\n      if ((sym?.type === SymbolType.Recognized && sym.kind === RecognizedKind.Text) || sym?.type === SymbolType.Group) {\n        const hightlight = sym.decorators.find(d => d.kind === DecoratorKind.Highlight)\n        if (hightlight) decorators.push(hightlight)\n        const strikethrough = sym.decorators.find(d => d.kind === DecoratorKind.Strikethrough)\n        if (strikethrough) decorators.push(strikethrough)\n        const surround = sym.decorators.find(d => d.kind === DecoratorKind.Surround)\n        if (surround) decorators.push(surround)\n        const underline = sym.decorators.find(d => d.kind === DecoratorKind.Underline)\n        if (underline) decorators.push(underline)\n      }\n    })\n    if (decorators.length) {\n      const hightlight = decorators.find(d => d.kind === DecoratorKind.Highlight)\n      if (hightlight) {\n        text.decorators.push(new IIDecorator(DecoratorKind.Highlight, hightlight.style))\n      }\n      const strikethrough = decorators.find(d => d.kind === DecoratorKind.Strikethrough)\n      if (strikethrough) {\n        text.decorators.push(new IIDecorator(DecoratorKind.Strikethrough, strikethrough.style))\n      }\n      const surround = decorators.find(d => d.kind === DecoratorKind.Surround)\n      if (surround) {\n        text.decorators.push(new IIDecorator(DecoratorKind.Surround, surround.style))\n      }\n      const underline = decorators.find(d => d.kind === DecoratorKind.Underline)\n      if (underline) {\n        text.decorators.push(new IIDecorator(DecoratorKind.Underline, underline.style))\n      }\n    }\n\n    return text\n  }\n\n  convertText(text: TJIIXTextElement, strokes: IIStroke[], onlyText: boolean): { symbol: IIText, strokes: IIStroke[] }[] | undefined\n  {\n    if (!text.lines) {\n      throw new Error(\"You need to active configuration.recognition.export.jiix.text.lines = true\")\n    }\n    if (!text.words) {\n      throw new Error(\"You need to active configuration.recognition.export.jiix.text.words = true\")\n    }\n    if (!text.chars) {\n      throw new Error(\"You need to active configuration.recognition.export.jiix.text.chars = true\")\n    }\n    if (!text.chars.some(c => c.items)) {\n      throw new Error(\"You need to active configuration.recognition.export.jiix.strokes = true\")\n    }\n\n    const jiixWords = text.words as TJIIXWord[]\n    const jiixChars = text.chars as TJIIXChar[]\n\n    const result: { symbol: IIText, strokes: IIStroke[] }[] = []\n\n\n    let textFontSize = this.configuration.size\n    if (onlyText && textFontSize === \"auto\") {\n      textFontSize = Math.round(this.computeFontSize(jiixChars.filter(c => c.items?.length)) / 2) * 2\n    }\n    else if (this.configuration.size !== \"auto\") {\n      textFontSize = this.configuration.size * this.rowHeight\n    }\n\n    let isNewLine = false\n    let currentY = convertMillimeterToPixel(text.lines[0][\"baseline-y\"])\n    const leftX = convertMillimeterToPixel(text[\"bounding-box\"]?.x || 0)\n    let currentX = convertMillimeterToPixel(jiixWords[0][\"bounding-box\"]?.x || 0)\n    jiixWords.forEach(word =>\n    {\n      if (word.label === \" \") {\n        currentX += this.editor.texter.getSpaceWidth(result.at(-1)?.symbol.chars[0].fontSize|| (this.rowHeight / 2))\n        return\n      }\n      const wordStrokes = strokes.filter(s => word.items?.some(i => i[\"full-id\"] === s.id)) as IIStroke[]\n      if (wordStrokes.length) {\n        const chars = jiixChars.slice(word[\"first-char\"] as number, (word[\"last-char\"] || 0) + 1)\n        const wordSymbol = this.buildText(word, chars, wordStrokes, textFontSize)\n\n        if (onlyText) {\n          if (isNewLine) {\n            isNewLine = false\n            const nbRow = Math.round((wordSymbol.point.y - currentY) / this.rowHeight) || 1\n            currentY += nbRow * this.rowHeight\n            if (Math.abs(wordSymbol.point.x - leftX) < this.rowHeight) {\n              currentX = leftX\n            }\n            else {\n              currentX = wordSymbol.point.x\n            }\n          }\n          wordSymbol.point.x = currentX\n          wordSymbol.point.y = this.model.roundToLineGuide(currentY)\n        }\n\n        this.editor.texter.setBounds(wordSymbol)\n        currentX += wordSymbol.bounds.width\n        result.push({\n          symbol: wordSymbol,\n          strokes: wordStrokes\n        })\n      }\n      isNewLine = word.label === \"\\n\"\n    })\n\n    return result\n  }\n\n  buildCircle(circle: TJIIXNodeCircle, strokes: IIStroke[]): IIShapeCircle\n  {\n    const center: TPoint = {\n      x: convertMillimeterToPixel(circle.cx),\n      y: convertMillimeterToPixel(circle.cy)\n    }\n    return new IIShapeCircle(center, convertMillimeterToPixel(circle.r), strokes[0]?.style)\n  }\n\n  buildEllipse(ellipse: TJIIXNodeEllipse, strokes: IIStroke[]): IIShapeEllipse\n  {\n    const center: TPoint = {\n      x: convertMillimeterToPixel(ellipse.cx),\n      y: convertMillimeterToPixel(ellipse.cy),\n    }\n    return new IIShapeEllipse(center, convertMillimeterToPixel(ellipse.rx), convertMillimeterToPixel(ellipse.ry), ellipse.orientation, strokes[0]?.style)\n  }\n\n  buildRectangle(rectangle: TJIIXNodeRectangle, strokes: IIStroke[]): IIShapePolygon\n  {\n    const height = convertMillimeterToPixel(rectangle.height)\n    const width = convertMillimeterToPixel(rectangle.width)\n    const x = convertMillimeterToPixel(rectangle.x)\n    const y = convertMillimeterToPixel(rectangle.y)\n    const points: TPoint[] = [\n      { x, y },\n      { x: x + width, y },\n      { x: x + width, y: y + height },\n      { x, y: y + height }\n    ]\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  buildPolygon(polygon: TJIIXNodePolygon, strokes: IIStroke[]): IIShapePolygon\n  {\n    const points: TPoint[] = []\n    for (let i = 0; i < polygon.points.length; i += 2) {\n      points.push({\n        x: convertMillimeterToPixel(polygon.points[i]),\n        y: convertMillimeterToPixel(polygon.points[i + 1])\n      })\n    }\n\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  buildRhombus(polygon: TJIIXNodeRhombus, strokes: IIStroke[]): IIShapePolygon\n  {\n    const points: TPoint[] = []\n    for (let i = 0; i < polygon.points.length; i += 2) {\n      points.push({\n        x: convertMillimeterToPixel(polygon.points[i]),\n        y: convertMillimeterToPixel(polygon.points[i + 1])\n      })\n    }\n\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  buildTriangle(polygon: TJIIXNodeTriangle, strokes: IIStroke[]): IIShapePolygon\n  {\n    const points: TPoint[] = []\n    for (let i = 0; i < polygon.points.length; i += 2) {\n      points.push({\n        x: convertMillimeterToPixel(polygon.points[i]),\n        y: convertMillimeterToPixel(polygon.points[i + 1])\n      })\n    }\n\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  buildParallelogram(polygon: TJIIXNodeParrallelogram, strokes: IIStroke[]): IIShapePolygon\n  {\n    const points: TPoint[] = []\n    for (let i = 0; i < polygon.points.length; i += 2) {\n      points.push({\n        x: convertMillimeterToPixel(polygon.points[i]),\n        y: convertMillimeterToPixel(polygon.points[i + 1])\n      })\n    }\n\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  convertNode(node: TJIIXNodeElement, strokes: IIStroke[]): { symbol: TIIShape, strokes: IIStroke[] } | undefined\n  {\n    const associatedStroke = strokes.filter(s => node.items?.some(i => i[\"full-id\"] === s.id))\n    if (!associatedStroke.length) return\n\n    const uniqStrokes = associatedStroke.filter((a, i) => associatedStroke.findIndex((s) => a.id === s.id) === i)\n\n    let shape: TIIShape\n    switch (node.kind) {\n      case JIIXNodeKind.Circle:\n        shape = this.buildCircle(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Ellipse:\n        shape = this.buildEllipse(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Rectangle:\n        shape = this.buildRectangle(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Triangle:\n        shape = this.buildTriangle(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Parallelogram:\n        shape = this.buildParallelogram(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Polygon:\n        shape = this.buildPolygon(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Rhombus:\n        shape = this.buildRhombus(node, uniqStrokes)\n        break\n      default:\n        this.#logger.warn(\"convertNode\", `Conversion of Node with kind equal to ${ JSON.stringify(node) } is unknow`)\n        return\n    }\n    return { symbol: shape, strokes: uniqStrokes }\n  }\n\n  buildLine(line: TJIIXEdgeLine, strokes: IIStroke[]): IIEdgeLine\n  {\n    const point1: TPoint = { x: convertMillimeterToPixel(line.x1), y: convertMillimeterToPixel(line.y1) }\n    const point2: TPoint = { x: convertMillimeterToPixel(line.x2), y: convertMillimeterToPixel(line.y2) }\n    const angle = computeAngleAxeRadian(point1, point2)\n\n    if (Math.abs(angle % Math.PI) < 0.1) {\n      // to adjust the line with the horizontal\n      point1.y = +((point1.y + point2.y) / 2).toFixed(3)\n      point2.y = point1.y\n    }\n    else if (Math.abs(angle % (Math.PI / 2)) < 0.1) {\n      // to adjust the line with the vertical\n      point1.x = +((point1.x + point2.x) / 2).toFixed(3)\n      point2.x = point1.x\n    }\n    return new IIEdgeLine(point1, point2, line.p1Decoration, line.p2Decoration, strokes[0]?.style)\n  }\n\n  buildPolyEdge(polyline: TJIIXEdgePolyEdge, strokes: IIStroke[]): IIEdgePolyLine\n  {\n    const start: TPoint = { x: convertMillimeterToPixel(polyline.edges[0].x1), y: convertMillimeterToPixel(polyline.edges[0].y1) }\n    const points = polyline.edges.map(e => ({ x: convertMillimeterToPixel(e.x2), y: convertMillimeterToPixel(e.y2) }))\n    points.unshift(start)\n    for (let index = 0; index < points.length - 1; index++) {\n      const p1 = points[index]\n      const p2 = points[index + 1]\n      const angle = computeAngleAxeRadian(p1, p2)\n      if (Math.abs(angle % Math.PI) < 0.1) {\n        p1.y = +((p1.y + p2.y) / 2).toFixed(3)\n        p2.y = p1.y\n      }\n      else if (Math.abs(angle % (Math.PI / 2)) < 0.1) {\n        p1.x = +((p1.x + p2.x) / 2).toFixed(3)\n        p2.x = p1.x\n      }\n    }\n\n    return new IIEdgePolyLine(points, polyline.edges[0].p1Decoration, polyline.edges.at(-1)!.p2Decoration, strokes[0]?.style)\n  }\n\n  buildArc(arc: TJIIXEdgeArc, strokes: IIStroke[]): IIEdgeArc\n  {\n    const center: TPoint = { x: convertMillimeterToPixel(arc.cx), y: convertMillimeterToPixel(arc.cy) }\n    const radiusX = convertMillimeterToPixel(arc.rx)\n    const radiusY = convertMillimeterToPixel(arc.ry)\n    return new IIEdgeArc(center, arc.startAngle, arc.sweepAngle, radiusX, radiusY, arc.phi, arc.startDecoration, arc.endDecoration, strokes[0]?.style)\n  }\n\n  convertEdge(edge: TJIIXEdgeElement, strokes: IIStroke[]): { symbol: TIIEdge, strokes: IIStroke[] } | undefined\n  {\n    switch (edge.kind) {\n      case JIIXEdgeKind.Line: {\n        const associatedStroke = strokes.filter(s => edge.items?.some(i => i[\"full-id\"] === s.id))\n        if (!associatedStroke.length) return\n        const uniqStrokes = associatedStroke.filter((a, i) => associatedStroke.findIndex((s) => a.id === s.id) === i)\n        const oiEdge = this.buildLine(edge, uniqStrokes)\n        return {\n          symbol: oiEdge,\n          strokes: uniqStrokes\n        }\n      }\n      case JIIXEdgeKind.Arc: {\n        const associatedStroke = strokes.filter(s => edge.items?.some(i => i[\"full-id\"] === s.id))\n        if (!associatedStroke.length) return\n        const uniqStrokes = associatedStroke.filter((a, i) => associatedStroke.findIndex((s) => a.id === s.id) === i)\n        const oiEdge = this.buildArc(edge, uniqStrokes)\n        return {\n          symbol: oiEdge,\n          strokes: uniqStrokes\n        }\n      }\n      case JIIXEdgeKind.PolyEdge: {\n        const associatedStroke = strokes.filter(s => edge.edges.flatMap(e => e.items)?.some(i => i![\"full-id\"] === s.id))\n        if (!associatedStroke.length) return\n        const uniqStrokes = associatedStroke.filter((a, i) => associatedStroke.findIndex((s) => a.id === s.id) === i)\n        const oiEdge = this.buildPolyEdge(edge, uniqStrokes)\n        return {\n          symbol: oiEdge,\n          strokes: uniqStrokes\n        }\n      }\n      default:\n        this.#logger.error(\"convertEdge\", `Conversion of Edge with kind equal to ${ JSON.stringify(edge) } is unknow`)\n        return\n    }\n  }\n\n  async apply(symbols: TIISymbol[] = []): Promise<void>\n  {\n    this.#logger.info(\"convert\")\n    if (!this.model.exports?.[\"application/vnd.myscript.jiix\"]) {\n      await this.editor.export([\"application/vnd.myscript.jiix\"])\n    }\n    this.editor.selector.removeSelectedGroup()\n    const jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"] as TJIIXExport\n    if (jiix?.elements?.length) {\n      const strokesToConvert = this.editor.extractStrokesFromSymbols(symbols.length ? symbols : this.model.symbols)\n\n      const onlyText = !jiix.elements?.some(e => e.type !== \"Text\")\n      const conversionResults: { symbol: TIISymbol, strokes: IIStroke[] }[] = []\n      jiix.elements.forEach(el =>\n      {\n        switch (el.type) {\n          case \"Text\": {\n            const conversion = this.convertText(el, strokesToConvert, onlyText)\n            if (conversion) {\n              conversionResults.push(...conversion)\n            }\n            break\n          }\n          case \"Node\": {\n            const conversion = this.convertNode(el, strokesToConvert)\n            if (conversion) {\n              conversionResults.push(conversion)\n            }\n            break\n          }\n          case \"Edge\": {\n            const conversion = this.convertEdge(el, strokesToConvert)\n            if (conversion) {\n              conversionResults.push(conversion)\n            }\n            break\n          }\n          default: {\n            this.#logger.warn(\"buildConversions\", `Unknow jiix element type: ${ el.type }`)\n          }\n        }\n      })\n\n      this.editor.addSymbols(conversionResults.map(cs => cs.symbol), false)\n      this.editor.removeSymbols(conversionResults.flatMap(cs => cs.strokes.map(s => s.id)), false)\n      this.editor.history.push(this.model, { added: conversionResults.map(c => c.symbol), erased: conversionResults.flatMap(cs => cs.strokes) })\n    }\n  }\n}\n","import { ResizeDirection, SvgElementRole } from \"../Constants\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  Box,\n  EdgeKind,\n  IIStroke,\n  IISymbolGroup,\n  IIText,\n  ShapeKind,\n  SymbolType,\n  TIIEdge,\n  TIIShape,\n  TIISymbol,\n  TPoint,\n  TIIRecognized,\n  RecognizedKind\n} from \"../symbol\"\n\n/**\n * @group Manager\n */\nexport class IIResizeManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.TRANSFORMER)\n  editor: InteractiveInkEditor\n\n  interactElementsGroup?: SVGElement\n  direction!: ResizeDirection\n  boundingBox!: Box\n  transformOrigin!: TPoint\n  keepRatio = false\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  protected applyToStroke(stroke: IIStroke, origin: TPoint, scaleX: number, scaleY: number): IIStroke\n  {\n    this.#logger.debug(\"applyToStroke\", { stroke, origin, scaleX, scaleY })\n    stroke.pointers.forEach(p =>\n    {\n      p.x = +(origin.x + scaleX * (p.x - origin.x)).toFixed(3)\n      p.y = +(origin.y + scaleY * (p.y - origin.y)).toFixed(3)\n    })\n    return stroke\n  }\n\n  protected applyToShape(shape: TIIShape, origin: TPoint, scaleX: number, scaleY: number): TIIShape\n  {\n    this.#logger.debug(\"applyToShape\", { shape, origin, scaleX, scaleY })\n    switch (shape.kind) {\n      case ShapeKind.Ellipse: {\n        const cosPhi = Math.cos(shape.orientation)\n        const sinPhi = Math.sin(shape.orientation)\n        shape.center.x = +(shape.center.x + ((scaleX - 1) * cosPhi + (scaleY - 1) * sinPhi) * (shape.center.x - origin.x)).toFixed(3)\n        shape.center.y = +(shape.center.y + ((scaleX - 1) * -sinPhi + (scaleY - 1) * cosPhi) * (shape.center.y - origin.y)).toFixed(3)\n        shape.radiusX = +(Math.abs(shape.radiusX * (scaleX * cosPhi - scaleY * sinPhi))).toFixed(3)\n        shape.radiusY = +(Math.abs(shape.radiusY * (scaleX * sinPhi + scaleY * cosPhi))).toFixed(3)\n        return shape\n      }\n      case ShapeKind.Circle: {\n        shape.radius = +(shape.radius * (scaleX + scaleY) / 2).toFixed(3)\n        shape.center.x = +(origin.x + scaleX * (shape.center.x - origin.x)).toFixed(3)\n        shape.center.y = +(origin.y + scaleY * (shape.center.y - origin.y)).toFixed(3)\n        return shape\n      }\n      case ShapeKind.Polygon: {\n        shape.points.forEach(p =>\n        {\n          p.x = +(origin.x + scaleX * (p.x - origin.x)).toFixed(3)\n          p.y = +(origin.y + scaleY * (p.y - origin.y)).toFixed(3)\n        })\n        return shape\n      }\n      default:\n        throw new Error(`Can't apply resize on shape, kind unknow: ${ JSON.stringify(shape) }`)\n    }\n  }\n\n  protected applyToEdge(edge: TIIEdge, origin: TPoint, scaleX: number, scaleY: number): TIIEdge\n  {\n    this.#logger.debug(\"applyToEdge\", { edge, origin, scaleX, scaleY })\n    switch (edge.kind) {\n      case EdgeKind.Arc: {\n        const cosPhi = Math.cos(edge.phi)\n        const sinPhi = Math.sin(edge.phi)\n        edge.center.x = +(edge.center.x + ((scaleX - 1) * cosPhi + (scaleY - 1) * sinPhi) * (edge.center.x - origin.x)).toFixed(3)\n        edge.center.y = +(edge.center.y + ((scaleX - 1) * -sinPhi + (scaleY - 1) * cosPhi) * (edge.center.y - origin.y)).toFixed(3)\n        edge.radiusX = +(edge.radiusX * Math.abs(scaleX * cosPhi + scaleY * sinPhi)).toFixed(3)\n        edge.radiusY = +(edge.radiusY * Math.abs(scaleX * sinPhi + scaleY * cosPhi)).toFixed(3)\n\n        if (scaleX < 0) {\n          edge.startAngle = +(Math.PI - edge.startAngle).toFixed(3)\n          edge.sweepAngle *= -1\n        }\n        else if (scaleY < 0) {\n          edge.sweepAngle *= -1\n        }\n        return edge\n      }\n      case EdgeKind.Line: {\n        edge.start.x = +(origin.x + scaleX * (edge.start.x - origin.x)).toFixed(3)\n        edge.start.y = +(origin.y + scaleY * (edge.start.y - origin.y)).toFixed(3)\n        edge.end.x = +(origin.x + scaleX * (edge.end.x - origin.x)).toFixed(3)\n        edge.end.y = +(origin.y + scaleY * (edge.end.y - origin.y)).toFixed(3)\n        return edge\n      }\n      case EdgeKind.PolyEdge: {\n        edge.points.forEach(p =>\n        {\n          p.x = +(origin.x + scaleX * (p.x - origin.x)).toFixed(3)\n          p.y = +(origin.y + scaleY * (p.y - origin.y)).toFixed(3)\n          return p\n        })\n        return edge\n      }\n      default:\n        throw new Error(`Can't apply resize on edge, kind unknow: ${ JSON.stringify(edge) }`)\n    }\n  }\n\n  protected applyOnText(text: IIText, origin: TPoint, scaleX: number, scaleY: number): IIText\n  {\n    text.point.x = +(origin.x + scaleX * (text.point.x - origin.x)).toFixed(3)\n    text.point.y = +(origin.y + scaleY * (text.point.y - origin.y)).toFixed(3)\n\n    text.chars.forEach(c =>\n    {\n      c.fontSize = +(c.fontSize * (scaleX + scaleY) / 2).toFixed(3)\n    })\n    return this.editor.texter.updateBounds(text)\n  }\n\n  protected applyOnGroup(group: IISymbolGroup, origin: TPoint, scaleX: number, scaleY: number): IISymbolGroup\n  {\n    group.children.forEach(s => this.applyToSymbol(s, origin, scaleX, scaleY))\n    return group\n  }\n\n  protected applyOnRecognizedSymbol(recognizedSymbol: TIIRecognized, origin: TPoint, scaleX: number, scaleY: number): TIIRecognized\n  {\n    recognizedSymbol.strokes.forEach(s => this.applyToStroke(s, origin, scaleX, scaleY))\n    if (recognizedSymbol.kind === RecognizedKind.Text) {\n      recognizedSymbol.xHeight *= scaleY\n    }\n    return recognizedSymbol\n  }\n\n  applyToSymbol(symbol: TIISymbol, origin: TPoint, scaleX: number, scaleY: number): TIISymbol\n  {\n    this.#logger.info(\"applyToSymbol\", { symbol, scaleX, scaleY })\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        return this.applyToStroke(symbol, origin, scaleX, scaleY)\n      case SymbolType.Shape:\n        return this.applyToShape(symbol, origin, scaleX, scaleY)\n      case SymbolType.Edge:\n        return this.applyToEdge(symbol, origin, scaleX, scaleY)\n      case SymbolType.Text:\n        return this.applyOnText(symbol, origin, scaleX, scaleY)\n      case SymbolType.Group:\n        return this.applyOnGroup(symbol, origin, scaleX, scaleY)\n      case SymbolType.Recognized:\n        return this.applyOnRecognizedSymbol(symbol, origin, scaleX, scaleY)\n      default:\n        throw new Error(`Can't apply resize on symbol, type unknow: ${ JSON.stringify(symbol) }`)\n    }\n  }\n\n  setTransformOrigin(id: string, originX: number, originY: number): void\n  {\n    this.editor.renderer.setAttribute(id, \"transform-origin\", `${ originX }px ${ originY }px`)\n  }\n\n  scaleElement(id: string, sx: number, sy: number): void\n  {\n    this.#logger.info(\"scaleElement\", { id, sx, sy })\n    this.editor.renderer.setAttribute(id, \"transform\", `scale(${ sx },${ sy })`)\n  }\n\n  start(target: Element, origin: TPoint): void\n  {\n    this.#logger.info(\"start\", { target })\n    this.interactElementsGroup = (target.closest(`[role=${ SvgElementRole.InteractElementsGroup }]`) as unknown) as SVGGElement\n    this.direction = target.getAttribute(\"resize-direction\") as ResizeDirection\n\n    this.keepRatio = this.model.symbolsSelected.some(s => s.type === SymbolType.Text || (s.type === SymbolType.Shape && (s as TIIShape).kind === ShapeKind.Circle))\n\n    this.transformOrigin = origin\n    this.boundingBox = Box.createFromPoints(this.model.symbolsSelected.flatMap(s => s.vertices))\n    this.setTransformOrigin(this.interactElementsGroup!.id, this.transformOrigin.x, this.transformOrigin.y)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.setTransformOrigin(s.id, this.transformOrigin.x, this.transformOrigin.y)\n    })\n  }\n\n  continue(point: TPoint): { scaleX: number, scaleY: number }\n  {\n    this.#logger.info(\"continue\", { point })\n    if (!this.interactElementsGroup) {\n      throw new Error(\"Can't resize, you must call start before\")\n    }\n    const localPoint = point\n    const horizontalResize = [\n      ResizeDirection.East,\n      ResizeDirection.NorthEast,\n      ResizeDirection.SouthEast,\n      ResizeDirection.West,\n      ResizeDirection.NorthWest,\n      ResizeDirection.SouthWest\n    ].includes(this.direction)\n    const verticalResize = [\n      ResizeDirection.North,\n      ResizeDirection.NorthEast,\n      ResizeDirection.NorthWest,\n      ResizeDirection.South,\n      ResizeDirection.SouthEast,\n      ResizeDirection.SouthWest\n    ].includes(this.direction)\n    const { x, y } = this.editor.snaps.snapResize(point, horizontalResize, verticalResize)\n    localPoint.x = x\n    localPoint.y = y\n\n    let deltaX = 0, deltaY = 0\n    if ([ResizeDirection.East, ResizeDirection.NorthEast, ResizeDirection.SouthEast].includes(this.direction)) {\n      deltaX = localPoint.x - this.boundingBox.xMax\n    }\n    else if ([ResizeDirection.West, ResizeDirection.NorthWest, ResizeDirection.SouthWest].includes(this.direction)) {\n      deltaX = this.boundingBox.xMin - localPoint.x\n    }\n\n    if ([ResizeDirection.North, ResizeDirection.NorthEast, ResizeDirection.NorthWest].includes(this.direction)) {\n      deltaY = this.boundingBox.yMin - localPoint.y\n    }\n    else if ([ResizeDirection.South, ResizeDirection.SouthEast, ResizeDirection.SouthWest].includes(this.direction)) {\n      deltaY = localPoint.y - this.boundingBox.yMax\n    }\n\n    let scaleX = this.boundingBox.width ? 1 + (deltaX / this.boundingBox.width) : 1\n    let scaleY = this.boundingBox.height ? 1 + (deltaY / this.boundingBox.height) : 1\n\n    if (this.keepRatio) {\n      if ([ResizeDirection.North, ResizeDirection.South].includes(this.direction)) {\n        scaleX = scaleY\n      }\n      else if ([ResizeDirection.East, ResizeDirection.West].includes(this.direction)) {\n        scaleY = scaleX\n      }\n      else {\n        scaleX = Math.max(scaleX, scaleY)\n        scaleY = scaleX\n      }\n    }\n    this.scaleElement(this.interactElementsGroup.id, scaleX, scaleY)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.scaleElement(s.id, scaleX, scaleY)\n    })\n    return {\n      scaleX,\n      scaleY\n    }\n  }\n\n  async end(point: TPoint): Promise<void>\n  {\n    this.#logger.info(\"end\", { point })\n    const { scaleX, scaleY } = this.continue(point)\n    this.editor.snaps.clearSnapToElementLines()\n    const oldSymbols = this.model.symbolsSelected.map(s => s.clone())\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.applyToSymbol(s, this.transformOrigin, scaleX, scaleY)\n      this.editor.renderer.drawSymbol(s)\n      this.model.updateSymbol(s)\n    })\n\n    const strokesFromSymbols = this.editor.extractStrokesFromSymbols(this.model.symbolsSelected)\n    this.editor.recognizer.transformScale(strokesFromSymbols.map(s => s.id), scaleX, scaleY, this.transformOrigin.x, this.transformOrigin.y)\n    this.editor.history.push(this.model, { scale: [{ symbols: oldSymbols, origin: {...this.transformOrigin}, scaleX, scaleY }] })\n\n    this.interactElementsGroup = undefined\n    this.editor.svgDebugger.apply()\n  }\n}\n","import { SvgElementRole } from \"../Constants\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  Box,\n  EdgeKind,\n  IIStroke,\n  IISymbolGroup,\n  IIText,\n  TIIRecognized,\n  ShapeKind,\n  SymbolType,\n  TIIEdge,\n  TIIShape,\n  TIISymbol,\n  TPoint\n} from \"../symbol\"\nimport { computeAngleRadian, convertDegreeToRadian, convertRadianToDegree, computeRotatedPoint } from \"../utils\"\n\n/**\n * @group Manager\n */\nexport class IIRotationManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.TRANSFORMER)\n  editor: InteractiveInkEditor\n  interactElementsGroup?: SVGElement\n  center!: TPoint\n  origin!: TPoint\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  protected applyToStroke(stroke: IIStroke, center: TPoint, angleRad: number): IIStroke\n  {\n    stroke.pointers.forEach(p =>\n    {\n      const { x, y } = computeRotatedPoint(p, center, angleRad)\n      p.x = x\n      p.y = y\n    })\n    return stroke\n  }\n\n  protected applyToShape(shape: TIIShape, center: TPoint, angleRad: number): TIIShape\n  {\n    switch (shape.kind) {\n      case ShapeKind.Ellipse: {\n        shape.center = computeRotatedPoint(shape.center, center, angleRad)\n        shape.orientation = (shape.orientation + angleRad) % (2 * Math.PI)\n        return shape\n      }\n      case ShapeKind.Circle: {\n        shape.center = computeRotatedPoint(shape.center, center, angleRad)\n        return shape\n      }\n      case ShapeKind.Polygon: {\n        shape.points.forEach(p =>\n        {\n          const { x, y } = computeRotatedPoint(p, center, angleRad)\n          p.x = x\n          p.y = y\n        })\n        return shape\n      }\n      default:\n        throw new Error(`Can't apply rotate on shape, kind unknow: ${ JSON.stringify(shape) }`)\n    }\n  }\n\n  protected applyToEdge(edge: TIIEdge, center: TPoint, angleRad: number): TIIEdge\n  {\n    switch (edge.kind) {\n      case EdgeKind.Arc: {\n        edge.phi = (edge.phi - angleRad) % (2 * Math.PI)\n        edge.center = computeRotatedPoint(edge.center, center, angleRad)\n        return edge\n      }\n      case EdgeKind.Line: {\n        edge.start = computeRotatedPoint(edge.start, center, angleRad)\n        edge.end = computeRotatedPoint(edge.end, center, angleRad)\n        return edge\n      }\n      case EdgeKind.PolyEdge: {\n        edge.points = edge.points.map(p => computeRotatedPoint(p, center, angleRad))\n        return edge\n      }\n      default:\n        throw new Error(`Can't apply rotate on edge, kind unknow: ${ JSON.stringify(edge) }`)\n    }\n    return edge\n  }\n\n  protected applyOnText(text: IIText, center: TPoint, angleRad: number): IIText\n  {\n    text.rotation = {\n      degree: convertRadianToDegree(angleRad) + (text.rotation?.degree || 0),\n      center: center\n    }\n    return this.editor.texter.updateBounds(text)\n  }\n\n  protected applyOnGroup(group: IISymbolGroup, center: TPoint, angleRad: number): IISymbolGroup\n  {\n    group.children.forEach(s => this.applyToSymbol(s, center, angleRad))\n    return group\n  }\n\n  protected applyOnRecognizedSymbol(strokeText: TIIRecognized, center: TPoint, angleRad: number): TIIRecognized\n  {\n    strokeText.strokes.forEach(s => this.applyToStroke(s, center, angleRad))\n    return strokeText\n  }\n\n  applyToSymbol(symbol: TIISymbol, center: TPoint, angleRad: number): TIISymbol\n  {\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        return this.applyToStroke(symbol, center, angleRad)\n      case SymbolType.Shape:\n        return this.applyToShape(symbol, center, angleRad)\n      case SymbolType.Edge:\n        return this.applyToEdge(symbol, center, angleRad)\n      case SymbolType.Text:\n        return this.applyOnText(symbol, center, angleRad)\n      case SymbolType.Group:\n        return this.applyOnGroup(symbol, center, angleRad)\n      case SymbolType.Recognized:\n        return this.applyOnRecognizedSymbol(symbol, center, angleRad)\n      default:\n        throw new Error(`Can't apply rotate on symbol, type unknow: ${ JSON.stringify(symbol) }`)\n    }\n  }\n\n  setTransformOrigin(id: string, originX: number, originY: number): void\n  {\n    this.editor.renderer.setAttribute(id, \"transform-origin\", `${ originX }px ${ originY }px`)\n  }\n\n  rotateElement(id: string, degree: number): void\n  {\n    this.#logger.info(\"rotateElement\", { id, degree })\n    this.editor.renderer.setAttribute(id, \"transform\", `rotate(${ degree })`)\n  }\n\n  start(target: Element, origin: TPoint): void\n  {\n    this.#logger.info(\"start\", { target })\n    this.interactElementsGroup = (target.closest(`[role=${ SvgElementRole.InteractElementsGroup }]`) as unknown) as SVGGElement\n    const boundingBox = Box.createFromPoints(this.model.symbolsSelected.flatMap(s => s.vertices))\n\n    this.center = {\n      x: boundingBox.xMin + boundingBox.width / 2,\n      y: boundingBox.yMid\n    }\n    this.origin = origin\n    this.setTransformOrigin(this.interactElementsGroup.id, this.center.x, this.center.y)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.setTransformOrigin(s.id, this.center.x, this.center.y)\n    })\n  }\n\n  continue(point: TPoint): number\n  {\n    this.#logger.info(\"continue\", { point })\n    if (!this.interactElementsGroup) {\n      throw new Error(\"Can't rotate, you must call start before\")\n    }\n    let angleDegree = Math.round(convertRadianToDegree(computeAngleRadian(this.origin, this.center, point)))\n\n    angleDegree = this.editor.snaps.snapRotation(angleDegree)\n\n    if (point.x - this.center.x < 0) {\n      angleDegree = 360 - angleDegree\n    }\n\n    this.rotateElement(this.interactElementsGroup.id, angleDegree)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.rotateElement(s.id, angleDegree)\n    })\n    return angleDegree\n  }\n\n  async end(point: TPoint): Promise<void>\n  {\n    this.#logger.info(\"end\", { point })\n    const angleDegree = this.continue(point)\n    const angleRad = convertDegreeToRadian(angleDegree) % (2 * Math.PI)\n    const oldSymbols = this.model.symbolsSelected.map(s => s.clone())\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.applyToSymbol(s, this.center, angleRad)\n      this.editor.renderer.drawSymbol(s)\n      this.model.updateSymbol(s)\n    })\n    const strokesFromSymbols = this.editor.extractStrokesFromSymbols(this.model.symbolsSelected)\n    this.editor.recognizer.transformRotate(strokesFromSymbols.map(s => s.id), angleRad, this.center.x, this.center.y)\n    this.editor.history.push(this.model, { rotate: [{ symbols: oldSymbols, angle: angleRad, center: {...this.center}, }] })\n\n    this.interactElementsGroup = undefined\n    this.editor.svgDebugger.apply()\n  }\n}\n","\n/**\n * @group Grabber\n */\nexport type TListenerConfiguration = {\n  capture: boolean\n  passive: boolean\n}\n\n/**\n * @group Grabber\n * @source\n */\nexport const DefaultListenerConfiguration: TListenerConfiguration = {\n  capture: false,\n  passive: true\n}\n\n/**\n * @group Grabber\n */\nexport type TGrabberConfiguration = {\n  listenerOptions: TListenerConfiguration\n  xyFloatPrecision: number\n  timestampFloatPrecision: number\n  delayLongTouch: number\n}\n\n/**\n * @group Grabber\n * @source\n */\nexport const DefaultGrabberConfiguration: TGrabberConfiguration = {\n  listenerOptions: DefaultListenerConfiguration,\n  xyFloatPrecision: 0,\n  timestampFloatPrecision: 0,\n  delayLongTouch: 500\n}\n","import { TGrabberConfiguration } from \"./GrabberConfiguration\"\nimport { LoggerCategory, LoggerLevel, LoggerManager } from \"../logger\"\nimport { TPointer } from \"../symbol\"\n\nexport type PointerInfo = {\n  clientX: number,\n  clientY: number,\n  isPrimary: boolean,\n  type: string,\n  pointerType: string,\n  target: HTMLElement,\n  pointer: TPointer,\n  button: number,\n  buttons: number\n}\n\n/**\n * @group Grabber\n */\nexport class PointerEventGrabber\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.GRABBER)\n\n  protected configuration: TGrabberConfiguration\n  protected layerCapture!: HTMLElement\n  protected capturing: boolean = false\n  protected pointerType?: string\n  protected prevent = (e: Event) => e.preventDefault()\n\n  onPointerDown?: (info: PointerInfo) => void\n  onPointerMove?: (info: PointerInfo) => void\n  onPointerUp?: (info: PointerInfo) => void\n  onContextMenu?: (info: PointerInfo) => void\n\n  constructor(configuration: TGrabberConfiguration)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n  }\n\n  protected roundFloat(oneFloat: number, requestedFloatPrecision: number): number\n  {\n    if (requestedFloatPrecision >= 0) {\n      const floatPrecision: number = Math.pow(10, requestedFloatPrecision)\n      return Math.round(oneFloat / floatPrecision) * floatPrecision\n    }\n    this.#logger.debug(\"roundFloat\", { oneFloat, requestedFloatPrecision })\n    return oneFloat\n  }\n\n  protected extractPointer(event: MouseEvent | TouchEvent): TPointer\n  {\n    let clientX: number, clientY: number\n    if (\"changedTouches\" in event) {\n      ({ clientX, clientY } = event.changedTouches[0])\n    } else {\n      ({ clientX, clientY } = event)\n    }\n    const rect: DOMRect = this.layerCapture.getBoundingClientRect()\n    const pointer = {\n      x: this.roundFloat(clientX - rect.left - this.layerCapture.clientLeft + this.layerCapture.scrollLeft, this.configuration.xyFloatPrecision),\n      y: this.roundFloat(clientY - rect.top - this.layerCapture.clientTop + this.layerCapture.scrollTop, this.configuration.xyFloatPrecision),\n      t: this.roundFloat(Date.now(), this.configuration.timestampFloatPrecision),\n      p: (event as PointerEvent).pressure,\n    }\n    this.#logger.debug(\"extractPointer\", { event, pointer })\n    return pointer\n  }\n\n  protected getPointerInfos(evt: PointerEvent): PointerInfo\n  {\n    return {\n      clientX: evt.clientX,\n      clientY: evt.clientY,\n      isPrimary: evt.isPrimary,\n      type: evt.type,\n      target: evt.target as HTMLElement,\n      pointerType: evt.pointerType,\n      pointer: this.extractPointer(evt),\n      button: evt.button,\n      buttons: evt.buttons\n    }\n  }\n\n  protected pointerDownHandler = (evt: PointerEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt)\n    this.#logger.debug(\"pointerDownHandler\", pointerInfo)\n\n    // exit if not a left click or multi-touch\n    if (pointerInfo.button !== 0 || evt.buttons !== 1) {\n      return\n    }\n    this.capturing = true\n    this.pointerType = evt.pointerType\n\n    if (this.#logger.level === LoggerLevel.INFO) {\n      this.#logger.info(\"pointerDownHandler\", pointerInfo)\n    }\n\n    if (this.onPointerDown) {\n      this.onPointerDown(pointerInfo)\n    }\n  }\n\n  protected pointerMoveHandler = (evt: PointerEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt)\n    this.#logger.debug(\"pointerMoveHandler\", pointerInfo)\n    if (this.capturing && this.pointerType === evt.pointerType) {\n      if (this.#logger.level === LoggerLevel.INFO) {\n        this.#logger.info(\"pointerMoveHandler\", pointerInfo)\n      }\n      if (this.onPointerMove) {\n        this.onPointerMove(pointerInfo)\n      }\n    }\n  }\n\n  protected pointerUpHandler = (evt: PointerEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt)\n    this.#logger.debug(\"pointerUpHandler\", pointerInfo)\n    if (this.capturing && this.pointerType === evt.pointerType) {\n      if (this.#logger.level === LoggerLevel.INFO) {\n        this.#logger.info(\"pointerUpHandler\", pointerInfo)\n      }\n      this.pointerType = undefined\n      this.capturing = false\n      if (this.onPointerUp) {\n        this.onPointerUp(pointerInfo)\n      }\n    }\n  }\n\n  protected pointerOutHandler = (evt: PointerEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt)\n    this.#logger.debug(\"pointerOutHandler\", pointerInfo)\n    if (this.capturing && this.pointerType === evt.pointerType && !this.layerCapture.contains(evt.target as HTMLElement)) {\n      if (this.#logger.level === LoggerLevel.INFO) {\n        this.#logger.info(\"pointerOutHandler\", pointerInfo)\n      }\n      this.pointerType = undefined\n      this.capturing = false\n      if (this.onPointerUp) {\n        this.onPointerUp(pointerInfo)\n      }\n    }\n  }\n\n  protected contextMenuHandler = (evt: MouseEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt as PointerEvent)\n    this.#logger.debug(\"contextMenuHandler\", pointerInfo)\n    if (evt.target && this.onContextMenu){\n      if (this.#logger.level === LoggerLevel.INFO) {\n        this.#logger.info(\"contextMenuHandler\", pointerInfo)\n      }\n      this.onContextMenu(pointerInfo)\n    }\n  }\n\n  stopPointerEvent(): void\n  {\n    this.capturing = false\n    this.pointerType = undefined\n  }\n\n  attach(layerCapture: HTMLElement)\n  {\n    this.#logger.info(\"attach\", { domElement: layerCapture })\n    if (this.layerCapture) {\n      this.detach()\n    }\n    this.layerCapture = layerCapture\n    // The touch-action CSS property prevents the input from continuing.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event\n    this.layerCapture.style.setProperty(\"touch-action\", \"none\")\n    this.layerCapture.addEventListener(\"pointerdown\", this.pointerDownHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointermove\", this.pointerMoveHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointerup\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointercancel\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointerleave\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointerout\", this.pointerOutHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"contextmenu\", this.contextMenuHandler)\n  }\n\n  detach()\n  {\n    this.#logger.info(\"detach\")\n    this.layerCapture?.style.removeProperty(\"touch-action\")\n    this.layerCapture?.removeEventListener(\"pointerdown\", this.pointerDownHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointermove\", this.pointerMoveHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointerup\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointerleave\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointercancel\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointerout\", this.pointerOutHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"contextmenu\", this.contextMenuHandler)\n  }\n}\n","import { ResizeDirection, SELECTION_MARGIN, SvgElementRole } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { Box, IIText, SymbolType, TBox, TIIEdge, TIISymbol, TPoint } from \"../symbol\"\nimport { IISVGRenderer, SVGBuilder } from \"../renderer\"\nimport { IIResizeManager } from \"./IIResizeManager\"\nimport { IIRotationManager } from \"./IIRotationManager\"\nimport { IITranslateManager } from \"./IITranslateManager\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\n\n/**\n * @group Manager\n */\nexport class IISelectionManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.SELECTION)\n  grabber: PointerEventGrabber\n  editor: InteractiveInkEditor\n\n  #selectingId = \"selecting-rect\"\n  startSelectionPoint?: TPoint\n  endSelectionPoint?: TPoint\n  selectedGroup?: SVGGElement\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.grabber = new PointerEventGrabber(editor.configuration.grabber)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n    this.grabber.onContextMenu = this.onContextMenu.bind(this)\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): IISVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get rotator(): IIRotationManager\n  {\n    return this.editor.rotator\n  }\n\n  get translator(): IITranslateManager\n  {\n    return this.editor.translator\n  }\n\n  get resizer(): IIResizeManager\n  {\n    return this.editor.resizer\n  }\n\n  get selectionBox(): Box | undefined\n  {\n    if (this.startSelectionPoint && this.endSelectionPoint) {\n      return Box.createFromPoints([this.startSelectionPoint, this.endSelectionPoint])\n    }\n    return\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.removeSelectedGroup()\n    this.grabber.attach(layer)\n  }\n\n  detach(): void\n  {\n    this.removeSelectedGroup()\n    this.grabber.detach()\n  }\n\n  drawSelectingRect(box: TBox): void\n  {\n    this.clearSelectingRect()\n    const attrs = {\n      id: this.#selectingId,\n      fill: \"transparent\",\n      stroke: \"grey\",\n      opacity: \"0.25\",\n    }\n    this.renderer.appendElement(SVGBuilder.createRect(box, attrs))\n  }\n\n  clearSelectingRect(): void\n  {\n    this.renderer.clearElements({ attrs: { id: this.#selectingId } })\n  }\n\n  protected getPoint(ev: PointerEvent): TPoint\n  {\n    const { clientLeft, scrollLeft, clientTop, scrollTop } = this.renderer.parent\n    const rect: DOMRect = this.renderer.parent.getBoundingClientRect()\n    return {\n      x: ev.clientX - rect.left - clientLeft + scrollLeft,\n      y: ev.clientY - rect.top - clientTop + scrollTop,\n    }\n  }\n\n  protected createTranslateRect(box: TBox): SVGRectElement\n  {\n    const attrs = {\n      role: SvgElementRole.Translate,\n      style: \"cursor:move\",\n      fill: \"transparent\",\n      stroke: \"transparent\",\n    }\n    const boxWithMarge: TBox = {\n      height: box.height,\n      width: box.width,\n      x: box.x,\n      y: box.y\n    }\n    const translateEl = SVGBuilder.createRect(boxWithMarge, attrs)\n    const handler = (ev: PointerEvent) =>\n    {\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.translator.continue(this.getPoint(ev))\n    }\n    const endHandler = (ev: PointerEvent) =>\n    {\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.translator.end(this.getPoint(ev))\n      this.renderer.layer.removeEventListener(\"pointermove\", handler)\n      this.renderer.layer.removeEventListener(\"pointercancel\", endHandler)\n      this.renderer.layer.removeEventListener(\"pointerleave\", endHandler)\n      this.renderer.layer.removeEventListener(\"pointerup\", endHandler)\n      this.renderer.layer.style.cursor = \"\"\n      this.resetSelectedGroup(this.model.symbolsSelected)\n    }\n\n    translateEl.addEventListener(\"pointerdown\", (ev) =>\n    {\n      if (ev.button !== 0 || ev.buttons !== 1) {\n        return\n      }\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.hideInteractElements()\n      this.translator.start(ev.target as Element, this.getPoint(ev))\n      this.renderer.layer.addEventListener(\"pointermove\", handler)\n      this.renderer.layer.addEventListener(\"pointercancel\", endHandler)\n      this.renderer.layer.addEventListener(\"pointerleave\", endHandler)\n      this.renderer.layer.addEventListener(\"pointerup\", endHandler)\n\n      this.renderer.layer.style.cursor = \"move\"\n    })\n    return translateEl\n  }\n\n  protected createRotateGroup(box: TBox): SVGGElement\n  {\n    const group = SVGBuilder.createGroup({\n      role: SvgElementRole.Rotate,\n      \"vector-effect\": \"non-scaling-size\",\n      \"style\": \"cursor:pointer;\",\n      \"opacity\": \"1\",\n    })\n    const radius = 8\n    const center: TPoint = {\n      x: (box.x + box.width / 2),\n      y: box.y - 4 * SELECTION_MARGIN\n    }\n    const attrs1 = {\n      role: SvgElementRole.Rotate,\n      \"stroke-width\": \"2\",\n      \"stroke\": \"black\",\n      fill: \"white\",\n    }\n    group.appendChild(SVGBuilder.createCircle(center, radius, attrs1))\n\n    const attrs2 = {\n      role: SvgElementRole.Rotate,\n      fill: \"black\",\n    }\n\n    group.appendChild(SVGBuilder.createCircle(center, radius / 2, attrs2))\n    const attrs3 = {\n      role: SvgElementRole.Rotate,\n      stroke: \"black\",\n      \"stroke-width\": \"2\"\n    }\n    group.appendChild(SVGBuilder.createLine({ x: center.x, y: center.y + radius }, { x: center.x, y: box.y - SELECTION_MARGIN }, attrs3))\n\n    const handler = (ev: PointerEvent) =>\n    {\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.rotator.continue(this.getPoint(ev))\n    }\n    const endHandler = (ev: PointerEvent) =>\n    {\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.rotator.end(this.getPoint(ev))\n      this.renderer.layer.removeEventListener(\"pointermove\", handler)\n      this.renderer.layer.removeEventListener(\"pointercancel\", endHandler)\n      this.renderer.layer.removeEventListener(\"pointerleave\", endHandler)\n      this.renderer.layer.removeEventListener(\"pointerup\", endHandler)\n      this.resetSelectedGroup(this.model.symbolsSelected)\n    }\n\n    group.addEventListener(\"pointerdown\", (ev) =>\n    {\n      if (ev.button !== 0 || ev.buttons !== 1) {\n        return\n      }\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.hideInteractElements()\n      this.rotator.start(ev.target as Element, this.getPoint(ev))\n      this.renderer.layer.addEventListener(\"pointermove\", handler)\n      this.renderer.layer.addEventListener(\"pointercancel\", endHandler)\n      this.renderer.layer.addEventListener(\"pointerleave\", endHandler)\n      this.renderer.layer.addEventListener(\"pointerup\", endHandler)\n    })\n    return group\n  }\n\n  protected createResizeGroup(box: TBox): SVGGElement\n  {\n    const group = SVGBuilder.createGroup({\n      role: SvgElementRole.Resize,\n      \"vector-effect\": \"non-scaling-size\",\n      \"stroke-width\": \"4\",\n      \"stroke\": \"#3e68ff\",\n    })\n    const P_NW: TPoint = { x: box.x - SELECTION_MARGIN, y: box.y - SELECTION_MARGIN }\n    const P_NE: TPoint = { x: box.x + box.width + SELECTION_MARGIN, y: box.y - SELECTION_MARGIN }\n    const P_SE: TPoint = { x: box.x + box.width + SELECTION_MARGIN, y: box.y + box.height + SELECTION_MARGIN }\n    const P_SW: TPoint = { x: box.x - SELECTION_MARGIN, y: box.y + box.height + SELECTION_MARGIN }\n\n    const bindEl = (el: SVGElement, transformOrigin: TPoint, cursor: string) =>\n    {\n      const handler = (ev: PointerEvent) =>\n      {\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.resizer.continue(this.getPoint(ev))\n      }\n      const endHandler = (ev: PointerEvent) =>\n      {\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.resizer.end(this.getPoint(ev))\n        this.renderer.layer.removeEventListener(\"pointermove\", handler)\n        this.renderer.layer.removeEventListener(\"pointercancel\", endHandler)\n        this.renderer.layer.removeEventListener(\"pointerleave\", endHandler)\n        this.renderer.layer.removeEventListener(\"pointerup\", endHandler)\n\n        this.renderer.layer.style.cursor = \"\"\n        this.resetSelectedGroup(this.model.symbolsSelected)\n      }\n\n      el.addEventListener(\"pointerdown\", (ev) =>\n      {\n        if (ev.button !== 0 || ev.buttons !== 1) {\n          return\n        }\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.hideInteractElements()\n        this.renderer.layer.style.cursor = cursor\n        this.resizer.start(ev.target as Element, transformOrigin)\n        this.renderer.layer.addEventListener(\"pointermove\", handler)\n        this.renderer.layer.addEventListener(\"pointercancel\", endHandler)\n        this.renderer.layer.addEventListener(\"pointerleave\", endHandler)\n        this.renderer.layer.addEventListener(\"pointerup\", endHandler)\n      })\n    }\n\n    const sideResizeDefs = [\n      { direction: ResizeDirection.North, p1: P_NW, p2: P_NE, transformOrigin: { x: box.x + box.width / 2, y: box.y + box.height } },\n      { direction: ResizeDirection.East, p1: P_NE, p2: P_SE, transformOrigin: { x: box.x, y: box.y + box.height / 2 } },\n      { direction: ResizeDirection.South, p1: P_SW, p2: P_SE, transformOrigin: { x: box.x + box.width / 2, y: box.y } },\n      { direction: ResizeDirection.West, p1: P_NW, p2: P_SW, transformOrigin: { x: box.x + box.width, y: box.y + box.height / 2 } },\n    ]\n    sideResizeDefs.forEach(def =>\n    {\n      const attrs = {\n        role: SvgElementRole.Resize,\n        \"resize-direction\": def.direction,\n        \"transform-origin\": JSON.stringify(def.transformOrigin),\n        style: `cursor:${ def.direction };`\n      }\n      const lineResize = SVGBuilder.createLine(def.p1, def.p2, attrs)\n      bindEl(lineResize, def.transformOrigin, def.direction)\n      group.appendChild(lineResize)\n    })\n    const cornerResizeDefs = [\n      { direction: ResizeDirection.NorthWest, p: P_NW, transformOrigin: { x: box.x + box.width, y: box.y + box.height } },\n      { direction: ResizeDirection.NorthEast, p: P_NE, transformOrigin: { x: box.x, y: box.y + box.height } },\n      { direction: ResizeDirection.SouthEast, p: P_SE, transformOrigin: { x: box.x, y: box.y } },\n      { direction: ResizeDirection.SouthWest, p: P_SW, transformOrigin: { x: box.x + box.width, y: box.y } },\n    ]\n    cornerResizeDefs.forEach(def =>\n    {\n      const attrs = {\n        \"stroke-width\": \"4\",\n        role: SvgElementRole.Resize,\n        \"resize-direction\": def.direction,\n        \"transform-origin\": JSON.stringify(def.transformOrigin),\n        transform: \"scale(1, 1)\",\n        fill: \"white\",\n        style: `cursor:${ def.direction };`\n      }\n      const cornerResize = SVGBuilder.createCircle(def.p, 5, attrs)\n      bindEl(cornerResize, def.transformOrigin, def.direction)\n      group.appendChild(cornerResize)\n    })\n    return group\n  }\n\n  protected createInteractElementsGroup(symbols: TIISymbol[]): SVGGElement | undefined\n  {\n    this.#logger.info(\"createInteractElementsGroup\", { symbols })\n\n    if (!symbols.length) return\n\n    const symbolElementMap = symbols.map(s =>\n    {\n      return {\n        symbol: s,\n        element: this.renderer.getElementById(s.id),\n      }\n    })\n\n    const box1 = Box.createFromBoxes(symbols.map(s =>\n    {\n      return {\n        x: s.bounds.x - (s.style.width || 1),\n        y: s.bounds.y - (s.style.width || 1),\n        height: s.bounds.height + (s.style.width || 1) * 2,\n        width: s.bounds.width + (s.style.width || 1) * 2,\n      }\n    }))\n\n    const box2 = Box.createFromPoints(symbols.flatMap(s => s.vertices))\n    const box = Box.createFromBoxes([box1, box2])\n\n    const attrs = {\n      id: `selected-${ Date.now() }`,\n      role: SvgElementRole.InteractElementsGroup,\n    }\n    const surroundGroup = SVGBuilder.createGroup(attrs)\n    surroundGroup.appendChild(this.createTranslateRect(box))\n    surroundGroup.appendChild(this.createResizeGroup(box))\n    surroundGroup.appendChild(this.createRotateGroup(box))\n    const SURROUND_ATTRS = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"#3e68ff\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"4\",\n      \"vector-effect\": \"non-scaling-size\",\n      transform: \"rotate(0, 0, 0)\"\n    }\n    symbolElementMap.forEach(s =>\n    {\n      if (s.element) {\n        const bounds: TBox = {\n          x: s.symbol.bounds.x - (s.symbol.style.width || 1),\n          y: s.symbol.bounds.y - (s.symbol.style.width || 1),\n          height: s.symbol.bounds.height + (s.symbol.style.width || 1) * 2,\n          width: s.symbol.bounds.width + (s.symbol.style.width || 1) * 2,\n        }\n        if (s.symbol.type === SymbolType.Text) {\n          const t = s.symbol as IIText\n          SURROUND_ATTRS.transform = `rotate(${ t.rotation?.degree || 0 }, ${ t.rotation?.center.x || 0 }, ${ t.rotation?.center.y || 0 })`\n        }\n        else {\n          SURROUND_ATTRS.transform = \"rotate(0, 0, 0)\"\n        }\n        surroundGroup.prepend(SVGBuilder.createRect(bounds, SURROUND_ATTRS))\n      }\n    })\n    return surroundGroup\n  }\n\n  protected createEdgeResizeGroup(edge: TIIEdge): SVGGElement\n  {\n    const group = SVGBuilder.createGroup({\n      role: SvgElementRole.Resize,\n      \"vector-effect\": \"non-scaling-size\",\n      \"stroke-width\": \"4\",\n      \"stroke\": \"#3e68ff\",\n    })\n\n    const radius = 5\n    const attrs = {\n      role: SvgElementRole.Resize,\n      \"stroke-width\": \"4\",\n      \"stroke\": \"#3e68ff\",\n      fill: \"white\",\n      style: `cursor:grab;`\n    }\n    const bindEl = (el: SVGCircleElement, pointIndex: number) =>\n    {\n      const handler = (ev: PointerEvent) =>\n      {\n        ev.preventDefault()\n        ev.stopPropagation()\n        const point = this.getPoint(ev)\n        const { x, y } = this.editor.snaps.snapResize(point)\n        edge.vertices[pointIndex].x = x\n        edge.vertices[pointIndex].y = y\n        this.model.updateSymbol(edge)\n        this.renderer.drawSymbol(edge)\n      }\n      const endHandler = (ev: PointerEvent) =>\n      {\n        ev.preventDefault()\n        ev.stopPropagation()\n        const point = this.getPoint(ev)\n        const { x, y } = this.editor.snaps.snapResize(point)\n        edge.vertices[pointIndex].x = x\n        edge.vertices[pointIndex].y = y\n        this.renderer.layer.style.cursor = \"\"\n        this.editor.updateSymbol(edge)\n        this.renderer.layer.removeEventListener(\"pointermove\", handler)\n        this.renderer.layer.removeEventListener(\"pointercancel\", endHandler)\n        this.renderer.layer.removeEventListener(\"pointerleave\", endHandler)\n        this.renderer.layer.removeEventListener(\"pointerup\", endHandler)\n        this.editor.snaps.clearSnapToElementLines()\n        this.resetSelectedGroup(this.model.symbolsSelected)\n      }\n\n      el.addEventListener(\"pointerdown\", (ev) =>\n      {\n        if (ev.button !== 0 || ev.buttons !== 1) {\n          return\n        }\n        this.renderer.layer.style.cursor = \"grabbing\"\n        this.hideInteractElements()\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.renderer.layer.addEventListener(\"pointermove\", handler)\n        this.renderer.layer.addEventListener(\"pointercancel\", endHandler)\n        this.renderer.layer.addEventListener(\"pointerleave\", endHandler)\n        this.renderer.layer.addEventListener(\"pointerup\", endHandler)\n      })\n    }\n    edge.vertices.forEach((p, i) =>\n    {\n      const pointEl = SVGBuilder.createCircle(p, radius, attrs)\n      bindEl(pointEl, i)\n      group.appendChild(pointEl)\n    })\n\n    return group\n  }\n\n  protected createInteractEdgeGroup(edge: TIIEdge): SVGGElement | undefined\n  {\n    this.#logger.info(\"createInteractEdgeGroup\", { edge })\n    const attrs = {\n      id: `selected-${ Date.now() }`,\n      role: SvgElementRole.InteractElementsGroup,\n    }\n    const surroundGroup = SVGBuilder.createGroup(attrs)\n    surroundGroup.appendChild(this.createTranslateRect(edge.bounds))\n    surroundGroup.appendChild(this.createEdgeResizeGroup(edge.clone()))\n    return surroundGroup\n  }\n\n  drawSelectedGroup(symbols: TIISymbol[]): void\n  {\n    if (!symbols.length) return\n    if (symbols.length === 1 && symbols[0].type === SymbolType.Edge) {\n      this.selectedGroup = this.createInteractEdgeGroup(symbols[0] as TIIEdge)\n    }\n    else {\n      this.selectedGroup = this.createInteractElementsGroup(symbols)\n    }\n    if (this.selectedGroup) {\n      this.renderer.layer.appendChild(this.selectedGroup)\n      const groupBox = this.selectedGroup.getBBox()\n      this.editor.menu.context.position.x = groupBox.x + groupBox.width / 2 - this.renderer.parent.clientLeft\n      this.editor.menu.context.position.y = groupBox.y + groupBox.height - this.renderer.parent.clientTop\n      this.editor.menu.context.show()\n    }\n    this.editor.menu.update()\n  }\n\n  resetSelectedGroup(symbols: TIISymbol[]): void\n  {\n    this.#logger.info(\"resetSelectedGroup\", { symbols })\n    this.removeSelectedGroup()\n    this.drawSelectedGroup(symbols)\n  }\n\n  removeSelectedGroup(): void\n  {\n    this.#logger.info(\"removeSelectedGroup\")\n    this.editor.menu.context.hide()\n    this.selectedGroup?.remove()\n    this.selectedGroup = undefined\n  }\n\n  hideInteractElements(): void\n  {\n    this.editor.menu.context.hide()\n    const query = `[role=${ SvgElementRole.Resize }],[role=${ SvgElementRole.Rotate }],[role=${ SvgElementRole.Translate }]`\n    this.selectedGroup?.querySelectorAll(query)\n      .forEach(el =>\n      {\n        el.setAttribute(\"visibility\", \"hidden\")\n      })\n  }\n\n  start(info: PointerInfo): void\n  {\n    this.removeSelectedGroup()\n    this.startSelectionPoint = info.pointer\n    this.endSelectionPoint = info.pointer\n    this.drawSelectingRect(this.selectionBox!)\n  }\n\n  continue(info: PointerInfo): TIISymbol[]\n  {\n    if (!this.startSelectionPoint) {\n      throw new Error(\"You need to call startSelectionByBox before\")\n    }\n    this.endSelectionPoint = info.pointer\n    const updatedSymbols: TIISymbol[] = []\n    this.model.symbols.forEach(s =>\n    {\n      if (s.selected !== s.overlaps(this.selectionBox!)) {\n        s.selected = s.overlaps(this.selectionBox!)\n        updatedSymbols.push(s)\n        this.renderer.drawSymbol(s)\n      }\n    })\n    this.drawSelectingRect(this.selectionBox!)\n    return updatedSymbols\n  }\n\n  end(info: PointerInfo): TIISymbol[]\n  {\n    const updatedSymbols = this.continue(info)\n    this.startSelectionPoint = undefined\n    this.endSelectionPoint = undefined\n    this.clearSelectingRect()\n    this.drawSelectedGroup(this.model.symbolsSelected)\n    this.editor.event.emitSelected(this.model.symbolsSelected)\n    this.editor.menu.style.update()\n    return updatedSymbols\n  }\n\n  protected async onContextMenu(info: PointerInfo): Promise<void>\n  {\n    let found = false\n    let currentEl = info.target as HTMLElement | null\n    const symbolTypesAllowed = [SymbolType.Edge.toString(), SymbolType.Shape.toString(), SymbolType.Stroke.toString(), SymbolType.Text.toString()]\n    while (currentEl && currentEl.tagName !== \"svg\" && !found) {\n      if (symbolTypesAllowed.includes(currentEl.getAttribute(\"type\") as string)) {\n        found = true\n      }\n      else {\n        currentEl = currentEl.parentElement\n      }\n    }\n    this.editor.unselectAll()\n    if (currentEl?.id) {\n      this.model.selectSymbol(currentEl.id)\n      this.renderer.drawSymbol(this.model.symbolsSelected[0])\n      this.drawSelectedGroup(this.model.symbolsSelected)\n      this.editor.updateLayerUI()\n    }\n    else {\n      this.editor.menu.context.position.x = info.pointer.x + this.renderer.parent.clientLeft\n      this.editor.menu.context.position.y = info.pointer.y + this.renderer.parent.clientTop\n      this.editor.menu.context.show()\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { Box, IIText, SymbolType, TIISymbol, TIISymbolChar } from \"../symbol\"\nimport { IISVGRenderer } from \"../renderer\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\n\n/**\n * @group Manager\n */\nexport class IITextManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.CONVERTER)\n  editor: InteractiveInkEditor\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get renderer(): IISVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get rowHeight(): number\n  {\n    return this.editor.configuration.rendering.guides.gap\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  protected drawSymbolHidden(text: IIText): SVGGElement\n  {\n    const clone = text.clone()\n    clone.id = \"text-to-measure\"\n    clone.chars.forEach(c => c.id += \"-to-measure\")\n    clone.decorators = []\n    this.renderer.layer.querySelector(`#${ clone.id }`)?.remove()\n    const el = this.renderer.buildElementFromSymbol(clone)!\n    el.setAttribute(\"visibility\", \"hidden\")\n    this.renderer.prependElement(el)\n    return el\n  }\n\n  setCharsBounds(text: IIText, textGroupEl: SVGGElement): IIText\n  {\n    const textEl = textGroupEl.querySelector(\"text\")\n    if (textEl) {\n      for (let i = 0; i < textEl.getNumberOfChars(); i++) {\n        const char = text.chars.at(i)\n        if (char) {\n          const ext = textEl.getExtentOfChar(i)\n          char.bounds = new Box(ext)\n        }\n      }\n    }\n    return text\n  }\n\n  setBounds(text: IIText): void\n  {\n    const element = this.drawSymbolHidden(text)\n    text.bounds = this.getElementBoundingBox(element)\n    this.setCharsBounds(text, element)\n  }\n\n  getElementBoundingBox(textElement: SVGElement): Box\n  {\n    return new Box(textElement.querySelector(\"text\")!.getBBox({ stroke: true, markers: true, clipped: true, fill: true }))\n  }\n\n  getBoundingBox(text: IIText): Box\n  {\n    const element = this.drawSymbolHidden(text)\n    return this.getElementBoundingBox(element)\n  }\n\n  getSpaceWidth(fontSize: number): number\n  {\n    const boundingBox = new Box({ height: 0, width: 0, x: 0, y: 0 })\n    const charSymbol: TIISymbolChar = {\n      id: `text-char-space`,\n      label: \"-\",\n      color: \"\",\n      fontSize,\n      fontWeight: \"normal\",\n      bounds: boundingBox\n    }\n    return this.getBoundingBox(new IIText([charSymbol], { x: 0, y: 0 }, boundingBox))?.width as number\n  }\n\n  updateBounds(textSymbol: IIText): IIText\n  {\n    this.setBounds(textSymbol)\n    this.model.updateSymbol(textSymbol)\n    return textSymbol\n  }\n\n  moveTextAfter(text: IIText, tx: number): TIISymbol[] | undefined\n  {\n    const row = this.model.getSymbolsByRowOrdered().find(r => r.rowIndex === this.model.getSymbolRowIndex(text))\n    if (row) {\n      const textsAfter = row.symbols.filter(s => s.type === SymbolType.Text && s.bounds.xMid > text.bounds.xMid) as IIText[]\n      textsAfter.forEach(symbol => {\n        symbol.point.x += tx\n        this.updateBounds(symbol)\n        this.model.updateSymbol(symbol)\n        this.renderer.drawSymbol(symbol)\n      })\n      return textsAfter\n    }\n    return\n  }\n}\n","import { SvgElementRole } from \"../Constants\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  EdgeKind,\n  IIStroke,\n  IIText,\n  IISymbolGroup,\n  ShapeKind,\n  SymbolType,\n  TIIEdge,\n  TIIShape,\n  TIISymbol,\n  TPoint,\n  TIIRecognized,\n  RecognizedKind\n} from \"../symbol\"\n\n/**\n * @group Manager\n */\nexport class IITranslateManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.TRANSFORMER)\n  editor: InteractiveInkEditor\n  interactElementsGroup?: SVGElement\n  transformOrigin!: TPoint\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  protected applyToStroke(stroke: IIStroke, tx: number, ty: number): IIStroke\n  {\n    stroke.pointers.forEach(p =>\n    {\n      p.x += tx\n      p.y += ty\n    })\n    return stroke\n  }\n\n  protected applyToShape(shape: TIIShape, tx: number, ty: number): TIIShape\n  {\n    switch (shape.kind) {\n      case ShapeKind.Ellipse:\n      case ShapeKind.Circle: {\n        shape.center.x += tx\n        shape.center.y += ty\n        return shape\n      }\n      case ShapeKind.Polygon: {\n        shape.points.forEach(p =>\n        {\n          p.x += tx\n          p.y += ty\n        })\n        return shape\n      }\n      default:\n        throw new Error(`Can't apply translate on shape, kind unknow: ${ JSON.stringify(shape) }`)\n    }\n  }\n\n  protected applyToEdge(edge: TIIEdge, tx: number, ty: number): TIIEdge\n  {\n    switch (edge.kind) {\n      case EdgeKind.Arc: {\n        edge.center.x += tx\n        edge.center.y += ty\n        return edge\n      }\n      case EdgeKind.Line: {\n        edge.start.x += tx\n        edge.start.y += ty\n        edge.end.x += tx\n        edge.end.y += ty\n        return edge\n      }\n      case EdgeKind.PolyEdge: {\n        edge.points.forEach(p =>\n        {\n          p.x += tx\n          p.y += ty\n        })\n        return edge\n      }\n    }\n\n    return edge\n  }\n\n  protected applyOnText(text: IIText, tx: number, ty: number): IIText\n  {\n    if (text.rotation) {\n      text.rotation.center = { x: text.rotation.center.x + tx, y: text.rotation.center.y + ty }\n    }\n    text.point.x += tx\n    text.point.y += ty\n    return this.editor.texter.updateBounds(text)\n  }\n\n  protected applyOnGroup(group: IISymbolGroup, tx: number, ty: number): IISymbolGroup\n  {\n    group.children.forEach(s => this.applyToSymbol(s, tx, ty))\n    return group\n  }\n\n  protected applyOnRecognizedSymbol(recognizedSymbol: TIIRecognized, tx: number, ty: number): TIIRecognized\n  {\n    recognizedSymbol.strokes.forEach(s => this.applyToStroke(s, tx, ty))\n    if (recognizedSymbol.kind === RecognizedKind.Text) {\n      recognizedSymbol.baseline += ty\n    }\n    return recognizedSymbol\n  }\n\n  applyToSymbol(symbol: TIISymbol, tx: number, ty: number): TIISymbol\n  {\n    this.#logger.info(\"applyToSymbol\", { symbol, tx, ty })\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        return this.applyToStroke(symbol, tx, ty)\n      case SymbolType.Shape:\n        return this.applyToShape(symbol, tx, ty)\n      case SymbolType.Edge:\n        return this.applyToEdge(symbol, tx, ty)\n      case SymbolType.Text:\n        return this.applyOnText(symbol, tx, ty)\n      case SymbolType.Group:\n        return this.applyOnGroup(symbol, tx, ty)\n      case SymbolType.Recognized:\n        return this.applyOnRecognizedSymbol(symbol, tx, ty)\n      default:\n        throw new Error(`Can't apply translate on symbol, type unknow: ${ JSON.stringify(symbol) }`)\n    }\n  }\n\n  translate(symbols: TIISymbol[], tx: number, ty: number, addToHistory = true): Promise<void>\n  {\n    this.#logger.info(\"translate\", { symbols, tx, ty })\n    symbols.forEach(s =>\n    {\n      this.applyToSymbol(s, tx, ty)\n      this.model.updateSymbol(s)\n      this.editor.renderer.drawSymbol(s)\n    })\n    if (addToHistory) {\n      this.editor.history.push(this.model, { translate: [{ symbols: this.model.symbolsSelected, tx, ty }] })\n    }\n    const strokes = this.editor.extractStrokesFromSymbols(symbols)\n    return this.editor.recognizer.transformTranslate(strokes.map(s => s.id), tx, ty)\n  }\n\n  translateElement(id: string, tx: number, ty: number): void\n  {\n    this.#logger.info(\"translateElement\", { id, tx, ty })\n    this.editor.renderer.setAttribute(id, \"transform\", `translate(${ tx },${ ty })`)\n  }\n\n  start(target: Element, origin: TPoint): void\n  {\n    this.#logger.info(\"start\", { origin })\n    this.interactElementsGroup = (target.closest(`[role=${ SvgElementRole.InteractElementsGroup }]`) as unknown) as SVGGElement\n    this.transformOrigin = origin\n  }\n\n  continue(point: TPoint): { tx: number, ty: number }\n  {\n    this.#logger.info(\"continue\", { point })\n    if (!this.interactElementsGroup) {\n      throw new Error(\"Can't translate, you must call start before\")\n    }\n\n    let tx = point.x - this.transformOrigin.x\n    let ty = point.y - this.transformOrigin.y\n\n    const nudge = this.editor.snaps.snapTranslate(tx, ty)\n    tx = nudge.x\n    ty = nudge.y\n\n    this.translateElement(this.interactElementsGroup.id as string, tx, ty)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.translateElement(s.id as string, tx, ty)\n    })\n    return {\n      tx,\n      ty\n    }\n  }\n\n  async end(point: TPoint): Promise<void>\n  {\n    this.#logger.info(\"end\", { point })\n    const { tx, ty } = this.continue(point)\n    this.editor.snaps.clearSnapToElementLines()\n    this.translate(this.model.symbolsSelected, tx, ty)\n\n    this.interactElementsGroup = undefined\n    this.editor.svgDebugger.apply()\n  }\n\n}\n","import { SELECTION_MARGIN, EditorWriteTool } from \"../Constants\"\nimport { TGesture } from \"../gesture\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  EdgeDecoration,\n  EdgeKind,\n  IIEdgeLine,\n  IIShapePolygon,\n  IIShapeCircle,\n  IIShapeEllipse,\n  IIStroke,\n  SymbolType,\n  TIIEdge,\n  TIISymbol,\n  TPoint,\n  TPointer\n} from \"../symbol\"\nimport { RecognizerWebSocket } from \"../recognizer\"\nimport { IISVGRenderer } from \"../renderer\"\nimport { TStyle } from \"../style\"\nimport { IIHistoryManager } from \"../history\"\nimport { IIGestureManager } from \"../gesture/IIGestureManager\"\nimport { IISnapManager } from \"../snap/IISnapManager\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\n\n\n/**\n * @group Manager\n */\nexport class IIWriteManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.WRITE)\n  grabber: PointerEventGrabber\n  editor: InteractiveInkEditor\n\n  #tool: EditorWriteTool = EditorWriteTool.Pencil\n  detectGesture: boolean = true\n\n  currentSymbolOrigin?: TPoint\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.grabber = new PointerEventGrabber(editor.configuration.grabber)\n  }\n\n  get tool(): EditorWriteTool\n  {\n    return this.#tool\n  }\n  set tool(wt: EditorWriteTool)\n  {\n    this.#tool = wt\n    if (wt !== EditorWriteTool.Pencil) {\n      this.editor.layers.root.classList.add(\"shape\")\n    }\n    else {\n      this.editor.layers.root.classList.remove(\"shape\")\n    }\n    this.editor.unselectAll()\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): IISVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get history(): IIHistoryManager\n  {\n    return this.editor.history\n  }\n\n  get gestureManager(): IIGestureManager\n  {\n    return this.editor.gesture\n  }\n\n  get snaps(): IISnapManager\n  {\n    return this.editor.snaps\n  }\n\n  get recognizer(): RecognizerWebSocket\n  {\n    return this.editor.recognizer\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.grabber.attach(layer)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n  }\n\n  detach(): void\n  {\n    this.grabber.detach()\n  }\n\n  protected needContextLessGesture(stroke: IIStroke): boolean\n  {\n    const strokeBoundsWithMargin = this.editor.getSymbolsBounds([stroke], 2 * SELECTION_MARGIN)\n    return this.detectGesture && this.model.symbols.some(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Recognized:\n        case SymbolType.Stroke:\n          return false\n        case SymbolType.Group:\n          if (s.containsOnlyStroke()) {\n            return false\n          }\n          else {\n            return s.bounds.overlaps(strokeBoundsWithMargin)\n          }\n        default:\n          return s.bounds.overlaps(strokeBoundsWithMargin)\n      }\n    })\n  }\n\n  protected createCurrentSymbol(pointer: TPointer, style: TStyle, pointerType: string): TIISymbol\n  {\n    this.#logger.debug(\"createCurrentSymbol\", { pointer, style, pointerType })\n\n    switch (this.tool) {\n      case EditorWriteTool.Pencil:\n        this.model.currentSymbol = new IIStroke(style, pointerType)\n        break\n      case EditorWriteTool.Rectangle:\n        this.model.currentSymbol = IIShapePolygon.createRectangleBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Triangle:\n        this.model.currentSymbol = IIShapePolygon.createTriangleBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Parallelogram:\n        this.model.currentSymbol = IIShapePolygon.createParallelogramBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Rhombus:\n        this.model.currentSymbol = IIShapePolygon.createRhombusBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Circle:\n        this.model.currentSymbol = IIShapeCircle.createBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Ellipse:\n        this.model.currentSymbol = IIShapeEllipse.createBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Line:\n      case EditorWriteTool.Arrow:\n      case EditorWriteTool.DoubleArrow: {\n        let startDecoration, endDecoration\n        if (this.tool === EditorWriteTool.Arrow) {\n          endDecoration = EdgeDecoration.Arrow\n        }\n        else if (this.tool === EditorWriteTool.DoubleArrow) {\n          startDecoration = EdgeDecoration.Arrow\n          endDecoration = EdgeDecoration.Arrow\n        }\n        this.model.currentSymbol = new IIEdgeLine(pointer, pointer, startDecoration, endDecoration, style)\n        break\n      }\n      default:\n        throw new Error(`Can't create symbol, tool is unknow: \"${ this.tool }\"`)\n    }\n    return this.updateCurrentSymbol(pointer)\n  }\n\n  protected updateCurrentSymbolShape(pointer: TPointer): void\n  {\n    switch (this.tool) {\n      case EditorWriteTool.Rectangle:\n        IIShapePolygon.updateRectangleBetweenPoints(this.model.currentSymbol as IIShapePolygon, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Triangle:\n        IIShapePolygon.updateTriangleBetweenPoints(this.model.currentSymbol as IIShapePolygon, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Parallelogram:\n        IIShapePolygon.updateParallelogramBetweenPoints(this.model.currentSymbol as IIShapePolygon, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Rhombus:\n        IIShapePolygon.updateRhombusBetweenPoints(this.model.currentSymbol as IIShapePolygon, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Circle:\n        IIShapeCircle.updateBetweenPoints(this.model.currentSymbol as IIShapeCircle, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Ellipse:\n        IIShapeEllipse.updateBetweenPoints(this.model.currentSymbol as IIShapeEllipse, this.currentSymbolOrigin!, pointer)\n        break\n    }\n  }\n\n  protected updateCurrentSymbolEdge(pointer: TPointer): void\n  {\n    const edge = this.model.currentSymbol as TIIEdge\n    switch (edge.kind) {\n      case EdgeKind.Line:\n        edge.end = pointer\n        break\n    }\n  }\n\n  protected updateCurrentSymbol(pointer: TPointer): TIISymbol\n  {\n    this.#logger.debug(\"updateCurrentSymbol\", { pointer })\n    if (!this.model.currentSymbol) {\n      throw new Error(\"Can't update current symbol because currentSymbol is undefined\")\n    }\n\n    switch (this.model.currentSymbol.type) {\n      case SymbolType.Stroke:\n        this.model.currentSymbol!.addPointer(pointer)\n        break\n      case SymbolType.Shape:\n        this.updateCurrentSymbolShape(pointer)\n        break\n      case SymbolType.Edge:\n        this.updateCurrentSymbolEdge(pointer)\n        break\n    }\n    return this.model.currentSymbol\n  }\n\n  start(info: PointerInfo): void\n  {\n    this.#logger.info(\"startWriting\", { info })\n    const localPointer = info.pointer\n    if (this.tool !== EditorWriteTool.Pencil) {\n      const { x, y } = this.snaps.snapResize(localPointer)\n      localPointer.x = x\n      localPointer.y = y\n    }\n    this.currentSymbolOrigin = localPointer\n    this.createCurrentSymbol(localPointer, this.editor.penStyle, info.pointerType)\n    this.renderer.drawSymbol(this.model.currentSymbol!)\n  }\n\n  continue(info: PointerInfo): void\n  {\n    this.#logger.info(\"continueWriting\", { info })\n    const localPointer = info.pointer\n    if (this.tool !== EditorWriteTool.Pencil) {\n      const { x, y } = this.snaps.snapResize(localPointer)\n      localPointer.x = x\n      localPointer.y = y\n    }\n    this.updateCurrentSymbol(localPointer)\n    this.renderer.drawSymbol(this.model.currentSymbol!)\n  }\n\n  protected async interactWithBackend(stroke: IIStroke): Promise<void>\n  {\n    const localStroke = stroke.clone()\n    let gestureFromContextLess: TGesture | undefined\n    if (this.needContextLessGesture(stroke)) {\n      gestureFromContextLess = await this.gestureManager.getGestureFromContextLess(localStroke)\n    }\n    if (gestureFromContextLess) {\n      this.history.pop()\n      this.recognizer.addStrokes([localStroke], this.detectGesture)\n      await this.gestureManager.apply(localStroke, gestureFromContextLess)\n    }\n    else {\n      const gesture = await this.recognizer.addStrokes([localStroke], this.detectGesture)\n      if (gesture) {\n        this.history.pop()\n        await this.gestureManager.apply(localStroke, gesture)\n      }\n    }\n  }\n\n  async end(info: PointerInfo): Promise<void>\n  {\n    this.#logger.info(\"finishWriting\", { info })\n    const localPointer = info.pointer\n    if (this.tool !== EditorWriteTool.Pencil) {\n      const { x, y } = this.snaps.snapResize(localPointer)\n      localPointer.x = x\n      localPointer.y = y\n    }\n    const localSymbol = this.updateCurrentSymbol(localPointer)\n    this.model.currentSymbol = undefined\n    this.currentSymbolOrigin = undefined\n    this.snaps.clearSnapToElementLines()\n\n    this.renderer.drawSymbol(localSymbol!)\n    this.model.addSymbol(localSymbol)\n    this.history.push(this.model, { added: [localSymbol] })\n\n    if (localSymbol.type === SymbolType.Stroke) {\n      await this.interactWithBackend(localSymbol)\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { IIEraser, TSegment } from \"../symbol\"\nimport { IISVGRenderer } from \"../renderer\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\n\n/**\n * @group Manager\n */\nexport class IIEraseManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.WRITE)\n  grabber: PointerEventGrabber\n  editor: InteractiveInkEditor\n\n  currentEraser?: IIEraser\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.grabber = new PointerEventGrabber(editor.configuration.grabber)\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): IISVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.grabber.attach(layer)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n  }\n\n  detach(): void\n  {\n    this.grabber.detach()\n  }\n\n  start(info: PointerInfo): void\n  {\n    this.#logger.info(\"startErase\", { info })\n    this.currentEraser = new IIEraser()\n    this.currentEraser.pointers.push(info.pointer)\n    this.renderer.drawSymbol(this.currentEraser!)\n  }\n\n  continue(info: PointerInfo): void\n  {\n    this.#logger.info(\"continueErase\", { info })\n    if (!this.currentEraser) {\n      throw new Error(\"Can't update current eraser because currentEraser is undefined\")\n    }\n    this.currentEraser.pointers.push(info.pointer)\n    this.renderer.drawSymbol(this.currentEraser)\n    const lastSeg: TSegment = {\n      p1: this.currentEraser.pointers.at(-1)!,\n      p2: this.currentEraser.pointers.at(-2)!\n    }\n    this.model.symbols.forEach(s => {\n      if (s.isIntersected(lastSeg))\n      {\n        s.deleting = true\n      }\n    })\n    this.model.symbolsToDelete.map(s => this.renderer.drawSymbol(s))\n  }\n\n  async end(info: PointerInfo): Promise<void>\n  {\n    this.#logger.info(\"finishErasing\", { info })\n    this.continue(info)\n\n    this.renderer.removeSymbol(this.currentEraser!.id)\n    this.editor.removeSymbols(this.model.symbolsToDelete.map(s => s.id))\n    this.currentEraser = undefined\n  }\n}\n","import { LoggerManager, LoggerCategory } from \"../logger\"\nimport { IIModel, JIIXEdgeKind } from \"../model\"\nimport { Box, IIText, SymbolType, TBox, TIISymbol } from \"../symbol\"\nimport { IISVGRenderer, IISVGRendererConst, SVGBuilder } from \"../renderer\"\nimport { convertBoundingBoxMillimeterToPixel, createUUID } from \"../utils\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\n\n/**\n * @group Manager\n */\nexport class IIDebugSVGManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.SVGDEBUG)\n  #snapPointsVisibility = false\n  #verticesVisibility = false\n  #boundingBoxVisibility = false\n  #recognitionBoxVisibility = false\n  #recognitionItemBoxVisibility = false\n\n  editor: InteractiveInkEditor\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): IISVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get snapPointsVisibility(): boolean\n  {\n    return this.#snapPointsVisibility\n  }\n  set snapPointsVisibility(show: boolean)\n  {\n    this.#snapPointsVisibility = show\n    this.debugSnapPoints()\n  }\n\n  get verticesVisibility(): boolean\n  {\n    return this.#verticesVisibility\n  }\n  set verticesVisibility(show: boolean)\n  {\n    this.#verticesVisibility = show\n    this.debugVertices()\n  }\n\n  get boundingBoxVisibility(): boolean\n  {\n    return this.#boundingBoxVisibility\n  }\n  set boundingBoxVisibility(show: boolean)\n  {\n    this.#boundingBoxVisibility = show\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    this.#boundingBoxVisibility ? this.showBoundingBox() : this.hideBoundingBox()\n  }\n\n  get recognitionBoxVisibility(): boolean\n  {\n    return this.#recognitionBoxVisibility\n  }\n  set recognitionBoxVisibility(show: boolean)\n  {\n    this.#recognitionBoxVisibility = show\n    this.debugRecognitionBox()\n  }\n\n  get recognitionItemBoxVisibility(): boolean\n  {\n    return this.#recognitionItemBoxVisibility\n  }\n  set recognitionItemBoxVisibility(show: boolean)\n  {\n    this.#recognitionItemBoxVisibility = show\n    this.debugRecognitionItemBox()\n  }\n\n  protected showSnapPoints(): void\n  {\n    this.#logger.info(\"showSnapPoints\")\n    if (this.model.currentSymbol) {\n      this.model.currentSymbol.snapPoints.forEach(p => this.renderer.drawCircle(p, 2, { fill: \"blue\", \"debug\": \"snap-points\" }))\n    }\n    this.model.symbols.forEach(s => s.snapPoints.forEach(p => this.renderer.drawCircle(p, 2, { fill: \"blue\", \"debug\": \"snap-points\" })))\n  }\n  protected hideSnapPoints(): void\n  {\n    this.#logger.info(\"hideSnapPoints\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"snap-points\" } })\n  }\n  debugSnapPoints(): void\n  {\n    this.hideSnapPoints()\n    if (this.snapPointsVisibility) {\n      this.showSnapPoints()\n    }\n  }\n\n  protected showVertices(): void\n  {\n    this.#logger.info(\"showVertices\")\n    if (this.model.currentSymbol) {\n      this.model.currentSymbol.vertices.forEach(p => this.renderer.drawCircle(p, 2, { fill: \"red\", \"debug\": \"vertices\" }))\n    }\n    this.model.symbols.forEach(s => s.vertices.forEach(p => this.renderer.drawCircle(p, 2, { fill: \"red\", \"debug\": \"vertices\" })))\n  }\n  protected hideVertices(): void\n  {\n    this.#logger.info(\"hideVertices\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"vertices\" } })\n  }\n  debugVertices(): void\n  {\n    this.hideVertices()\n    if (this.verticesVisibility) {\n      this.showVertices()\n    }\n  }\n\n  protected drawBoundingBox(symbols: TIISymbol[]): void\n  {\n    const symbolAttrs = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"red\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"5 5\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"debug\": \"bounding-box\"\n    }\n    const charAttrs = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"orange\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"0 5 0\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"debug\": \"bounding-box\"\n    }\n    symbols.forEach(s =>\n    {\n      const symEl = this.renderer.getElementById(s.id)\n      if (symEl) {\n        if (s.type === SymbolType.Text) {\n          const text = s as IIText\n          let transform: string = \"\"\n          if (text.rotation) {\n            transform = `rotate(${ text.rotation.degree }, ${ text.rotation.center.x }, ${ text.rotation.center.y })`\n          }\n          text.chars.forEach(c =>\n          {\n            const ca = {\n              ...charAttrs,\n              char: c.label,\n              transform\n            }\n            symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(c.bounds, ca))\n          })\n          const sa = {\n            ...symbolAttrs,\n            symbol: s.id,\n            transform\n          }\n          symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(s.bounds, sa))\n        }\n        else {\n          const sa = {\n            ...symbolAttrs,\n            symbol: s.id,\n          }\n          symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(s.bounds, sa))\n        }\n      }\n    })\n  }\n  protected showBoundingBox(): void\n  {\n    this.#logger.info(\"showBoundingBox\")\n    if (this.model.currentSymbol) {\n      this.drawBoundingBox([this.model.currentSymbol])\n    }\n    this.drawBoundingBox(this.model.symbols)\n  }\n  protected hideBoundingBox(): void\n  {\n    this.#logger.info(\"hideBoundingBox\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"bounding-box\" } })\n  }\n  debugBoundingBox(): void\n  {\n    this.hideBoundingBox()\n    if (this.boundingBoxVisibility) {\n      this.showBoundingBox()\n    }\n  }\n\n  protected drawRecognitionBox(box: TBox, infos?: string[]): void\n  {\n    const COLOR = \"green\"\n    const TEXT_HEIGHT = 20\n    const recognitionGroup = SVGBuilder.createGroup({ \"debug\": \"recognition-box\" })\n\n    const rect = SVGBuilder.createRect(box, { fill: \"transparent\", stroke: COLOR, style: IISVGRendererConst.noSelection })\n    recognitionGroup.appendChild(rect)\n\n    const infosGroup = SVGBuilder.createGroup({ id: `infos-group-${ createUUID() }` })\n    const infoX = box.x + box.width\n    let infoY = box.y + TEXT_HEIGHT / 2\n    infos?.forEach(w =>\n    {\n      infosGroup.appendChild(SVGBuilder.createText({ x: infoX, y: infoY }, w, { stroke: COLOR, style: IISVGRendererConst.noSelection }))\n      infoY += TEXT_HEIGHT\n    })\n    recognitionGroup.appendChild(infosGroup)\n    this.renderer.layer.appendChild(recognitionGroup)\n\n    const infosGroupBox = infosGroup.getBBox()\n    const rectBox = {\n      width: infosGroupBox.width + 10,\n      height: infosGroupBox.height + 10,\n      x: infosGroupBox.x - 5,\n      y: infosGroupBox.y - 5,\n    }\n    const rectTranslate = SVGBuilder.createRect(rectBox, { fill: \"white\", style: \"cursor:move\", stroke: COLOR })\n    infosGroup.prepend(rectTranslate)\n\n    const translateEl = (e: PointerEvent) =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      const originX = Number(this.renderer.getAttribute(infosGroup.id, \"originX\"))\n      const originY = Number(this.renderer.getAttribute(infosGroup.id, \"originY\"))\n      const tx = e.clientX - originX\n      const ty = e.clientY - originY\n      this.renderer.setAttribute(infosGroup.id, \"transform\", `translate(${ tx },${ ty })`)\n      const newRectBox = {\n        width: rectBox.width,\n        height: rectBox.height,\n        x: rectBox.x + tx,\n        y: rectBox.y + ty,\n      }\n      this.renderer.removeSymbol(`connection-${ infosGroup.id }`)\n      this.renderer.drawConnectionBetweenBox(`connection-${ infosGroup.id }`, box, newRectBox, { stroke: COLOR, debug: \"recognition-box-link\" })\n    }\n\n    rectTranslate.addEventListener(\"pointerdown\", e =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      if (!this.renderer.getAttribute(infosGroup.id, \"originX\")) {\n        this.renderer.setAttribute(infosGroup.id, \"originX\", e.clientX.toString())\n        this.renderer.setAttribute(infosGroup.id, \"originY\", e.clientY.toString())\n      }\n      this.renderer.layer.addEventListener(\"pointermove\", translateEl)\n      this.renderer.layer.addEventListener(\"pointerup\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n      this.renderer.layer.addEventListener(\"pointerleave\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n      this.renderer.layer.addEventListener(\"pointercancel\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n    })\n  }\n\n  protected async showRecognitionBox(): Promise<void>\n  {\n    this.#logger.info(\"showRecognitionBox\")\n    await this.editor.export([\"application/vnd.myscript.jiix\"])\n    const jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    this.#logger.debug(\"showRecognitionBox\", { jiix })\n    if (jiix) {\n      if (!jiix[\"bounding-box\"]) {\n        this.#logger.warn(\"drawRecognitionBox\", \"You must to enabled configuration.recognition.exports[\\\"bounding-box\\\"]\")\n        return\n      }\n      jiix.elements?.forEach(el =>\n      {\n        switch (el.type) {\n          case \"Node\": {\n            if (el[\"bounding-box\"]) {\n              const box = convertBoundingBoxMillimeterToPixel(el[\"bounding-box\"])\n              const hideProperties = [\"bounding-box\", \"items\", \"id\"]\n              const infos = Object.keys(el).filter(k => !hideProperties.includes(k)).map(k => `${ k }: ${ JSON.stringify(el[k as keyof typeof el]) }`)\n              this.drawRecognitionBox(box, infos)\n            }\n            break\n          }\n          case \"Text\": {\n            el.words?.forEach(w =>\n            {\n              if (w?.[\"bounding-box\"]) {\n                const box = convertBoundingBoxMillimeterToPixel(w[\"bounding-box\"])\n                this.drawRecognitionBox(box, [`type: ${ el.type }`, `candidates: ${ JSON.stringify(w.candidates || []) }`])\n              }\n            })\n            break\n          }\n          case \"Edge\": {\n            if (el.kind === JIIXEdgeKind.PolyEdge) {\n              const infos = [\n                `type: ${ el.type }`,\n                `kind: ${ el.kind }`,\n              ]\n              el.edges.forEach((e, i) =>\n              {\n                let inf = `edge-${ i }: [{ x1: ${ e.x1 }, y2: ${ e.y1 } },{ x2: ${ e.x2 }, y2: ${ e.y2 } }]`\n                if (e.p1Decoration) {\n                  inf += `, p1Decoration: ${ e.p1Decoration }`\n                }\n                if (e.p2Decoration) {\n                  inf += `, p2Decoration: ${ e.p2Decoration }`\n                }\n                infos.push(inf)\n              })\n              const box = convertBoundingBoxMillimeterToPixel(Box.createFromBoxes(el.edges.map(e => e[\"bounding-box\"] as TBox)))\n              this.drawRecognitionBox(box, infos)\n            }\n            else if (el[\"bounding-box\"]) {\n              const box = convertBoundingBoxMillimeterToPixel(el[\"bounding-box\"])\n              const hideProperties = [\"bounding-box\", \"items\", \"id\", \"ports\", \"connected\"]\n              const infos = Object.keys(el).filter(k => !hideProperties.includes(k)).map(k => `${ k }: ${ JSON.stringify(el[k as keyof typeof el]) }`)\n              this.drawRecognitionBox(box, infos)\n            }\n            break\n          }\n          default: {\n            this.#logger.warn(\"drawRecognitionBox\", `Unknow jiix element type: ${ el.type }`)\n            break\n          }\n        }\n      })\n    }\n  }\n  protected clearRecognitionBox(): void\n  {\n    this.#logger.info(\"clearRecognitionBox\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-box\" } })\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-box-link\" } })\n  }\n  async debugRecognitionBox(): Promise<void>\n  {\n    this.clearRecognitionBox()\n    if (this.#recognitionBoxVisibility) {\n      this.showRecognitionBox()\n    }\n  }\n\n  protected drawRecognitionItemBox(box: TBox, label?: string, chars?: string[]): void\n  {\n    const COLOR = \"blue\"\n    const CHAR_SIZE = 14\n\n    const recognitionItemGroup = SVGBuilder.createGroup({ \"debug\": \"recognition-item-box\" })\n    const rect = SVGBuilder.createRect(box, { fill: \"transparent\", stroke: COLOR, style: IISVGRendererConst.noSelection })\n    recognitionItemGroup.appendChild(rect)\n\n    const charX = box.x\n    let charY = box.y - CHAR_SIZE\n\n    const charsGroup = SVGBuilder.createGroup({ id: `chars-group-${ createUUID() }` })\n    if (label) {\n      charsGroup.appendChild(SVGBuilder.createText({ x: charX, y: charY }, `label: ${ label }`, { fill: COLOR, \"font-size\": CHAR_SIZE.toString(), style: IISVGRendererConst.noSelection }))\n    }\n    if (chars?.length) {\n      charY += CHAR_SIZE\n      charsGroup.appendChild(SVGBuilder.createText({ x: charX, y: charY }, `[${ chars.join(\", \") }]`, { fill: COLOR, \"font-size\": CHAR_SIZE.toString(), style: IISVGRendererConst.noSelection }))\n    }\n\n    recognitionItemGroup.appendChild(charsGroup)\n    this.renderer.layer.appendChild(recognitionItemGroup)\n\n    const charsGroupBox = charsGroup.getBBox()\n    const rectBox = {\n      width: charsGroupBox.width + 10,\n      height: charsGroupBox.height + 10,\n      x: charsGroupBox.x - 5,\n      y: charsGroupBox.y - 5,\n    }\n    const rectTranslate = SVGBuilder.createRect(rectBox, { fill: \"white\", style: \"cursor:move\", stroke: COLOR })\n    charsGroup.prepend(rectTranslate)\n\n    const translateEl = (e: PointerEvent) =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      const originX = Number(this.renderer.getAttribute(charsGroup.id, \"originX\"))\n      const originY = Number(this.renderer.getAttribute(charsGroup.id, \"originY\"))\n      const tx = e.clientX - originX\n      const ty = e.clientY - originY\n      this.renderer.setAttribute(charsGroup.id, \"transform\", `translate(${ tx },${ ty })`)\n      const newRectBox = {\n        width: rectBox.width,\n        height: rectBox.height,\n        x: rectBox.x + tx,\n        y: rectBox.y + ty,\n      }\n      this.renderer.removeSymbol(`connection-${ charsGroup.id }`)\n      this.renderer.drawConnectionBetweenBox(`connection-${ charsGroup.id }`, box, newRectBox, { stroke: COLOR, debug: \"recognition-item-box-link\" })\n    }\n\n    rectTranslate.addEventListener(\"pointerdown\", e =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      if (!this.renderer.getAttribute(charsGroup.id, \"originX\")) {\n        this.renderer.setAttribute(charsGroup.id, \"originX\", e.clientX.toString())\n        this.renderer.setAttribute(charsGroup.id, \"originY\", e.clientY.toString())\n      }\n      this.renderer.layer.addEventListener(\"pointermove\", translateEl)\n    })\n    this.renderer.layer.addEventListener(\"pointerup\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n    this.renderer.layer.addEventListener(\"pointerleave\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n    this.renderer.layer.addEventListener(\"pointercancel\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n\n  }\n  protected async showRecognitionItemBox(): Promise<void>\n  {\n    this.#logger.info(\"showRecognitionBoxItem\")\n    await this.editor.export([\"application/vnd.myscript.jiix\"])\n    const jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    this.#logger.debug(\"showRecognitionBoxItem\", { jiix })\n    if (jiix) {\n      jiix.elements?.forEach(el =>\n      {\n        switch (el.type) {\n          case \"Text\": {\n            el.chars?.forEach(c =>\n            {\n              if (c?.[\"bounding-box\"]) {\n                const box = convertBoundingBoxMillimeterToPixel(c[\"bounding-box\"])\n                this.drawRecognitionItemBox(box, c.label, c.candidates)\n              }\n            })\n            break\n          }\n          case \"Node\": {\n            if (el?.[\"bounding-box\"]) {\n              const box = convertBoundingBoxMillimeterToPixel(el[\"bounding-box\"])\n              this.drawRecognitionItemBox(box, el.kind)\n            }\n            break\n          }\n          case \"Edge\": {\n            if (el.kind === JIIXEdgeKind.PolyEdge) {\n              el.edges.forEach(e =>\n              {\n                const box = convertBoundingBoxMillimeterToPixel(e[\"bounding-box\"])\n                this.drawRecognitionItemBox(box, e.kind)\n              })\n            }\n            else if (el[\"bounding-box\"]) {\n              const box = convertBoundingBoxMillimeterToPixel(el[\"bounding-box\"])\n              this.drawRecognitionItemBox(box, el.kind)\n            }\n            break\n          }\n          default:\n            this.#logger.warn(\"drawRecognitionBoxItem\", `Unknow jiix element type: ${ el.type }`)\n            break\n        }\n      })\n    }\n  }\n  protected clearRecognitionItemBox(): void\n  {\n    this.#logger.info(\"clearRecognitionBoxItem\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-item-box\" } })\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-item-box-link\" } })\n  }\n  async debugRecognitionItemBox(): Promise<void>\n  {\n    this.clearRecognitionItemBox()\n    if (this.#recognitionItemBoxVisibility) {\n      this.showRecognitionItemBox()\n    }\n  }\n\n  apply(): void\n  {\n    this.debugBoundingBox()\n    this.debugVertices()\n    this.debugSnapPoints()\n    this.debugRecognitionBox()\n    this.debugRecognitionItemBox()\n  }\n}\n","import { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { IISVGRenderer } from \"../renderer\"\n\n/**\n * @group Manager\n */\nexport class IIMoveManager\n{\n  grabber: PointerEventGrabber\n  editor: InteractiveInkEditor\n\n  origin?: {\n    left: number,\n    top: number,\n    x: number,\n    y: number\n  }\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.editor = editor\n    this.grabber = new PointerEventGrabber(editor.configuration.grabber)\n  }\n\n  get renderer(): IISVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.grabber.attach(layer)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n  }\n\n  detach(): void\n  {\n    this.grabber.detach()\n  }\n\n  start(info: PointerInfo): void\n  {\n    this.origin = {\n      left: this.renderer.parent.scrollLeft,\n      top: this.renderer.parent.scrollTop,\n      x: info.clientX,\n      y: info.clientY,\n    }\n  }\n\n  continue(info: PointerInfo): void\n  {\n    if (!this.origin) {\n      throw new Error(\"Can't move cause origin is undefined\")\n    }\n    const dx = info.clientX - this.origin.x\n    const dy = info.clientY - this.origin.y\n\n    this.renderer.parent.scrollTop = this.origin.top - dy\n    this.renderer.parent.scrollLeft = this.origin.left - dx\n  }\n\n  end(info: PointerInfo): void\n  {\n    this.continue(info)\n    this.origin = undefined\n  }\n}\n","/**\n * @group History\n */\nexport type THistoryContext = {\n  canUndo: boolean\n  canRedo: boolean\n  empty: boolean\n  stackIndex: number\n  possibleUndoCount: number\n}\n\n/**\n * @group History\n */\nexport const getInitialHistoryContext = (): THistoryContext => {\n  return {\n    stackIndex: 0,\n    possibleUndoCount: 0,\n    canRedo: false,\n    canUndo: false,\n    empty: true,\n  }\n}\n","import { EditorEvent } from \"../editor/EditorEvent\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { Model } from \"../model\"\nimport { THistoryConfiguration } from \"./HistoryConfiguration\"\nimport { THistoryContext, getInitialHistoryContext } from \"./HistoryContext\"\n\n/**\n * @group History\n */\nexport class HistoryManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.HISTORY)\n\n  configuration: THistoryConfiguration\n  event: EditorEvent\n  context: THistoryContext\n  stack: Model[]\n\n  constructor(configuration: THistoryConfiguration, event: EditorEvent)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n    this.event = event\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n\n  private updateContext(): void\n  {\n    this.context.canRedo = this.stack.length - 1 > this.context.stackIndex\n    this.context.canUndo = this.context.stackIndex > 0\n    this.context.empty = this.stack[this.context.stackIndex].symbols.length === 0\n  }\n\n  push(model: Model): void\n  {\n    this.#logger.info(\"push\", { model })\n    if (this.context.stackIndex + 1 < this.stack.length) {\n      this.stack.splice(this.context.stackIndex + 1)\n    }\n\n    this.stack.push(model.clone())\n    this.context.stackIndex = this.stack.length - 1\n\n    if (this.stack.length > this.configuration.maxStackSize) {\n      this.stack.shift()\n      this.context.stackIndex--\n    }\n\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  updateStack(model: Model): void\n  {\n    this.#logger.info(\"updateStack\", { model })\n    const index = this.stack.findIndex(m => m.modificationDate === model.modificationDate)\n    if (index > -1) {\n      this.stack.splice(index, 1, model.clone())\n    }\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  undo(): Model\n  {\n    this.#logger.info(\"undo\")\n    if (this.context.canUndo) {\n      this.context.stackIndex--\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const previousModel = this.stack[this.context.stackIndex].clone()\n    this.#logger.debug(\"undo\", previousModel)\n    return previousModel\n  }\n\n  redo(): Model\n  {\n    this.#logger.info(\"redo\")\n    if (this.context.canRedo) {\n      this.context.stackIndex++\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const nextModel = this.stack[this.context.stackIndex].clone()\n    this.#logger.debug(\"redo\", nextModel)\n    return nextModel\n  }\n}\n","import { EditorEvent } from \"../editor/EditorEvent\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { IIDecorator, IIStroke, TIISymbol, TPoint } from \"../symbol\"\nimport { TStyle } from \"../style\"\nimport { MatrixTransform, TMatrixTransform } from \"../transform\"\nimport { THistoryContext, getInitialHistoryContext } from \"./HistoryContext\"\nimport { PartialDeep } from \"../utils\"\nimport { THistoryConfiguration } from \"./HistoryConfiguration\"\n\n/**\n * @group History\n */\nexport type TIIHistoryChanges = {\n  added?: TIISymbol[]\n  updated?: TIISymbol[]\n  erased?: TIISymbol[]\n  replaced?: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] }\n  matrix?: { symbols: TIISymbol[], matrix: TMatrixTransform }\n  translate?: { symbols: TIISymbol[], tx: number, ty: number }[]\n  scale?: { symbols: TIISymbol[], scaleX: number, scaleY: number, origin: TPoint }[]\n  rotate?: { symbols: TIISymbol[], angle: number, center: TPoint }[]\n  style?: { symbols: TIISymbol[], style?: PartialDeep<TStyle>, fontSize?: number }\n  order?: { symbols: TIISymbol[], position: \"first\" | \"last\" | \"forward\" | \"backward\" }\n  decorator?: { symbol: TIISymbol, decorator: IIDecorator, added: boolean }[]\n  group?: { symbols: TIISymbol[] }\n  ungroup?: { group: TIISymbol }\n}\n\n/**\n * @group History\n * @remarks used to send messages to the backend on undo or redo\n */\nexport type TIIHistoryBackendChanges = {\n  added?: IIStroke[]\n  erased?: IIStroke[]\n  replaced?: { oldStrokes: IIStroke[], newStrokes: IIStroke[] }\n  matrix?: { strokes: IIStroke[], matrix: TMatrixTransform },\n  translate?: { strokes: IIStroke[], tx: number, ty: number }[]\n  scale?: { strokes: IIStroke[], scaleX: number, scaleY: number, origin: TPoint }[]\n  rotate?: { strokes: IIStroke[], angle: number, center: TPoint }[]\n}\n\n/**\n * @group History\n */\nexport type TIIHistoryStackItem = {\n  changes: TIIHistoryChanges\n  model: IIModel\n}\n\n/**\n * @group History\n */\nexport class IIHistoryManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.HISTORY)\n\n  configuration: THistoryConfiguration\n  event: EditorEvent\n  context: THistoryContext\n  stack: TIIHistoryStackItem[]\n\n  constructor(configuration: THistoryConfiguration, event: EditorEvent)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n    this.event = event\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n\n  private updateContext(): void\n  {\n    this.context.canRedo = this.stack.length - 1 > this.context.stackIndex\n    this.context.canUndo = this.context.stackIndex > 0\n    this.context.empty = this.stack[this.context.stackIndex].model.symbols.length === 0\n  }\n\n  isChangesEmpty(changes: TIIHistoryChanges): boolean\n  {\n    return !(\n      changes.added?.length ||\n      changes.updated?.length ||\n      changes.erased?.length ||\n      changes.replaced?.oldSymbols.length ||\n      changes.matrix?.symbols.length ||\n      changes.translate?.length ||\n      changes.rotate?.length ||\n      changes.scale?.length ||\n      changes.style?.symbols?.length ||\n      changes.order?.symbols?.length ||\n      changes.decorator?.length ||\n      changes.group?.symbols.length ||\n      changes.ungroup?.group\n    )\n  }\n\n  init(model: IIModel): void\n  {\n    this.stack.push({ model: model.clone(), changes: {} })\n    this.event.emitChanged(this.context)\n  }\n\n  push(model: IIModel, changes: TIIHistoryChanges): void\n  {\n    this.#logger.info(\"push\", { model, changes })\n    if (this.isChangesEmpty(changes)) return\n\n    if (this.context.stackIndex + 1 < this.stack.length) {\n      this.stack.splice(this.context.stackIndex + 1)\n    }\n\n    this.stack.push({ model: model.clone(), changes })\n    this.context.stackIndex = this.stack.length - 1\n\n    if (this.stack.length > this.configuration.maxStackSize) {\n      this.stack.shift()\n      this.context.stackIndex--\n    }\n\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  update(model: IIModel): void\n  {\n    this.#logger.info(\"pop\")\n    const stackIdx = this.stack.findIndex(s => s.model.modificationDate === model.modificationDate)\n    if (stackIdx > -1) {\n      this.stack[stackIdx].model = model\n      this.updateContext()\n    }\n  }\n\n  pop(): void\n  {\n    this.#logger.info(\"pop\")\n    this.stack.pop()\n    this.context.stackIndex = this.stack.length - 1\n    this.updateContext()\n  }\n\n  protected reverseChanges(changes: TIIHistoryChanges): TIIHistoryChanges\n  {\n    const reversedChanges: TIIHistoryChanges = {}\n    if (changes.added) {\n      reversedChanges.erased = changes.added\n    }\n    if (changes.erased) {\n      reversedChanges.added = changes.erased\n    }\n    if (changes.replaced) {\n      reversedChanges.replaced = {\n        newSymbols: changes.replaced.oldSymbols,\n        oldSymbols: changes.replaced.newSymbols\n      }\n    }\n    if (changes.matrix) {\n      reversedChanges.matrix = {\n        symbols: changes.matrix.symbols,\n        matrix: new MatrixTransform(changes.matrix.matrix.xx, changes.matrix.matrix.yx, changes.matrix.matrix.xy, changes.matrix.matrix.yy, changes.matrix.matrix.tx, changes.matrix.matrix.ty).invert()\n      }\n    }\n    if (changes.translate?.length) {\n      reversedChanges.translate = changes.translate.map(tr =>\n      {\n        return {\n          symbols: tr.symbols,\n          tx: -tr.tx,\n          ty: -tr.ty,\n        }\n      })\n    }\n    if (changes.rotate?.length) {\n      reversedChanges.rotate = changes.rotate.map(tr =>\n      {\n        return {\n          symbols: tr.symbols,\n          angle: 2 * Math.PI - tr.angle,\n          center: tr.center\n        }\n      })\n    }\n    if (changes.scale?.length) {\n      reversedChanges.scale = changes.scale.map(tr =>\n      {\n        return {\n          symbols: tr.symbols,\n          origin: tr.origin,\n          scaleX: 1 / tr.scaleX,\n          scaleY: 1 / tr.scaleY\n        }\n      })\n    }\n\n    return reversedChanges\n  }\n\n  undo(): TIIHistoryStackItem\n  {\n    this.#logger.info(\"undo\")\n    const currentStackItem = this.stack[this.context.stackIndex]\n    if (this.context.canUndo) {\n      this.context.stackIndex--\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const previousStackItem = this.stack[this.context.stackIndex]\n    this.#logger.debug(\"undo\", previousStackItem)\n    return {\n      model: previousStackItem.model,\n      changes: this.reverseChanges(currentStackItem.changes)\n    }\n  }\n\n  redo(): TIIHistoryStackItem\n  {\n    this.#logger.info(\"redo\")\n    if (this.context.canRedo) {\n      this.context.stackIndex++\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const nextStackItem = this.stack[this.context.stackIndex]\n    this.#logger.debug(\"redo\", nextStackItem)\n    return nextStackItem\n  }\n\n  clear(): void\n  {\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n}","\n/**\n * @group History\n */\nexport type THistoryConfiguration = {\n  maxStackSize: number\n}\n\n/**\n * @group History\n * @source\n */\nexport const DefaultHistoryConfiguration: THistoryConfiguration = {\n  maxStackSize: 100\n}\n","import ArrowDown from \"../assets/svg/nav-arrow-down.svg\"\n\n/**\n * @group Menu\n */\nexport type TMenuItem = {\n  id: string,\n  label: string,\n  type: \"button\" | \"checkbox\" | \"select\" | \"list\" | \"colors\"\n  disabled?: boolean\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemButton = TMenuItem & {\n  type: \"button\"\n  icon?: string\n  callback: () => void\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemButtonList = TMenuItem & {\n  type: \"list\"\n  initValue: string,\n  values: { label: string, value: string }[]\n  callback: (value: string) => void\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemColorList = TMenuItem & {\n  type: \"colors\"\n  initValue: string,\n  values: string[]\n  fill: boolean\n  callback: (value: string) => void\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemBoolean = TMenuItem & {\n  type: \"checkbox\",\n  initValue: boolean | \"indeterminate\",\n  callback: (value: boolean) => void\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemSelect = TMenuItem & {\n  type: \"select\",\n  initValue: string,\n  values: { label: string, value: string }[]\n  callback: (value: string) => void\n}\n\n/**\n * @group Menu\n */\nexport abstract class IIMenu\n{\n  thicknessList = [\n    { label: \"S\", value: 1 },\n    { label: \"M\", value: 2 },\n    { label: \"L\", value: 4 },\n    { label: \"XL\", value: 8 },\n  ]\n\n  fontSizeList = [\n    { label: \"Auto\", value: \"auto\" },\n    { label: \"S\", value: 0.5 },\n    { label: \"M\", value: 0.75 },\n    { label: \"L\", value: 1 },\n  ]\n\n  fontWeightList = [\n    { label: \"Auto\", value: \"auto\" },\n    { label: \"Normal\", value: \"normal\" },\n    { label: \"Bold\", value: \"bold\" },\n  ]\n\n  colors = [\n    \"#000000\", \"#808080\", \"#ffffff\", \"transparent\",\n    \"#ff0000\", \"#ff6400\", \"#ffc800\", \"#ffff00\",\n    \"#0000ff\", \"#0064ff\", \"#00c8ff\", \"#00ffff\",\n    \"#008000\", \"#00af00\", \"#00e100\", \"#00ff00\"\n  ]\n\n  protected createWrapCollapsible(el: Node, title: string): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"collapsible-wrapper\")\n    const head = document.createElement(\"div\")\n    head.classList.add(\"collapsible-header\")\n    head.textContent = title\n    const btn = document.createElement(\"span\")\n    btn.classList.add(\"collapsible-header-icon\")\n    btn.innerHTML = ArrowDown\n    head.appendChild(btn)\n    head.style.setProperty(\"pointer\", \"cursor\")\n    const content = document.createElement(\"div\")\n    content.classList.add(\"collapsible-content\")\n    head.addEventListener(\"pointerup\", () => wrapper.classList.toggle(\"active\"))\n    wrapper.appendChild(head)\n    content.appendChild(el)\n    wrapper.appendChild(content)\n    return wrapper\n  }\n\n  protected createMenuItemBoolean(item: TMenuItemBoolean): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"ms-menu-item\", item.type)\n    const labelEl = document.createElement(\"span\")\n    labelEl.textContent = item.label\n    wrapper.appendChild(labelEl)\n    const checkbox = document.createElement(\"input\")\n    checkbox.id = item.id\n    checkbox.setAttribute(\"type\", \"checkbox\")\n    if (item.disabled) {\n      checkbox.disabled = true\n    }\n    if (item.initValue === \"indeterminate\") {\n      checkbox.indeterminate = true\n    } else {\n      checkbox.checked = item.initValue\n    }\n    checkbox.addEventListener(\"change\", (e) => item.callback((e.target as HTMLInputElement).checked))\n    wrapper.appendChild(checkbox)\n    return wrapper\n  }\n\n  protected createMenuItemSelect(item: TMenuItemSelect): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"ms-menu-item\", item.type)\n    const labelEl = document.createElement(\"span\")\n    labelEl.textContent = item.label\n    wrapper.appendChild(labelEl)\n    const select = document.createElement(\"select\")\n    select.id = item.id\n    if (item.disabled) {\n      select.disabled = true\n    }\n    item.values.forEach(v =>\n    {\n      const selected = v.value === item.initValue\n      const opt = new Option(v.label, v.value.toString(), selected, selected)\n      select.appendChild(opt)\n    })\n    select.addEventListener(\"change\", (e) => item.callback((e.target as HTMLInputElement).value))\n    wrapper.appendChild(select)\n    return wrapper\n  }\n\n  protected createMenuItemButton(item: TMenuItemButton): HTMLElement\n  {\n    const btn = document.createElement(\"button\")\n    btn.classList.add(\"ms-menu-item\", \"ms-menu-button\")\n    btn.innerHTML = item.icon || item.label\n    btn.addEventListener(\"pointerup\", item.callback)\n    return btn\n  }\n\n  protected createMenuItemButtonList(item: TMenuItemButtonList): HTMLElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"ms-menu-item\", item.type)\n    wrapper.id = item.id\n    const labelEl = document.createElement(\"span\")\n    labelEl.textContent = item.label\n    wrapper.appendChild(labelEl)\n    item.values.forEach((v) =>\n    {\n      const btn = document.createElement(\"button\")\n      if (item.disabled) {\n        btn.disabled = true\n      }\n      btn.id = `${item.id}-${ v.value }-btn`\n      if (item.initValue === v.value) {\n        btn.classList.add(\"active\")\n      }\n      btn.textContent = v.label\n      btn.addEventListener(\"pointerup\", () =>\n      {\n        item.callback(v.value)\n        wrapper.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n      })\n      wrapper.appendChild(btn)\n    })\n    return wrapper\n  }\n\n  protected createMenuItemColorList(item: TMenuItemColorList): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"ms-menu-item\", item.type)\n    wrapper.id = item.id\n    const labelEl = document.createElement(\"span\")\n    labelEl.textContent = item.label\n    wrapper.appendChild(labelEl)\n    wrapper.appendChild(this.createColorList(item))\n    return wrapper\n  }\n\n  protected createColorList(item: TMenuItemColorList): HTMLDivElement\n  {\n    const list = document.createElement(\"div\")\n    list.id = `${ item.id }-list`\n    list.classList.add(\"ms-menu-row\", \"color-list\")\n    item.values.forEach((color) =>\n    {\n      const btn = document.createElement(\"button\")\n      if (item.disabled) {\n        btn.disabled = true\n      }\n      btn.id = `${ item.id }-${ color.replace(\"#\", \"\") }-btn`\n      btn.classList.add(\"ms-menu-button\", \"square\")\n      const colorEl = document.createElement(\"div\")\n      colorEl.classList.add(\"color\")\n      if (item.fill) {\n        colorEl.style.setProperty(\"background-color\", color)\n        colorEl.style.setProperty(\"border\", \"1px solid lightgrey\")\n      } else {\n        colorEl.style.setProperty(\"background-color\", \"transparent\")\n        colorEl.style.setProperty(\"border\", `3px solid ${ color }`)\n      }\n      if (color === \"#ffffff\") {\n        colorEl.style.setProperty(\"border\", \"1px solid black\")\n      }\n      if (color === \"transparent\") {\n        colorEl.style.setProperty(\"background-image\", \"linear-gradient(45deg, #AAA 10%, transparent 20%, #AAA 30%, transparent 40%, #AAA 50%, transparent 60%, #AAA 70%, transparent 80%, #AAA 90%, transparent 100%)\")\n      }\n      if (item.initValue === color) {\n        btn.classList.add(\"active\")\n      }\n      btn.appendChild(colorEl)\n      btn.addEventListener(\"pointerup\", (e) =>\n      {\n        e.preventDefault()\n        e.stopPropagation()\n        item.callback(color)\n        list.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n      })\n      list!.appendChild(btn)\n    })\n    return list\n  }\n\n  protected createMenuItem(item: TMenuItem): HTMLElement\n  {\n    switch (item.type) {\n      case \"checkbox\":\n        return this.createMenuItemBoolean(item as TMenuItemBoolean)\n      case \"select\":\n        return this.createMenuItemSelect(item as TMenuItemSelect)\n      case \"list\":\n        return this.createMenuItemButtonList(item as TMenuItemButtonList)\n      case \"colors\":\n        return this.createMenuItemColorList(item as TMenuItemColorList)\n      case \"button\":\n      default:\n        return this.createMenuItemButton(item as TMenuItemButton)\n    }\n  }\n\n  abstract render(domElement: HTMLElement): void\n\n  abstract update(): void\n\n  abstract show(): void\n\n  abstract hide(): void\n\n  abstract destroy(): void\n}\n","\n/**\n * @group Gesture\n * @summary List all authorized gestures\n */\nexport type TGestureType = \"UNDERLINE\" | \"SCRATCH\" | \"JOIN\" | \"INSERT\" | \"STRIKETHROUGH\" | \"SURROUND\"\n\n/**\n * @group Gesture\n * @remarks\n *  when gestureType = \"INSERT\", subStrokes represent the two parts\n *  when gestureType = \"SCRATCH\", subStrokes represent the part to substract at the stroke corresponding fullStrokeId\n */\nexport type TGesture = {\n  gestureType: TGestureType\n  gestureStrokeId: string\n  strokeIds: string[]\n  strokeBeforeIds: string[]\n  strokeAfterIds: string[]\n  subStrokes?: { fullStrokeId: string, x: number[], y: number[] }[]\n}\n\n/**\n * @group Gesture\n * @summary\n * List all action allowed on surround detected\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum SurroundAction\n{\n  Select = \"select\",\n  Surround = \"surround\",\n  Highlight = \"highlight\"\n}\n\n/**\n * @group Gesture\n * @summary\n * List all action allowed on strikeThrough detected\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum StrikeThroughAction\n{\n  Erase = \"erase\",\n  Draw = \"draw\"\n}\n\n/**\n * @group Gesture\n * @summary\n * List all action allowed on split detected\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum InsertAction\n{\n  /**\n   * @remarks Add line break on gesture place\n   */\n  LineBreak = \"line-break\",\n  /**\n   * @remarks Insert place in gesture place\n   */\n  Insert = \"insert\"\n}\n","import { InsertAction, StrikeThroughAction, SurroundAction } from \"./Gesture\"\n\n/**\n * @group Gesture\n * @source\n */\nexport type TGestureConfiguration = {\n  surround: SurroundAction\n  strikeThrough: StrikeThroughAction\n  insert: InsertAction\n}\n\n/**\n * @group Gesture\n * @source\n */\nexport const DefaultGestureConfiguration: TGestureConfiguration = {\n  surround: SurroundAction.Select,\n  strikeThrough: StrikeThroughAction.Draw,\n  insert: InsertAction.LineBreak\n}\n","import { EditorTool } from \"../Constants\"\nimport { LoggerManager, LoggerCategory } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  IIDecorator,\n  IIStroke,\n  SymbolType,\n  IIText,\n  DecoratorKind,\n  IISymbolGroup,\n  TIISymbol,\n  Box,\n  TPoint,\n  IIRecognizedText,\n  RecognizedKind,\n} from \"../symbol\"\nimport { RecognizerWebSocket } from \"../recognizer\"\nimport { IISVGRenderer } from \"../renderer\"\nimport { IIHistoryManager, TIIHistoryChanges } from \"../history\"\nimport { computeAverage, isBetween, PartialDeep } from \"../utils\"\nimport { IITranslateManager } from \"../manager/IITranslateManager\"\nimport { IITextManager } from \"../manager/IITextManager\"\nimport { InteractiveInkEditor } from \"../editor\"\nimport { InsertAction, StrikeThroughAction, SurroundAction, TGesture } from \"./Gesture\"\nimport { DefaultGestureConfiguration, TGestureConfiguration } from \"./GestureConfiguration\"\n\n/**\n * @group Gesture\n */\nexport class IIGestureManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.GESTURE)\n\n  insertAction: InsertAction = InsertAction.LineBreak\n  surroundAction: SurroundAction = SurroundAction.Select\n  strikeThroughAction: StrikeThroughAction = StrikeThroughAction.Draw\n  editor: InteractiveInkEditor\n\n  constructor(editor: InteractiveInkEditor, gestureAction?: PartialDeep<TGestureConfiguration>)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.surroundAction = gestureAction?.surround || DefaultGestureConfiguration.surround\n    this.strikeThroughAction = gestureAction?.strikeThrough || DefaultGestureConfiguration.strikeThrough\n    this.insertAction = gestureAction?.insert || DefaultGestureConfiguration.insert\n  }\n\n  get renderer(): IISVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get recognizer(): RecognizerWebSocket\n  {\n    return this.editor.recognizer\n  }\n\n  get translator(): IITranslateManager\n  {\n    return this.editor.translator\n  }\n\n  get texter(): IITextManager\n  {\n    return this.editor.texter\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get history(): IIHistoryManager\n  {\n    return this.editor.history\n  }\n\n  get rowHeight(): number\n  {\n    return this.editor.configuration.rendering.guides.gap\n  }\n\n  get strokeSpaceWidth(): number\n  {\n    return this.editor.configuration.rendering.guides.gap * 2\n  }\n\n  async applySurroundGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.info(\"applySurroundGesture\", { gestureStroke, gesture })\n    const changes: TIIHistoryChanges = {}\n    const ids = this.model.symbols.filter(s => gestureStroke.bounds.contains(s.bounds)).map(s => s.id)\n    switch (this.surroundAction) {\n      case SurroundAction.Select: {\n        if (ids.length) {\n          this.editor.tool = EditorTool.Select\n          this.editor.select(ids)\n        }\n        break\n      }\n      case SurroundAction.Highlight: {\n        const symbolIds: string[] = []\n        changes.decorator = []\n        ids.forEach(id =>\n        {\n          const sym = this.model.getRootSymbol(id)\n          if (sym && [SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(sym.type) && !symbolIds.includes(sym.id)) {\n            const symWithDec = sym as (IIText | IIStroke | IISymbolGroup | IIRecognizedText)\n            const highlight = new IIDecorator(DecoratorKind.Highlight, this.editor.penStyle)\n            const index = symWithDec.decorators.findIndex(d => d.kind === DecoratorKind.Highlight)\n            const added = index === -1\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            added ? symWithDec.decorators.push(highlight) : symWithDec.decorators.splice(index, 1)\n            this.model.updateSymbol(symWithDec)\n            this.renderer.drawSymbol(symWithDec)\n            symbolIds.push(symWithDec.id)\n            changes.decorator!.push({ symbol: symWithDec, decorator: highlight, added })\n          }\n        })\n        if (changes.decorator.length) {\n          this.history.push(this.model, changes)\n        }\n        break\n      }\n      case SurroundAction.Surround: {\n        const symbolIds: string[] = []\n        changes.decorator = []\n        ids.forEach(id =>\n        {\n          const sym = this.model.getRootSymbol(id)\n          if (sym && [SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(sym.type) && !symbolIds.includes(sym.id)) {\n            const symWithDec = sym as (IIText | IIStroke | IISymbolGroup | IIRecognizedText)\n            const surround = new IIDecorator(DecoratorKind.Surround, this.editor.penStyle)\n            const index = symWithDec.decorators.findIndex(d => d.kind === DecoratorKind.Surround)\n            const added = index === -1\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            added ? symWithDec.decorators.push(surround) : symWithDec.decorators.splice(index, 1)\n            this.model.updateSymbol(symWithDec)\n            this.renderer.drawSymbol(symWithDec)\n            changes.decorator!.push({ symbol: symWithDec, decorator: surround, added })\n            symbolIds.push(symWithDec.id)\n          }\n        })\n        this.history.push(this.model, changes)\n        break\n      }\n      default:\n        this.#logger.error(\"applySurroundGesture\", `Unknow surroundAction: ${ this.surroundAction }, values allowed are: ${ SurroundAction.Highlight }, ${ SurroundAction.Select }, ${ SurroundAction.Surround }`)\n        break\n    }\n    return\n  }\n\n  protected computeScratchOnStrokes(gesture: TGesture, stroke: IIStroke): IIStroke[]\n  {\n    const newStrokes: IIStroke[] = []\n    const partPointersToRemove = gesture.subStrokes?.find(ss => ss.fullStrokeId === stroke.id)\n    if (partPointersToRemove) {\n      const strokePartToErase = new IIStroke()\n      partPointersToRemove.x.forEach((x, i) => strokePartToErase.addPointer({ x, y: partPointersToRemove.y[i], p: 1, t: 1 }))\n      const subStrokes = IIStroke.substract(stroke, strokePartToErase)\n      if (subStrokes.before && subStrokes.before.pointers.length > 1) newStrokes.push(subStrokes.before)\n      if (subStrokes.after && subStrokes.after.pointers.length > 1) newStrokes.push(subStrokes.after)\n    }\n    return newStrokes\n  }\n\n  protected computeScratchOnText(gestureStroke: IIStroke, textSymbol: IIText): IIText | undefined\n  {\n    const charsToRemove = textSymbol.getCharsOverlaps(gestureStroke.pointers)\n    if (textSymbol.chars.length == charsToRemove.length) {\n      return\n    }\n    else {\n      charsToRemove.forEach(c =>\n      {\n        const cIndex = textSymbol.chars.findIndex(c1 => c1.id === c.id)\n        textSymbol.chars.splice(cIndex, 1)\n      })\n      this.texter.updateBounds(textSymbol)\n      return textSymbol\n    }\n  }\n\n  protected computeScratchOnSymbol(gestureStroke: IIStroke, gesture: TGesture, symbol: TIISymbol): { erased?: boolean, replaced?: TIISymbol[] }\n  {\n    switch (symbol.type) {\n      case SymbolType.Stroke: {\n        const strokesScratchedResult = this.computeScratchOnStrokes(gesture, symbol)\n        if (strokesScratchedResult.length) {\n          return {\n            replaced: strokesScratchedResult\n          }\n        }\n        else {\n          return { erased: true }\n        }\n      }\n      case SymbolType.Recognized: {\n        if (symbol.kind === RecognizedKind.Text) {\n          const childrenNotTouch = symbol.strokes.filter(s => !gestureStroke.bounds.overlaps(s.bounds))\n          const childrenTouch = symbol.strokes.filter(s => gestureStroke.bounds.overlaps(s.bounds))\n          const results = childrenTouch.map(s =>\n          {\n            return {\n              symbol: s,\n              result: this.computeScratchOnStrokes(gesture, s)\n            }\n          })\n          if (childrenNotTouch.length === 0 && results.every(r => r.result.length === 0)) {\n            return { erased: true }\n          }\n          else {\n            const strokesToConserve: IIStroke[] = childrenNotTouch.concat(...results.flatMap(r => r.result))\n            const strokeText = new IIRecognizedText(strokesToConserve, { baseline: symbol.baseline, xHeight: symbol.xHeight }, symbol.style)\n            strokeText.decorators = symbol.decorators\n            return {\n              replaced: [strokeText]\n            }\n          }\n        }\n        return {}\n      }\n      case SymbolType.Group: {\n        const childrenNotTouch = symbol.children.filter(s => !gestureStroke.bounds.overlaps(s.bounds))\n        const childrenTouch = symbol.children.filter(s => gestureStroke.bounds.overlaps(s.bounds))\n        const results = childrenTouch.map(s =>\n        {\n          return {\n            symbol: s,\n            result: this.computeScratchOnSymbol(gestureStroke, gesture, s)\n          }\n        })\n        if (childrenNotTouch.length === 0 && results.every(r => r.result.erased)) {\n          return { erased: true }\n        }\n        else {\n          const symbolsGroup: TIISymbol[] = childrenNotTouch\n          results.forEach(r =>\n          {\n            if (r.result.replaced) {\n              symbolsGroup.push(...r.result.replaced)\n            }\n          })\n          const newGroup = new IISymbolGroup(symbolsGroup, symbol.style)\n          newGroup.decorators = symbol.decorators\n          return {\n            replaced: [newGroup]\n          }\n        }\n      }\n      case SymbolType.Text: {\n        const textScratchedResult = this.computeScratchOnText(gestureStroke, symbol)\n        if (textScratchedResult) {\n          return {\n            replaced: [textScratchedResult]\n          }\n        }\n        else {\n          return {\n            erased: true\n          }\n        }\n      }\n      case SymbolType.Shape:\n      case SymbolType.Edge: {\n        return {\n          erased: true\n        }\n      }\n    }\n  }\n\n  async applyScratch(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.debug(\"applyScratchGesture\", { gestureStroke, gesture })\n    if (!gesture.strokeIds.length) {\n      this.#logger.warn(\"applyScratchGesture\", \"Unable to apply underline because there are no strokes\")\n      return\n    }\n    const symbolsToUpdate: TIISymbol[] = []\n    const symbolsToErase: TIISymbol[] = []\n    const symbolsToReplace: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    gesture.strokeIds.forEach(id =>\n    {\n      const sym = this.model.getRootSymbol(id)\n      if (sym && !symbolsToErase.some(s => s.id === sym.id) && !symbolsToReplace.oldSymbols.some(s => s.id === sym.id)) {\n        const result = this.computeScratchOnSymbol(gestureStroke, gesture, sym)\n        if (result.erased) symbolsToErase.push(sym)\n        else if (result.replaced) {\n          symbolsToReplace.newSymbols.push(...result.replaced)\n          symbolsToReplace.oldSymbols.push(sym)\n        }\n      }\n    })\n\n    const promises: Promise<void | TIISymbol[]>[] = []\n    const changes: TIIHistoryChanges = {}\n    if (symbolsToUpdate.length) {\n      promises.push(this.editor.updateSymbols(symbolsToUpdate, false))\n      changes.updated = symbolsToUpdate\n    }\n\n    if (symbolsToErase.length) {\n      promises.push(this.editor.removeSymbols(symbolsToErase.map(s => s.id), false))\n      changes.erased = symbolsToErase\n    }\n\n    if (symbolsToReplace.newSymbols.length) {\n      changes.replaced = symbolsToReplace\n      promises.push(this.editor.replaceSymbols(symbolsToReplace.oldSymbols, symbolsToReplace.newSymbols, false))\n    }\n\n    this.history.push(this.model, changes)\n    await Promise.all(promises)\n  }\n\n  async applyJoinGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.debug(\"applyJoinGesture\", { gestureStroke, gesture })\n\n    const symbolsAbove = this.model.symbols.filter(s => this.model.isSymbolAbove(gestureStroke, s))\n    const symbolsRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s))\n\n    const symbolsBeforeGestureInRow = symbolsRow.filter(s => s.bounds.xMax <= gestureStroke.bounds.xMid)\n    const symbolsOnGestureInRow = symbolsRow.filter(s => s.bounds.xMax > gestureStroke.bounds.xMid && s.bounds.xMin <= gestureStroke.bounds.xMid)\n    const symbolsAfterGestureInRow = symbolsRow.filter(s => s.bounds.xMin > gestureStroke.bounds.xMid)\n    const symbolsBelow = this.model.symbols.filter(s => this.model.isSymbolBelow(gestureStroke, s))\n\n    const changes: TIIHistoryChanges = {}\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    if (symbolsOnGestureInRow.length) {\n      const symbolToJoin = symbolsOnGestureInRow[0]\n      if (symbolToJoin?.type === SymbolType.Group) {\n        const children = symbolToJoin.children.map(c => c.clone())\n        const childBefore = children.filter(c => c.bounds.xMid <= gestureStroke.bounds.xMid)\n        const childAfter = children.filter(c => c.bounds.xMid > gestureStroke.bounds.xMid)\n        if (childBefore.length && childAfter.length) {\n          const tx = Math.max(...childBefore.map(c => c.bounds.xMax)) - Math.min(...childAfter.map(c => c.bounds.xMin))\n          childAfter.forEach(c => this.translator.applyToSymbol(c, tx, 0))\n          const newGroup = new IISymbolGroup(children, symbolToJoin.style)\n          newGroup.decorators = symbolToJoin.decorators.map(d => d.clone())\n          changes.replaced = {\n            oldSymbols: [symbolToJoin],\n            newSymbols: [newGroup]\n          }\n          if (symbolsAfterGestureInRow.length) {\n            translate.push({ symbols: symbolsAfterGestureInRow, tx, ty: 0 })\n          }\n        }\n        else if (symbolsAfterGestureInRow.length) {\n          const tx = symbolToJoin.bounds.xMax - Math.min(...symbolsAfterGestureInRow.map(s => s.bounds.xMin))\n          translate.push({ symbols: symbolsAfterGestureInRow, tx, ty: 0 })\n        }\n      }\n      else if (symbolToJoin?.type === SymbolType.Recognized) {\n        const strokeText = symbolToJoin.clone()\n        const childBefore = strokeText.strokes.filter(c => c.bounds.xMid <= gestureStroke.bounds.xMid)\n        const childAfter = strokeText.strokes.filter(c => c.bounds.xMid > gestureStroke.bounds.xMid)\n        if (childBefore.length && childAfter.length) {\n          const tx = Math.max(...childBefore.map(c => c.bounds.xMax)) - Math.min(...childAfter.map(c => c.bounds.xMin))\n          childAfter.forEach(c => this.translator.applyToSymbol(c, tx, 0))\n          changes.replaced = {\n            oldSymbols: [symbolToJoin],\n            newSymbols: [strokeText]\n          }\n          if (symbolsAfterGestureInRow.length) {\n            translate.push({ symbols: symbolsAfterGestureInRow, tx, ty: 0 })\n          }\n        }\n        else if (symbolsAfterGestureInRow.length) {\n          const tx = symbolToJoin.bounds.xMax - Math.min(...symbolsAfterGestureInRow.map(s => s.bounds.xMin))\n          translate.push({ symbols: symbolsAfterGestureInRow, tx, ty: 0 })\n        }\n      }\n    }\n    else if (symbolsBeforeGestureInRow.length && symbolsAfterGestureInRow.length) {\n      const lastSymbBefore = this.model.getLastSymbol(symbolsBeforeGestureInRow)!\n      const firstSymbolAfter = this.model.getFirstSymbol(symbolsAfterGestureInRow)!\n\n      const lastXBefore = Math.max(...symbolsBeforeGestureInRow.map(s => s.bounds.xMax))\n      const firstXAfter = Math.min(...symbolsAfterGestureInRow.map(s => s.bounds.xMin))\n      const translateX = lastXBefore - firstXAfter\n\n      const lastSymbBeforeClone = lastSymbBefore.clone()\n      const firstSymbolAfterClone = firstSymbolAfter.clone()\n      this.translator.applyToSymbol(firstSymbolAfterClone, translateX, 0)\n      const symbolsToGroup = lastSymbBefore.type === SymbolType.Group ? (lastSymbBeforeClone as IISymbolGroup).children : [lastSymbBeforeClone]\n      symbolsToGroup.push(...(firstSymbolAfterClone.type === SymbolType.Group ? (firstSymbolAfterClone as IISymbolGroup).children : [firstSymbolAfterClone]))\n\n      if (symbolsToGroup.every(s => s.type === SymbolType.Text)) {\n        const texts = symbolsToGroup as IIText[]\n        const text = new IIText(texts.flatMap(s => s.chars), texts[0].point, Box.createFromBoxes(texts.map(t => t.bounds)))\n        this.texter.setBounds(text)\n        changes.replaced = {\n          oldSymbols: [lastSymbBefore, firstSymbolAfter],\n          newSymbols: [text]\n        }\n      }\n      else if (symbolsToGroup.every(s => s.type === SymbolType.Recognized)) {\n        const strokeTexts = symbolsToGroup as IIRecognizedText[]\n        const strokeText = new IIRecognizedText(strokeTexts.flatMap(s => s.strokes), strokeTexts[0], strokeTexts[0].style)\n        changes.replaced = {\n          oldSymbols: [lastSymbBefore, firstSymbolAfter],\n          newSymbols: [strokeText]\n        }\n      }\n      else {\n        const group = new IISymbolGroup(symbolsToGroup, lastSymbBefore.style)\n        if ([SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(lastSymbBefore.type)) {\n          (lastSymbBefore as IIStroke).decorators.forEach(d =>\n          {\n            group.decorators.push(new IIDecorator(d.kind, d.style))\n          })\n        }\n        if ([SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(firstSymbolAfter.type)) {\n          (firstSymbolAfter as IIStroke).decorators.forEach(d =>\n          {\n            if (!group.decorators.some(d1 => d1.kind == d.kind)) {\n              group.decorators.push(new IIDecorator(d.kind, d.style))\n            }\n          })\n        }\n\n        changes.replaced = {\n          oldSymbols: [lastSymbBefore, firstSymbolAfter],\n          newSymbols: [group]\n        }\n      }\n\n      const rest = symbolsAfterGestureInRow.filter(s => s.id !== firstSymbolAfter.id)\n      if (rest.length) {\n        translate.push({ symbols: rest, tx: translateX, ty: 0 })\n      }\n    }\n    else if (symbolsBeforeGestureInRow.length) {\n      const lastSymbolBeforeGesture = this.model.getLastSymbol(symbolsBeforeGestureInRow)!\n      const firstSymbolAfterGesture = this.model.getFirstSymbol(symbolsBelow)\n      if (firstSymbolAfterGesture) {\n        if (this.model.roundToLineGuide(lastSymbolBeforeGesture.bounds.yMid) >= this.model.roundToLineGuide(firstSymbolAfterGesture.bounds.yMid - this.rowHeight)) {\n          const symbolInNextRow = symbolsBelow.filter(s => this.model.isSymbolInRow(firstSymbolAfterGesture, s))\n          if (symbolInNextRow.length) {\n            const translateX = lastSymbolBeforeGesture.bounds.xMax + this.strokeSpaceWidth - firstSymbolAfterGesture.bounds.xMin\n            translate.push({ symbols: symbolInNextRow, tx: translateX, ty: -this.rowHeight })\n          }\n          const symbolsAfterNextRow = symbolsBelow.filter(s => this.model.isSymbolBelow(firstSymbolAfterGesture, s))\n          if (symbolsAfterNextRow.length) {\n            translate.push({ symbols: symbolsAfterNextRow, tx: 0, ty: -this.rowHeight })\n          }\n        }\n      }\n      else {\n        translate.push({ symbols: symbolsBelow, tx: 0, ty: -this.rowHeight })\n      }\n    }\n    else if (symbolsAfterGestureInRow.length) {\n      const firstSymbolAfterGesture = this.model.getFirstSymbol(symbolsAfterGestureInRow)!\n      const lastSymbolAbove = this.model.getLastSymbol(symbolsAbove)\n      if (lastSymbolAbove) {\n        if (this.model.roundToLineGuide(lastSymbolAbove.bounds.yMid) >= this.model.roundToLineGuide(firstSymbolAfterGesture.bounds.yMid - this.rowHeight)) {\n          const translateX = lastSymbolAbove.bounds.xMax + this.strokeSpaceWidth - firstSymbolAfterGesture.bounds.xMin\n          translate.push({ symbols: symbolsAfterGestureInRow, tx: translateX, ty: -this.rowHeight })\n        }\n        else {\n          translate.push({ symbols: symbolsAfterGestureInRow, tx: 0, ty: -this.rowHeight })\n        }\n\n        if (symbolsBelow.length) {\n          translate.push({ symbols: symbolsBelow, tx: 0, ty: -this.rowHeight })\n        }\n      }\n      else {\n        translate.push({ symbols: symbolsAfterGestureInRow.concat(...symbolsBelow), tx: 0, ty: -this.rowHeight })\n      }\n\n    }\n    if (changes.replaced?.oldSymbols.length) {\n      this.editor.replaceSymbols(changes.replaced.oldSymbols, changes.replaced.newSymbols, false)\n    }\n    if (translate.length) {\n      changes.translate = translate\n      Promise.all(translate.map(tr => this.translator.translate(tr.symbols, tr.tx, tr.ty, false)))\n    }\n    this.history.push(this.model, changes)\n  }\n\n  protected createStrokesFromGestureSubStroke(strokeOrigin: IIStroke, subStrokes: { x: number[], y: number[] }[]): IIStroke[]\n  {\n    const strokes: IIStroke[] = []\n    if (subStrokes[0]) {\n      const subStroke = new IIStroke(strokeOrigin.style)\n      subStrokes![0].x.forEach((x, i) =>\n      {\n        subStroke.pointers.push({\n          x,\n          y: subStrokes![0].y[i],\n          p: strokeOrigin.pointers.at(i)?.p || 1,\n          t: strokeOrigin.pointers.at(i)?.t || Math.max(...subStroke.pointers.map(p => p.t + 20))\n        })\n      })\n      strokes.push(subStroke)\n    }\n    if (subStrokes[1]) {\n      const subStroke = new IIStroke(strokeOrigin.style)\n      subStrokes[1].x.forEach((x, i) =>\n      {\n        subStroke.pointers.push({\n          x,\n          y: subStrokes![1].y[i],\n          p: strokeOrigin.pointers.at(subStroke.pointers.length + i)?.p || 1,\n          t: strokeOrigin.pointers.at(subStroke.pointers.length + i)?.t || Math.max(...subStroke.pointers.map(p => p.t + 20))\n        })\n      })\n      strokes.push(subStroke)\n    }\n    return strokes\n  }\n\n  protected computeSplitStroke(strokeOrigin: IIStroke, subStrokes: { x: number[], y: number[] }[]): { before?: IIStroke, after?: IIStroke }\n  {\n    let after: IIStroke | undefined\n    const newStrokes = this.createStrokesFromGestureSubStroke(strokeOrigin, subStrokes)\n\n    if (newStrokes[1]) {\n      after = newStrokes[1]\n      this.translator.applyToSymbol(after, this.strokeSpaceWidth, 0)\n    }\n    return {\n      before: newStrokes[0],\n      after\n    }\n  }\n\n  protected computeSplitStrokeInGroup(gestureStroke: IIStroke, group: IISymbolGroup, subStrokes: { fullStrokeId: string, x: number[], y: number[] }[]): IISymbolGroup[]\n  {\n    const newGroups: IISymbolGroup[] = []\n    const symbolsBefore: TIISymbol[] = []\n    const symbolsAfter: TIISymbol[] = []\n\n    const strokeIdToSplit = subStrokes[0].fullStrokeId\n\n    group.children.forEach(gs =>\n    {\n      if (gs.id === strokeIdToSplit) {\n        const subStroke = this.computeSplitStroke(gs as IIStroke, subStrokes)\n        if (subStroke.before) {\n          symbolsBefore.push(subStroke.before)\n        }\n        if (subStroke.after) {\n          symbolsAfter.push(subStroke.after)\n        }\n      }\n      else if (gs.bounds.xMid < gestureStroke.bounds.xMid) {\n        symbolsBefore.push(gs)\n      }\n      else if (gs.bounds.xMid > gestureStroke.bounds.xMid) {\n        this.translator.applyToSymbol(gs, this.strokeSpaceWidth, 0)\n        symbolsAfter.push(gs)\n      }\n    })\n\n    if (symbolsBefore.length) {\n      newGroups.push(new IISymbolGroup(symbolsBefore, group.style))\n    }\n    if (symbolsAfter.length) {\n      newGroups.push(new IISymbolGroup(symbolsAfter, group.style))\n    }\n    return newGroups\n  }\n\n  protected computeChangesOnSplitStroke(gestureStroke: IIStroke, strokeIdToSplit: string, subStrokes: { fullStrokeId: string, x: number[], y: number[] }[]): TIIHistoryChanges\n  {\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    const replaced: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    const symbolsAfterGestureInRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s) && gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const symbolToSplit = this.model.getRootSymbol(strokeIdToSplit)\n    if (symbolToSplit?.type === SymbolType.Group) {\n      const newGroups = this.computeSplitStrokeInGroup(gestureStroke, symbolToSplit, subStrokes)\n      replaced.newSymbols.push(...newGroups)\n      replaced.oldSymbols.push(symbolToSplit)\n    }\n    else if (symbolToSplit?.type === SymbolType.Stroke) {\n      const newStrokes = this.computeSplitStroke(symbolToSplit, subStrokes)\n      if (newStrokes.before) {\n        replaced.newSymbols.push(newStrokes.before)\n      }\n      if (newStrokes.after) {\n        replaced.newSymbols.push(newStrokes.after)\n      }\n      replaced.oldSymbols.push(symbolToSplit)\n    }\n    else if (symbolToSplit?.type === SymbolType.Recognized) {\n      const strokesToSplit = symbolToSplit.strokes.find(s => s.id === strokeIdToSplit)!\n      const strokesBefore = symbolToSplit.strokes.filter(s => s.id !== strokeIdToSplit && s.bounds.xMid < gestureStroke.bounds.xMid)\n      const strokesAfter = symbolToSplit.strokes.filter(s => s.id !== strokeIdToSplit && s.bounds.xMid > gestureStroke.bounds.xMid)\n      const newStrokes = this.computeSplitStroke(strokesToSplit, subStrokes)\n      if (newStrokes.before) {\n        replaced.newSymbols.push(...strokesBefore, newStrokes.before)\n      }\n      if (newStrokes.after) {\n        replaced.newSymbols.push(newStrokes.after, ...strokesAfter)\n      }\n      replaced.oldSymbols.push(symbolToSplit)\n    }\n    if (symbolsAfterGestureInRow.length) {\n      translate.push({ symbols: symbolsAfterGestureInRow, tx: this.strokeSpaceWidth, ty: 0 })\n    }\n\n    return {\n      translate,\n      replaced\n    }\n  }\n\n  protected computeChangesOnSplitGroup(gestureStroke: IIStroke, groupToSplit: IISymbolGroup): TIIHistoryChanges\n  {\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    const replaced: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    const symbolsAfterGestureInRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s) && gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const groupSymbolsBefore = groupToSplit.children.filter(s => s.bounds.xMid <= gestureStroke.bounds.xMid)\n    const groupsSymbolsAfter = groupToSplit.children.filter(s => s.bounds.xMid > gestureStroke.bounds.xMid)\n\n    replaced.oldSymbols.push(groupToSplit)\n    if (groupSymbolsBefore.length) {\n      const groupBefore = new IISymbolGroup(groupSymbolsBefore.map(s => s.clone()), groupToSplit.style)\n      groupBefore.decorators = groupToSplit.decorators.map(d => new IIDecorator(d.kind, d.style))\n      replaced.newSymbols.push(groupBefore)\n    }\n    if (groupsSymbolsAfter.length) {\n      const grouAfter = new IISymbolGroup(groupsSymbolsAfter.map(s => s.clone()), groupToSplit.style)\n      grouAfter.decorators = groupToSplit.decorators.map(d => new IIDecorator(d.kind, d.style))\n      this.translator.applyToSymbol(grouAfter, this.strokeSpaceWidth, 0)\n      replaced.newSymbols.push(grouAfter)\n    }\n    if (symbolsAfterGestureInRow?.length) {\n      translate.push({ symbols: symbolsAfterGestureInRow.filter(s => s.id !== groupToSplit.id), tx: this.strokeSpaceWidth, ty: 0 })\n    }\n\n    return {\n      translate,\n      replaced\n    }\n  }\n\n  protected computeChangesOnSplitStrokeText(gestureStroke: IIStroke, strokeTextToSplit: IIRecognizedText): TIIHistoryChanges\n  {\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    const replaced: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    const symbolsAfterGestureInRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s) && gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const strokesBefore = strokeTextToSplit.strokes.filter(s => s.bounds.xMid <= gestureStroke.bounds.xMid)\n    const strokesAfter = strokeTextToSplit.strokes.filter(s => s.bounds.xMid > gestureStroke.bounds.xMid)\n\n    replaced.oldSymbols.push(strokeTextToSplit)\n    if (strokesBefore.length) {\n      const strokeTextBefore = new IIRecognizedText(strokesBefore.map(s => s.clone()), strokeTextToSplit, strokeTextToSplit.style)\n      strokeTextBefore.decorators = strokeTextToSplit.decorators.map(d => new IIDecorator(d.kind, d.style))\n      replaced.newSymbols.push(strokeTextBefore)\n    }\n    if (strokesAfter.length) {\n      const strokeTextAfter = new IIRecognizedText(strokesAfter.map(s => s.clone()), strokeTextToSplit, strokeTextToSplit.style)\n      strokeTextAfter.decorators = strokeTextToSplit.decorators.map(d => new IIDecorator(d.kind, d.style))\n      this.translator.applyToSymbol(strokeTextAfter, this.strokeSpaceWidth, 0)\n      replaced.newSymbols.push(strokeTextAfter)\n    }\n    if (symbolsAfterGestureInRow?.length) {\n      translate.push({ symbols: symbolsAfterGestureInRow.filter(s => s.id !== strokeTextToSplit.id), tx: this.strokeSpaceWidth, ty: 0 })\n    }\n\n    return {\n      translate,\n      replaced\n    }\n  }\n\n  protected computeChangesOnSplitText(gestureStroke: IIStroke, textToSplit: IIText): TIIHistoryChanges\n  {\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    const replaced: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    const symbolsAfterGestureInRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s) && gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const charsBefore = textToSplit.chars.filter(c => c.bounds.x + c.bounds.width / 2 <= gestureStroke.bounds.xMid)\n    const charsAfter = textToSplit.chars.filter(c => c.bounds.x + c.bounds.width / 2 > gestureStroke.bounds.xMid)\n    const newTexts: IIText[] = []\n    if (charsBefore.length && charsAfter.length) {\n      const textBefore = new IIText(charsBefore, textToSplit.point, Box.createFromBoxes(charsBefore.map(c => c.bounds)))\n      this.texter.setBounds(textBefore)\n      newTexts.push(textBefore)\n      const pointAfter: TPoint = {\n        x: textBefore.point.x + textBefore.bounds.width + this.texter.getSpaceWidth(computeAverage(textBefore.chars.map(c => c.fontSize))),\n        y: textBefore.point.y\n      }\n      const textAfter = new IIText(charsAfter, pointAfter, Box.createFromBoxes(charsAfter.map(c => c.bounds)))\n      this.texter.setBounds(textAfter)\n      newTexts.push(textAfter)\n      replaced.newSymbols = newTexts\n      replaced.oldSymbols = [textToSplit]\n    }\n    if (symbolsAfterGestureInRow?.length) {\n      translate.push({ symbols: symbolsAfterGestureInRow.filter(s => s.id !== gestureStroke.id), tx: this.strokeSpaceWidth, ty: 0 })\n    }\n\n    return {\n      translate,\n      replaced\n    }\n  }\n\n  async applyInsertGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.debug(\"applyInsertGesture\", { gestureStroke, gesture })\n\n    const symbolsRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s))\n    const textToSplit = symbolsRow.find(s => s.type === SymbolType.Text && isBetween(gestureStroke.bounds.xMid, s.bounds.xMin, s.bounds.xMax)) as IIText | undefined\n    const groupToSplit = symbolsRow.find(s => s.type === SymbolType.Group && isBetween(gestureStroke.bounds.xMid, s.bounds.xMin, s.bounds.xMax)) as IISymbolGroup | undefined\n    const strokeTextToSplit = symbolsRow.find(s => s.type === SymbolType.Recognized && isBetween(gestureStroke.bounds.xMid, s.bounds.xMin, s.bounds.xMax)) as IIRecognizedText | undefined\n\n    const symbolsBeforeGestureInRow = symbolsRow.filter(s => gestureStroke.bounds.xMid > s.bounds.xMax)\n    const symbolsAfterGestureInRow = symbolsRow.filter(s => gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const symbolsBelow = this.model.symbols.filter(s => this.model.isSymbolBelow(gestureStroke, s))\n\n\n    let changes: TIIHistoryChanges | undefined\n    if (gesture.strokeIds.length && gesture.subStrokes?.length) {\n      changes = this.computeChangesOnSplitStroke(gestureStroke, gesture.strokeIds[0], gesture.subStrokes)\n    }\n    else if (groupToSplit) {\n      changes = this.computeChangesOnSplitGroup(gestureStroke, groupToSplit)\n    }\n    else if (textToSplit) {\n      changes = this.computeChangesOnSplitText(gestureStroke, textToSplit)\n    }\n    else if (strokeTextToSplit) {\n      changes = this.computeChangesOnSplitStrokeText(gestureStroke, strokeTextToSplit)\n    }\n    else if (symbolsAfterGestureInRow.length) {\n      const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n      let translateX = 0\n      if (symbolsBeforeGestureInRow.length) {\n        translateX = Math.min(...symbolsBeforeGestureInRow.map(s => s.bounds.xMin)) - Math.min(...symbolsAfterGestureInRow.map(s => s.bounds.xMin))\n      }\n\n      switch (this.insertAction) {\n        case InsertAction.LineBreak:\n          translate.push({ symbols: symbolsAfterGestureInRow, tx: translateX, ty: this.rowHeight })\n          if (symbolsBelow.length) {\n            translate.push({ symbols: symbolsBelow, tx: 0, ty: this.rowHeight })\n          }\n          break\n        case InsertAction.Insert:\n          translate.push({ symbols: symbolsAfterGestureInRow, tx: this.strokeSpaceWidth * 2, ty: 0 })\n          break\n      }\n      changes = { translate }\n    }\n    else if (symbolsBeforeGestureInRow.length && symbolsBelow.length && this.insertAction === InsertAction.LineBreak) {\n      changes = { translate: [{ symbols: symbolsBelow, tx: 0, ty: this.rowHeight }] }\n    }\n\n    if (changes) {\n      const promises: Promise<void>[] = []\n      if (changes.translate?.length) {\n        promises.push(...changes.translate.map(tr => this.translator.translate(tr.symbols, tr.tx, tr.ty, false)))\n      }\n      if (changes.replaced?.newSymbols.length) {\n        promises.push(this.editor.replaceSymbols(changes.replaced.oldSymbols, changes.replaced.newSymbols, false))\n      }\n      this.history.push(this.model, changes)\n      await Promise.all(promises)\n    }\n  }\n\n  async applyUnderlineGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.debug(\"applyUnderlineGesture\", { gestureStroke, gesture })\n    if (!gesture.strokeIds.length) {\n      this.#logger.warn(\"applyUnderlineGesture\", \"Unable to apply underline because there are no strokes\")\n      return\n    }\n\n    const changes: TIIHistoryChanges = { decorator: [] }\n    const symbolIds: string[] = []\n    gesture.strokeIds.forEach(id =>\n    {\n      const sym = this.model.getRootSymbol(id)\n      if (sym && [SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(sym.type) && !symbolIds.includes(sym.id)) {\n        const symWithDec = sym as (IIText | IIStroke | IISymbolGroup | IIRecognizedText)\n        const underline = new IIDecorator(DecoratorKind.Underline, this.editor.penStyle)\n        const index = symWithDec.decorators.findIndex(d => d.kind === DecoratorKind.Underline)\n        const added = index === -1\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        added ? symWithDec.decorators.push(underline) : symWithDec.decorators.splice(index, 1)\n        this.model.updateSymbol(symWithDec)\n        this.renderer.drawSymbol(symWithDec)\n        changes.decorator?.push({ symbol: symWithDec, decorator: underline, added })\n        symbolIds.push(symWithDec.id)\n      }\n    })\n    if (changes.decorator?.length) {\n      this.history.push(this.model, changes)\n    }\n  }\n\n  async applyStrikeThroughGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void | TIISymbol[]>\n  {\n    this.#logger.debug(\"applyStrikeThroughGesture\", { gestureStroke, gesture })\n    if (!gesture.strokeIds.length) {\n      this.#logger.warn(\"applyStrikeThroughGesture\", \"Unable to apply strikethrough because there are no strokes\")\n      return\n    }\n    switch (this.strikeThroughAction) {\n      case StrikeThroughAction.Draw: {\n        const changes: TIIHistoryChanges = { decorator: [] }\n        const symbolIds: string[] = []\n        gesture.strokeIds.forEach(id =>\n        {\n          const symbol = this.model.getRootSymbol(id)\n          if (symbol && [SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(symbol.type) && !symbolIds.includes(symbol.id)) {\n            const symWithDec = symbol as (IIText | IIStroke | IISymbolGroup | IIRecognizedText)\n            const strikethrough = new IIDecorator(DecoratorKind.Strikethrough, this.editor.penStyle)\n            const index = symWithDec.decorators.findIndex(d => d.kind === DecoratorKind.Strikethrough)\n            const added = index === -1\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            added ? symWithDec.decorators.push(strikethrough) : symWithDec.decorators.splice(index, 1)\n            this.model.updateSymbol(symWithDec)\n            this.renderer.drawSymbol(symWithDec)\n            changes.decorator?.push({ symbol: symWithDec, decorator: strikethrough, added })\n            symbolIds.push(symWithDec.id)\n          }\n        })\n        if (changes.decorator?.length) {\n          this.history.push(this.model, changes)\n        }\n        break\n      }\n      case StrikeThroughAction.Erase: {\n        return this.editor.removeSymbols(gesture.strokeIds)\n      }\n      default:\n        this.#logger.warn(\"#applyStrikeThroughGesture\", `Unknow OnStrikeThrough: ${ this.strikeThroughAction }, values allowed are: ${ StrikeThroughAction.Draw }, ${ StrikeThroughAction.Erase }`)\n        break\n    }\n  }\n\n  async apply(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.info(\"apply\", { gestureStroke, gesture })\n    this.editor.updateSymbolsStyle([gestureStroke.id], { opacity: (gestureStroke.style.opacity || 1) / 2 }, false)\n    await this.editor.removeSymbol(gestureStroke.id, false)\n    await this.editor.synchronizeStrokesWithJIIX()\n    switch (gesture.gestureType) {\n      case \"UNDERLINE\":\n        await this.applyUnderlineGesture(gestureStroke, gesture)\n        break\n      case \"SCRATCH\":\n        await this.applyScratch(gestureStroke, gesture)\n        break\n      case \"JOIN\":\n        await this.applyJoinGesture(gestureStroke, gesture)\n        break\n      case \"INSERT\":\n        await this.applyInsertGesture(gestureStroke, gesture)\n        break\n      case \"STRIKETHROUGH\":\n        await this.applyStrikeThroughGesture(gestureStroke, gesture)\n        break\n      case \"SURROUND\":\n        await this.applySurroundGesture(gestureStroke, gesture)\n        break\n      default:\n        this.#logger.warn(\"apply\", `Gesture unknow: ${ gesture.gestureType }`)\n        break\n    }\n    this.editor.event.emitGestured({ gestureType: gesture.gestureType, stroke: gestureStroke })\n    this.editor.svgDebugger.apply()\n    return Promise.resolve()\n  }\n\n  async getGestureFromContextLess(gestureStroke: IIStroke): Promise<TGesture | undefined>\n  {\n    const gesture = await this.recognizer.recognizeGesture(gestureStroke)\n    if (!gesture) return\n    switch (gesture.gestureType) {\n      case \"surround\": {\n        const hasSymbolsToSurrond = this.model.symbols.some(s =>\n        {\n          if (s.id !== gestureStroke.id && gestureStroke.bounds.contains(s.bounds)) {\n            return this.surroundAction === SurroundAction.Select || [SymbolType.Group, SymbolType.Stroke, SymbolType.Text].includes(s.type)\n          }\n          return false\n        })\n        if (hasSymbolsToSurrond) {\n          return {\n            gestureType: \"SURROUND\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: [],\n          }\n        }\n        return\n      }\n      case \"left-right\":\n      case \"right-left\": {\n        const symbolsToUnderline = this.model.symbols.filter(s =>\n        {\n          return s.id !== gestureStroke.id && [SymbolType.Text, SymbolType.Stroke, SymbolType.Group].includes(s.type) &&\n            isBetween(s.bounds.xMid, gestureStroke.bounds.xMin, gestureStroke.bounds.xMax) &&\n            isBetween(gestureStroke.bounds.yMid, s.bounds.y + s.bounds.height * 3 / 4, s.bounds.y + s.bounds.height * 5 / 4)\n        })\n        if (symbolsToUnderline.length) {\n          return {\n            gestureType: \"UNDERLINE\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: symbolsToUnderline.map(s => s.id),\n          }\n        }\n        const symbolsToStrikeThrough = this.model.symbols.filter(s =>\n        {\n          return s.id !== gestureStroke.id && [SymbolType.Text, SymbolType.Stroke, SymbolType.Group].includes(s.type) &&\n            isBetween(s.bounds.xMid, gestureStroke.bounds.xMin, gestureStroke.bounds.xMax) &&\n            isBetween(gestureStroke.bounds.yMid, s.bounds.y + s.bounds.height / 4, s.bounds.y + s.bounds.height * 3 / 4)\n        })\n        if (symbolsToStrikeThrough.length) {\n          return {\n            gestureType: \"STRIKETHROUGH\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: symbolsToStrikeThrough.map(s => s.id),\n          }\n        }\n        return\n      }\n      case \"scratch\": {\n        const symbolsToErase = this.model.symbols.filter(s =>\n        {\n          return s.id !== gestureStroke.id &&\n            (\n              gestureStroke.bounds.overlaps(s.bounds) && [SymbolType.Stroke, SymbolType.Text, SymbolType.Group].includes(s.type) ||\n              gestureStroke.bounds.contains(s.bounds) && [SymbolType.Shape, SymbolType.Edge].includes(s.type)\n            )\n        })\n\n        if (symbolsToErase.length) {\n          return {\n            gestureType: \"SCRATCH\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: symbolsToErase.map(s => s.id),\n          }\n        }\n        return\n      }\n      case \"bottom-top\": {\n        const hasSymbolsInRow = this.model.symbols.some(s =>\n          s.id !== gestureStroke.id &&\n          [SymbolType.Text, SymbolType.Stroke, SymbolType.Group].includes(s.type) &&\n          isBetween(s.bounds.yMid, gestureStroke.bounds.yMin, gestureStroke.bounds.yMax)\n        )\n        if (hasSymbolsInRow) {\n          return {\n            gestureType: \"JOIN\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: [],\n          }\n        }\n        return\n      }\n      case \"top-bottom\": {\n        const hasSymbolsInRow = this.model.symbols.some(s =>\n          s.id !== gestureStroke.id &&\n          [SymbolType.Text, SymbolType.Stroke, SymbolType.Group].includes(s.type) &&\n          isBetween(s.bounds.yMid, gestureStroke.bounds.yMin, gestureStroke.bounds.yMax)\n        )\n        if (hasSymbolsInRow) {\n          return {\n            gestureType: \"INSERT\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: [],\n          }\n        }\n        return\n      }\n      case \"none\":\n      default:\n        return\n    }\n  }\n}\n","/**\n * @group Menu\n */\nexport type TSubMenuParam =\n{\n  trigger: HTMLElement,\n  menuTitle?: string,\n  subMenu: HTMLElement,\n  position: \"top\" | \"left\" | \"right\" | \"right-top\" | \"bottom\" | \"bottom-left\" | \"bottom-right\"\n}\n\n/**\n * @group Menu\n */\nexport class IIMenuSub {\n  element: HTMLDivElement\n  content: HTMLElement\n\n  constructor(param : TSubMenuParam) {\n    this.element = document.createElement(\"div\")\n    this.element.classList.add(\"sub-menu\")\n    this.element.appendChild(param.trigger)\n    this.content = document.createElement(\"div\")\n    if(param.menuTitle) {\n      const menuTitleElement = document.createElement(\"h3\")\n      menuTitleElement.classList.add(\"ms-menu-title\")\n      menuTitleElement.textContent = param.menuTitle\n      this.content.appendChild(menuTitleElement)\n    }\n    this.content.classList.add(\"sub-menu-content\", param.position)\n    this.content.appendChild(param.subMenu)\n    this.element.appendChild(this.content)\n\n    param.trigger.addEventListener(\"pointerdown\", () => this.toggle())\n    document.addEventListener(\"pointerdown\", (e) => {\n      if (!this.element.contains(e.target as HTMLElement)) {\n        this.close()\n      }\n    })\n  }\n\n  open(): void {\n    this.content.classList.add(\"open\")\n  }\n\n  close(): void {\n    this.content.classList.remove(\"open\")\n  }\n\n  toggle(): void {\n    this.content.classList.toggle(\"open\")\n  }\n\n  unwrap(): void {\n    this.content.classList.remove(\"sub-menu-content\")\n    this.element.insertAdjacentElement(\"beforebegin\", this.content)\n    this.element.style.display = \"none\"\n  }\n\n  wrap(): void {\n    this.content.classList.add(\"sub-menu-content\")\n    this.element.appendChild(this.content)\n    this.element.style.display = \"block\"\n  }\n\n}\n","import menuIcon from \"../assets/svg/menu.svg\"\nimport languageIcon from \"../assets/svg/language.svg\"\nimport trashIcon from \"../assets/svg/trash.svg\"\nimport undoIcon from \"../assets/svg/undo.svg\"\nimport redoIcon from \"../assets/svg/redo.svg\"\nimport translateIcon from \"../assets/svg/translate.svg\"\nimport gestureIcon from \"../assets/svg/spock-hand-gesture.svg\"\nimport guideIcon from \"../assets/svg/orthogonal-view.svg\"\nimport snapIcon from \"../assets/svg/arrow-to-dot.svg\"\nimport debugIcon from \"../assets/svg/wolf.svg\"\nimport downloadIcon from \"../assets/svg/download.svg\"\nimport uploadIcon from \"../assets/svg/upload.svg\"\nimport { EditorTool, EditorWriteTool } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { IIMenu, TMenuItemBoolean, TMenuItemButton, TMenuItemButtonList, TMenuItemSelect } from \"./IIMenu\"\nimport { TIISymbol } from \"../symbol\"\nimport { InsertAction, StrikeThroughAction, SurroundAction } from \"../gesture\"\nimport { IIMenuSub, TSubMenuParam } from \"./IIMenuSub\"\nimport { getAvailableLanguageList, PartialDeep } from \"../utils\"\nimport { InteractiveInkEditor } from \"../editor\"\n\n/**\n * @group Menu\n */\nexport class IIMenuAction extends IIMenu\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n\n  editor: InteractiveInkEditor\n  id: string\n  wrapper?: HTMLElement\n  menuLanguage!: IIMenuSub\n  menuClear?: HTMLButtonElement\n  menuUndo?: HTMLButtonElement\n  menuRedo?: HTMLButtonElement\n  menuConvert?: HTMLButtonElement\n\n  guideGaps = [\n    { label: \"S\", value: \"25\" },\n    { label: \"M\", value: \"50\" },\n    { label: \"L\", value: \"100\" },\n    { label: \"XL\", value: \"150\" },\n  ]\n\n  constructor(editor: InteractiveInkEditor, id = \"ms-menu-action\")\n  {\n    super()\n    this.id = id\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get isMobile(): boolean\n  {\n    return this.editor.renderer.parent.clientWidth < 700\n  }\n\n  protected createMenuClear(): HTMLElement\n  {\n    this.menuClear = document.createElement(\"button\")\n    this.menuClear.id = `${ this.id }-clear`\n    this.menuClear.classList.add(\"ms-menu-button\", \"square\")\n    this.menuClear.innerHTML = trashIcon\n    this.menuClear.addEventListener(\"pointerup\", () =>\n    {\n      this.#logger.info(`${ this.id }.clear`)\n      this.editor.clear()\n    })\n    return this.menuClear\n  }\n\n  protected createMenuLanguage(): HTMLElement\n  {\n    const triggerBtn = document.createElement(\"button\")\n    triggerBtn.id = `${ this.id }-language-trigger`\n    triggerBtn.classList.add(\"ms-menu-button\", \"square\")\n    triggerBtn.innerHTML = languageIcon\n\n    const select = document.createElement(\"select\")\n    select.classList.add(\"select-language\")\n    select.id = `${ this.id }-language`\n    getAvailableLanguageList(this.editor.configuration)\n      .then(json =>\n      {\n        const languages = json.result as { [key: string]: string }\n        Object.keys(languages).forEach(key =>\n        {\n          const selected = key === this.editor.configuration.recognition.lang\n          const opt = new Option(languages[key], key, selected, selected)\n          select.appendChild(opt)\n        })\n      })\n    select.addEventListener(\"change\", (e) =>\n    {\n      this.#logger.info(`${ this.id }.selectLanguage`)\n      const value = (e.target as HTMLInputElement).value\n      this.editor.changeLanguage(value)\n    })\n    const params: TSubMenuParam = {\n      trigger: triggerBtn,\n      subMenu: select,\n      position: \"bottom-right\"\n    }\n    this.menuLanguage = new IIMenuSub(params)\n    return this.menuLanguage.element\n  }\n\n  protected createMenuUndo(): HTMLElement\n  {\n    this.menuUndo = document.createElement(\"button\")\n    this.menuUndo.id = `${ this.id }-undo`\n    this.menuUndo.classList.add(\"ms-menu-button\", \"square\")\n    this.menuUndo.innerHTML = undoIcon\n    this.menuUndo.addEventListener(\"pointerup\", async () =>\n    {\n      this.#logger.info(`${ this.id }.undo`)\n      await this.editor.undo()\n    })\n    return this.menuUndo\n  }\n\n  protected createMenuRedo(): HTMLElement\n  {\n    this.menuRedo = document.createElement(\"button\")\n    this.menuRedo.id = `${ this.id }-redo`\n    this.menuRedo.classList.add(\"ms-menu-button\", \"square\")\n    this.menuRedo.innerHTML = redoIcon\n    this.menuRedo.addEventListener(\"pointerup\", async () =>\n    {\n      this.#logger.info(`${ this.id }.redo`)\n      await this.editor.redo()\n    })\n    return this.menuRedo\n  }\n\n  protected createMenuConvert(): HTMLElement\n  {\n    this.menuConvert = document.createElement(\"button\")\n    this.menuConvert.id = `${ this.id }-convert`\n    this.menuConvert.classList.add(\"ms-menu-button\", \"square\")\n    this.menuConvert.innerHTML = translateIcon\n    this.menuConvert.addEventListener(\"pointerup\", () =>\n    {\n      this.#logger.info(`${ this.id }.convert`)\n      this.editor.convert()\n    })\n    return this.menuConvert\n  }\n\n  protected createMenuGesture(): HTMLDivElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-gesture`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = gestureIcon\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n\n    const surroundActionValues: { label: string, value: string }[] = []\n    for (const key in SurroundAction) {\n      const value = SurroundAction[key as keyof typeof SurroundAction]\n      surroundActionValues.push({ label: key, value })\n    }\n    const strikeThroughActionValues: { label: string, value: string }[] = []\n    for (const key in StrikeThroughAction) {\n      const value = StrikeThroughAction[key as keyof typeof StrikeThroughAction]\n      strikeThroughActionValues.push({ label: key, value })\n    }\n    const splitActionValues: { label: string, value: string }[] = []\n    for (const key in InsertAction) {\n      const value = InsertAction[key as keyof typeof InsertAction]\n      splitActionValues.push({ label: key, value })\n    }\n    const menuItems: (TMenuItemBoolean | TMenuItemSelect)[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-gesture-detect`,\n        label: \"Detect gesture\",\n        initValue: this.editor.writer.detectGesture,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.gesture-detect`, { value })\n          this.editor.writer.detectGesture = value\n          this.editor.tool = EditorTool.Write\n          this.editor.writer.tool = EditorWriteTool.Pencil\n        }\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-gesture-surround`,\n        label: \"On surround\",\n        values: surroundActionValues,\n        initValue: this.editor.gesture.surroundAction,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.gesture-surround`, { value })\n          this.editor.gesture.surroundAction = value as SurroundAction\n          this.editor.tool = EditorTool.Write\n          this.editor.writer.tool = EditorWriteTool.Pencil\n        }\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-gesture-strikethrough`,\n        label: \"On strikethrough\",\n        values: strikeThroughActionValues,\n        initValue: this.editor.gesture.strikeThroughAction,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.gesture-strikethrough`, { value })\n          this.editor.gesture.strikeThroughAction = value as StrikeThroughAction\n          this.editor.tool = EditorTool.Write\n          this.editor.writer.tool = EditorWriteTool.Pencil\n        }\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-gesture-insert`,\n        label: \"On insert\",\n        values: splitActionValues,\n        initValue: this.editor.gesture.insertAction,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.gesture-InsertAction`, { value })\n          this.editor.gesture.insertAction = value as InsertAction\n          this.editor.tool = EditorTool.Write\n          this.editor.writer.tool = EditorWriteTool.Pencil\n        }\n      },\n    ]\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Gesture\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected createMenuGuide(): HTMLDivElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-guide`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = guideIcon\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n\n    const menuItems: (TMenuItemBoolean | TMenuItemSelect | TMenuItemButtonList)[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-guide-enable`,\n        label: \"Show guide\",\n        initValue: this.editor.configuration.rendering.guides.enable,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.guide-enable`, { value })\n          this.editor.configuration.rendering.guides.enable = value as boolean\n          this.editor.renderingConfiguration = this.editor.configuration.rendering\n        }\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-guide-type`,\n        label: \"Guide style\",\n        values: [\n          { label: \"Line\", value: \"line\" },\n          { label: \"Grid\", value: \"grid\" },\n          { label: \"Point\", value: \"point\" },\n        ],\n        initValue: this.editor.configuration.rendering.guides.type,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.guide-type`, { value })\n          this.editor.configuration.rendering.guides.type = value as (\"line\" | \"grid\" | \"point\")\n          this.editor.renderingConfiguration = this.editor.configuration.rendering\n        }\n      },\n      {\n        type: \"list\",\n        id: `${ this.id }-guide-size`,\n        label: \"Guide style\",\n        values: this.guideGaps,\n        initValue: this.editor.configuration.rendering.guides.gap.toString(),\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.guide-size`, { value })\n          this.editor.configuration.rendering.guides.gap = +value\n          this.editor.renderingConfiguration = this.editor.configuration.rendering\n        }\n      },\n    ]\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Guide\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected createMenuSnap(): HTMLDivElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-snap`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = snapIcon\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n\n    const menuItems: (TMenuItemBoolean | TMenuItemSelect)[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-snap-to-guide`,\n        label: \"Snap to guide\",\n        initValue: this.editor.snaps.configuration.guide,\n        callback: (value) => this.editor.snaps.configuration.guide = value\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-snap-to-element`,\n        label: \"Snap to element\",\n        initValue: this.editor.snaps.configuration.symbol,\n        callback: (value) => this.editor.snaps.configuration.symbol = value\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-snap-angle`,\n        label: \"Snap angle\",\n        values: [\n          { label: \"None\", value: \"0\" },\n          { label: \"10°\", value: \"10\" },\n          { label: \"30°\", value: \"30\" },\n          { label: \"45°\", value: \"45\" },\n          { label: \"90°\", value: \"90\" },\n          { label: \"180°\", value: \"180\" },\n        ],\n        initValue: this.editor.snaps.configuration.angle.toString(),\n        callback: (angle) => this.editor.snaps.configuration.angle = +angle\n      },\n    ]\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Snap\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected createMenuDebug(): HTMLDivElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-debug`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = debugIcon\n\n    const menuItems: TMenuItemBoolean[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-bounding-box`,\n        label: \"Show bounding box\",\n        initValue: this.editor.svgDebugger.boundingBoxVisibility,\n        callback: (debug) => this.editor.svgDebugger.boundingBoxVisibility = debug\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-recognition-box`,\n        label: \"Show recognition box\",\n        initValue: this.editor.svgDebugger.recognitionBoxVisibility,\n        callback: (debug) => this.editor.svgDebugger.recognitionBoxVisibility = debug\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-bounding-item-box`,\n        label: \"Show recognition item box\",\n        initValue: this.editor.svgDebugger.recognitionItemBoxVisibility,\n        callback: (debug) => this.editor.svgDebugger.recognitionItemBoxVisibility = debug\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-snap-points`,\n        label: \"Show snap points\",\n        initValue: this.editor.svgDebugger.snapPointsVisibility,\n        callback: (debug) => this.editor.svgDebugger.snapPointsVisibility = debug\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-vertices`,\n        label: \"Show vertices\",\n        initValue: this.editor.svgDebugger.verticesVisibility,\n        callback: (debug) => this.editor.svgDebugger.verticesVisibility = debug\n      },\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Debug\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected createMenuExport(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-export`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = downloadIcon\n\n    const menuItems: TMenuItemButton[] = [\n      {\n        type: \"button\",\n        id: `${ this.id }-export-json`,\n        label: \"json\",\n        callback: () =>\n        {\n          this.editor.downloadAsJson()\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-export-svg`,\n        label: \"svg\",\n        callback: () =>\n        {\n          this.editor.downloadAsSVG()\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-export-png`,\n        label: \"png\",\n        callback: () =>\n        {\n          this.editor.downloadAsPNG()\n        }\n      },\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Export\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected async readFileAsText(file: File): Promise<string>\n  {\n    return new Promise((resolve, reject) =>\n    {\n      const reader = new FileReader()\n      reader.onerror = reject;\n      reader.onload = () => {\n        resolve(reader.result as string)\n      }\n      if (file) {\n        reader.readAsText(file)\n      }\n    })\n  }\n\n  protected createMenuImport(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-import`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = uploadIcon\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n\n    const importInput = document.createElement(\"input\")\n    importInput.type = \"file\"\n    importInput.accept = \".json\"\n    importInput.multiple = false\n    importInput.addEventListener(\"change\", () => {\n      importBtn.disabled = !importInput.files?.length\n    })\n\n    subMenuWrapper.appendChild(importInput)\n    const importBtn = document.createElement(\"button\")\n    importBtn.classList.add(\"ms-menu-button\")\n    importBtn.innerText = \"Import\"\n    importBtn.disabled = true\n    subMenuWrapper.appendChild(importBtn)\n    importBtn.addEventListener(\"pointerup\", async (e) =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      if (importInput.files?.length) {\n        const fileString = await this.readFileAsText(importInput.files[0])\n        const symbols = JSON.parse(fileString) as PartialDeep<TIISymbol>[]\n        await this.editor.createSymbols(symbols)\n        importInput.value = \"\"\n        importBtn.disabled = true\n      }\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Import\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected unselectAll(): void\n  {\n    this.wrapper?.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n  }\n\n  protected closeAllSubMenu(): void\n  {\n    this.wrapper?.querySelectorAll(\".open\").forEach(e => e.classList.remove(\"open\"))\n  }\n\n  render(layer: HTMLElement): void\n  {\n    if (this.editor.configuration.menu.action.enable) {\n      const menuTrigger = document.createElement(\"button\")\n      menuTrigger.id = this.id\n      menuTrigger.classList.add(\"ms-menu-button\", \"square\")\n      menuTrigger.innerHTML = menuIcon\n\n      const subMenuWrapper = document.createElement(\"div\")\n      subMenuWrapper.classList.add(\"ms-menu-colmun\")\n      subMenuWrapper.appendChild(this.createMenuGesture())\n      subMenuWrapper.appendChild(this.createMenuGuide())\n      subMenuWrapper.appendChild(this.createMenuSnap())\n      subMenuWrapper.appendChild(this.createMenuDebug())\n      subMenuWrapper.appendChild(this.createMenuImport())\n      subMenuWrapper.appendChild(this.createMenuExport())\n\n      this.wrapper = document.createElement(\"div\")\n      this.wrapper.classList.add(\"ms-menu\", \"ms-menu-top-left\", \"ms-menu-row\")\n      this.wrapper.appendChild(new IIMenuSub({ trigger: menuTrigger, subMenu: subMenuWrapper, position: \"bottom\" }).element)\n      this.wrapper.appendChild(this.createMenuLanguage())\n      this.wrapper.appendChild(this.createMenuClear())\n      this.wrapper.appendChild(this.createMenuUndo())\n      this.wrapper.appendChild(this.createMenuRedo())\n      this.wrapper.appendChild(this.createMenuConvert())\n\n      layer.appendChild(this.wrapper)\n      this.update()\n      this.show()\n    }\n  }\n\n  update(): void\n  {\n    if (this.menuLanguage) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      this.isMobile ? this.menuLanguage.wrap() : this.menuLanguage.unwrap()\n    }\n    if (this.menuClear) {\n      this.menuClear.disabled = this.editor.history.context.empty\n    }\n    if (this.menuUndo) {\n      this.menuUndo.disabled = !this.editor.history.context.canUndo\n    }\n    if (this.menuRedo) {\n      this.menuRedo.disabled = !this.editor.history.context.canRedo\n    }\n    if (this.menuConvert) {\n      this.menuConvert.disabled = !this.editor.extractStrokesFromSymbols(this.model.symbols).length\n    }\n  }\n\n  show(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"visible\"\n    }\n  }\n\n  hide(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"hidden\"\n    }\n  }\n\n  destroy(): void\n  {\n    if (this.wrapper) {\n      while (this.wrapper.lastChild) {\n        this.wrapper.removeChild(this.wrapper.lastChild)\n      }\n      this.wrapper.remove()\n      this.wrapper = undefined\n      this.menuClear = undefined\n      this.menuUndo = undefined\n      this.menuRedo = undefined\n      this.menuConvert = undefined\n    }\n  }\n}\n","import pencilIcon from \"../assets/svg/edit-pencil.svg\"\nimport cursorIcon from \"../assets/svg/frame-select.svg\"\nimport eraseIcon from \"../assets/svg/erase.svg\"\nimport handIcon from \"../assets/svg/drag-hand-gesture.svg\"\nimport rectangleIcon from \"../assets/svg/rectangle.svg\"\nimport rhombusIcon from \"../assets/svg/rhombus.svg\"\nimport circleIcon from \"../assets/svg/circle.svg\"\nimport ellipseIcon from \"../assets/svg/ellipse.svg\"\nimport triangleIcon from \"../assets/svg/triangle.svg\"\nimport lineIcon from \"../assets/svg/linear.svg\"\nimport arrowIcon from \"../assets/svg/linear-arrow.svg\"\nimport doubleArrowIcon from \"../assets/svg/linear-double-arrow.svg\"\nimport { EditorTool, EditorWriteTool } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIMenu } from \"./IIMenu\"\nimport { IIMenuSub } from \"./IIMenuSub\"\nimport { TSubMenuParam } from \"./IIMenuSub\"\nimport { InteractiveInkEditor } from \"../editor\"\n\n/**\n * @group Menu\n */\nexport class IIMenuTool extends IIMenu\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n\n  editor: InteractiveInkEditor\n  id: string\n  wrapper?: HTMLDivElement\n  writeBtn?: HTMLButtonElement\n  menuSelect?: HTMLButtonElement\n  menuMove?: HTMLButtonElement\n  menuErase?: HTMLButtonElement\n  menuShape?: HTMLButtonElement\n  subMenuShape?: {\n    rectangle: HTMLButtonElement,\n    circle: HTMLButtonElement,\n    triangle: HTMLButtonElement,\n    ellipse: HTMLButtonElement\n    rhombus: HTMLButtonElement\n  }\n  menuEdge?: HTMLButtonElement\n  subMenuEdge?: {\n    line: HTMLButtonElement,\n    arrow: HTMLButtonElement,\n    doubleArrow: HTMLButtonElement,\n  }\n\n  constructor(editor: InteractiveInkEditor, id = \"ms-menu-tool\")\n  {\n    super()\n    this.id = id\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  protected createMenuWrite(): HTMLElement\n  {\n    this.writeBtn = document.createElement(\"button\")\n    this.writeBtn.id = `${this.id}-write-pencil`\n    this.writeBtn.classList.add(\"ms-menu-button\", \"square\")\n    this.writeBtn.innerHTML = pencilIcon\n    this.writeBtn.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.writeBtn!.classList.add(\"active\")\n      this.editor.tool = EditorTool.Write\n      this.editor.writer.tool = EditorWriteTool.Pencil\n    })\n    return this.writeBtn\n  }\n\n  protected createMenuMove(): HTMLElement\n  {\n    this.menuMove = document.createElement(\"button\")\n    this.menuMove.id = `${this.id}-move`\n    this.menuMove.classList.add(\"ms-menu-button\", \"square\")\n    this.menuMove.innerHTML = handIcon\n    this.menuMove.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.menuMove!.classList.add(\"active\")\n      this.editor.tool = EditorTool.Move\n    })\n    return this.menuMove\n  }\n\n  protected createMenuSelect(): HTMLElement\n  {\n    this.menuSelect = document.createElement(\"button\")\n    this.menuSelect.id = `${this.id}-select`\n    this.menuSelect.classList.add(\"ms-menu-button\", \"square\")\n    this.menuSelect.innerHTML = cursorIcon\n    this.menuSelect.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.menuSelect!.classList.add(\"active\")\n      this.editor.tool = EditorTool.Select\n    })\n    return this.menuSelect\n  }\n\n  protected createMenuErase(): HTMLElement\n  {\n    this.menuErase = document.createElement(\"button\")\n    this.menuErase.id = `${this.id}-erase`\n    this.menuErase.classList.add(\"ms-menu-button\", \"square\")\n    this.menuErase.innerHTML = eraseIcon\n    this.menuErase.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.menuErase!.classList.add(\"active\")\n      this.editor.tool = EditorTool.Erase\n    })\n    return this.menuErase\n  }\n\n  protected createShapeSubMenu(icon: string, tool: EditorWriteTool): HTMLButtonElement\n  {\n    const subMenuShape = document.createElement(\"button\")\n    subMenuShape.id = `${this.id}-write-shape-${tool}`\n    subMenuShape.classList.add(\"ms-menu-button\", \"square\")\n    subMenuShape.innerHTML = icon\n    subMenuShape.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.editor.tool = EditorTool.Write\n      this.editor.writer.tool = tool\n      subMenuShape.classList.add(\"active\")\n      this.menuShape!.innerHTML = icon\n      this.menuShape!.classList.add(\"active\")\n      const subMenuContent = this.menuShape!.nextSibling\n      if (subMenuContent) {\n        (subMenuContent as HTMLElement).classList.remove(\"open\")\n      }\n    })\n    return subMenuShape\n  }\n\n  protected createMenuShape(): HTMLElement\n  {\n    this.menuShape = document.createElement(\"button\")\n    this.menuShape.id = `${this.id}-write-shape`\n    this.menuShape.classList.add(\"ms-menu-button\", \"square\")\n    this.menuShape.innerHTML = rectangleIcon\n    this.subMenuShape = {\n      circle: this.createShapeSubMenu(circleIcon, EditorWriteTool.Circle),\n      rectangle: this.createShapeSubMenu(rectangleIcon, EditorWriteTool.Rectangle),\n      triangle: this.createShapeSubMenu(triangleIcon, EditorWriteTool.Triangle),\n      ellipse: this.createShapeSubMenu(ellipseIcon, EditorWriteTool.Ellipse),\n      rhombus: this.createShapeSubMenu(rhombusIcon, EditorWriteTool.Rhombus),\n    }\n    const subMenuContent = document.createElement(\"div\")\n    subMenuContent.id = `${this.id}-write-shape-list`\n    subMenuContent.classList.add(\"ms-menu-row\", \"sub-menu-content-shape\")\n    subMenuContent.appendChild(this.subMenuShape.rectangle)\n    subMenuContent.appendChild(this.subMenuShape.circle)\n    subMenuContent.appendChild(this.subMenuShape.ellipse)\n    subMenuContent.appendChild(this.subMenuShape.triangle)\n    subMenuContent.appendChild(this.subMenuShape.rhombus)\n\n    const params: TSubMenuParam = {\n      trigger: this.menuShape,\n      subMenu: subMenuContent,\n      position: \"top\"\n    }\n\n    return new IIMenuSub(params).element\n  }\n\n  protected createEdgeSubMenu(square: string, tool: EditorWriteTool): HTMLButtonElement\n  {\n    const subMenuEdge = document.createElement(\"button\")\n    subMenuEdge.id = `${this.id}-write-edge-${tool}`\n    subMenuEdge.classList.add(\"ms-menu-button\", \"square\")\n    subMenuEdge.innerHTML = square\n    subMenuEdge.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.editor.tool = EditorTool.Write\n      this.editor.writer.tool = tool\n      subMenuEdge.classList.add(\"active\")\n      this.menuEdge!.innerHTML = square\n      this.menuEdge!.classList.add(\"active\")\n      const subMenuContent = this.menuEdge!.nextSibling\n      if (subMenuContent) {\n        (subMenuContent as HTMLElement).classList.remove(\"open\")\n      }\n    })\n    return subMenuEdge\n  }\n\n  protected createMenuEdge(): HTMLElement\n  {\n    this.menuEdge = document.createElement(\"button\")\n    this.menuEdge.id = `${this.id}-write-edge`\n    this.menuEdge.classList.add(\"ms-menu-button\", \"square\")\n    this.menuEdge.innerHTML = lineIcon\n    this.subMenuEdge = {\n      line: this.createEdgeSubMenu(lineIcon, EditorWriteTool.Line),\n      arrow: this.createEdgeSubMenu(arrowIcon, EditorWriteTool.Arrow),\n      doubleArrow: this.createEdgeSubMenu(doubleArrowIcon, EditorWriteTool.DoubleArrow),\n    }\n    const subMenuContent = document.createElement(\"div\")\n    subMenuContent.id = `${this.id}-write-edge-list`\n    subMenuContent.classList.add(\"ms-menu-row\", \"sub-menu-content-edge\")\n    subMenuContent.appendChild(this.subMenuEdge.line)\n    subMenuContent.appendChild(this.subMenuEdge.arrow)\n    subMenuContent.appendChild(this.subMenuEdge.doubleArrow)\n\n    const params: TSubMenuParam = {\n      trigger: this.menuEdge,\n      subMenu: subMenuContent,\n      position: \"top\"\n    }\n\n    return new IIMenuSub(params).element\n  }\n\n  protected unselectAll(): void\n  {\n    this.wrapper?.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n  }\n\n  update(): void\n  {\n    this.unselectAll()\n    switch (this.editor.tool) {\n      case EditorTool.Erase:\n        this.menuErase?.classList.add(\"active\")\n        break;\n      case EditorTool.Move:\n        this.menuMove?.classList.add(\"active\")\n        break;\n      case EditorTool.Select:\n        this.menuSelect?.classList.add(\"active\")\n        break;\n      case EditorTool.Write:\n        switch (this.editor.writer.tool) {\n          case EditorWriteTool.Circle:\n            this.menuShape?.classList.add(\"active\")\n            this.subMenuShape?.circle?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Ellipse:\n            this.menuShape?.classList.add(\"active\")\n            this.subMenuShape?.ellipse?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Triangle:\n            this.menuShape?.classList.add(\"active\")\n            this.subMenuShape?.triangle?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Rectangle:\n            this.menuShape?.classList.add(\"active\")\n            this.subMenuShape?.rectangle?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Line:\n            this.menuEdge?.classList.add(\"active\")\n            this.subMenuEdge?.line?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Arrow:\n            this.menuEdge?.classList.add(\"active\")\n            this.subMenuEdge?.arrow?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.DoubleArrow:\n            this.menuEdge?.classList.add(\"active\")\n            this.subMenuEdge?.doubleArrow?.classList.add(\"active\")\n            break;\n          default:\n            this.writeBtn?.classList.add(\"active\")\n            break;\n        }\n        break;\n    }\n  }\n\n  render(layer: HTMLElement): void\n  {\n    if (this.editor.configuration.menu.tool.enable) {\n      this.wrapper = document.createElement(\"div\")\n      this.wrapper.classList.add(\"ms-menu\", \"ms-menu-bottom\", \"ms-menu-row\")\n\n      this.wrapper.appendChild(this.createMenuWrite())\n      this.wrapper.appendChild(this.createMenuMove())\n      this.wrapper.appendChild(this.createMenuSelect())\n      this.wrapper.appendChild(this.createMenuErase())\n      this.wrapper.appendChild(this.createMenuEdge())\n      this.wrapper.appendChild(this.createMenuShape())\n\n      layer.appendChild(this.wrapper)\n      this.update()\n      this.show()\n    }\n  }\n\n  show(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"visible\"\n    }\n  }\n\n  hide(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"hidden\"\n    }\n  }\n\n  destroy(): void\n  {\n    if (this.wrapper) {\n      while (this.wrapper.lastChild) {\n        this.wrapper.removeChild(this.wrapper.lastChild)\n      }\n      this.wrapper.remove()\n      this.writeBtn = undefined\n      this.menuSelect = undefined\n      this.menuMove = undefined\n      this.menuErase = undefined\n      this.menuShape = undefined\n      this.subMenuShape = undefined\n      this.menuEdge = undefined\n      this.subMenuEdge = undefined\n      this.wrapper = undefined\n    }\n  }\n}\n","import styleIcon from \"../assets/svg/palette.svg\"\nimport { EditorTool, EditorWriteTool } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { SymbolType, TIISymbol } from \"../symbol\"\nimport { IIMenu, TMenuItemColorList } from \"./IIMenu\"\nimport { IIMenuSub } from \"./IIMenuSub\"\nimport { TSubMenuParam } from \"./IIMenuSub\"\nimport { InteractiveInkEditor } from \"../editor\"\n\n/**\n * @group Menu\n */\nexport class IIMenuStyle extends IIMenu\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n\n  editor: InteractiveInkEditor\n  id: string\n  wrapper?: HTMLDivElement\n  subMenu?: IIMenuSub\n  triggerBtn?: HTMLButtonElement\n  menuColorStroke?: HTMLDivElement\n  menuColorFill?: HTMLDivElement\n  menuThickness?: HTMLDivElement\n  menuFontSize?: HTMLDivElement\n  menuFontWeight?: HTMLDivElement\n  menuStrokeOpacity?: HTMLDivElement\n\n  constructor(editor: InteractiveInkEditor, id = \"ms-menu-style\")\n  {\n    super()\n    this.id = id\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get symbolsSelected(): TIISymbol[]\n  {\n    return this.model.symbolsSelected\n  }\n\n  get writeShape(): boolean\n  {\n    return ![EditorWriteTool.Arrow, EditorWriteTool.DoubleArrow, EditorWriteTool.Line, EditorWriteTool.Pencil].includes(this.editor.writer.tool)\n  }\n\n  get rowHeight(): number\n  {\n    return this.editor.configuration.rendering.guides.gap\n  }\n\n  get isMobile(): boolean\n  {\n    return this.editor.renderer.parent.clientWidth < 700\n  }\n\n  protected createMenuStroke(): HTMLDivElement\n  {\n    const symbolsStyles = this.symbolsSelected.map(s => s.style)\n    const hasUniqColor = symbolsStyles.length && symbolsStyles.every(st => st.color === symbolsStyles[0]?.color)\n    const color = hasUniqColor && symbolsStyles[0]?.color ? symbolsStyles[0]?.color : this.editor.penStyle.color as string\n    const menuColorStrokeDef: TMenuItemColorList = {\n      type: \"colors\",\n      label: \"Colors\",\n      id: `${ this.id }-color`,\n      fill: false,\n      values: this.colors,\n      initValue: color,\n      callback: (color) =>\n      {\n        this.editor.penStyle = { color }\n        this.editor.updateSymbolsStyle(this.symbolsSelected.map(s => s.id), { color })\n      },\n    }\n    const menuColor = this.createColorList(menuColorStrokeDef)\n    this.menuColorStroke = this.createWrapCollapsible(menuColor, \"Colors\")\n    this.menuColorStroke.id = `${ this.id }-color`\n    return this.menuColorStroke\n  }\n\n  protected createMenuColorFill(): HTMLDivElement\n  {\n    const symbolsStyles = this.symbolsSelected.map(s => s.style)\n    const hasUniqColor = symbolsStyles.length && symbolsStyles.every(st => st.color === symbolsStyles[0]?.color)\n    const color = hasUniqColor && symbolsStyles[0].color ? symbolsStyles[0].color : this.editor.penStyle.color as string\n    const menuColorStrokeDef: TMenuItemColorList = {\n      type: \"colors\",\n      label: \"Fill\",\n      id: `${ this.id }-fill`,\n      fill: true,\n      values: this.colors,\n      initValue: color,\n      callback: (fill) =>\n      {\n        this.editor.penStyle = { fill }\n        this.editor.updateSymbolsStyle(this.symbolsSelected.map(s => s.id), { fill })\n      },\n    }\n    const menuColor = this.createColorList(menuColorStrokeDef)\n    this.menuColorFill = this.createWrapCollapsible(menuColor, \"Fill\")\n    this.menuColorFill.id = `${ this.id }-fill`\n    return this.menuColorFill\n  }\n\n  protected createMenuThickness(): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.id = `${ this.id }-thickness-list`\n    wrapper.classList.add(\"ms-menu-row\", \"thickness-list\")\n\n    const symbolsStyles = this.symbolsSelected.map(s => s.style)\n    const hasUniqWidth = symbolsStyles.length && symbolsStyles.every(st => st.width === symbolsStyles[0].width)\n    const width = hasUniqWidth ? symbolsStyles[0].width : this.editor.penStyle.width\n\n    this.thicknessList.forEach((size) =>\n    {\n      const btn = document.createElement(\"button\")\n      btn.id = `${ this.id }-thickness-${ size.label }-btn`\n      btn.classList.add(\"ms-menu-button\", \"square\")\n      btn.textContent = size.label\n      if (width === size.value) {\n        btn.classList.add(\"active\")\n      }\n      btn.addEventListener(\"pointerup\", (e) =>\n      {\n        e.preventDefault()\n        e.stopPropagation()\n        this.editor.penStyle = { width: size.value }\n        wrapper.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n        if (this.symbolsSelected.length) {\n          this.editor.updateSymbolsStyle(this.symbolsSelected.map(s => s.id), { width: size.value })\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      })\n      wrapper.appendChild(btn)\n    })\n    this.menuThickness = this.createWrapCollapsible(wrapper, \"Thickness\")\n    this.menuThickness.id = `${ this.id }-thickness`\n    return this.menuThickness\n  }\n\n  protected createMenuFontSize(): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.id = `${ this.id }-font-size-list`\n    wrapper.classList.add(\"ms-menu-row\", \"font-size-list\")\n\n    this.fontSizeList.forEach((size) =>\n    {\n      const btn = document.createElement(\"button\")\n      btn.id = `${ this.id }-font-size-${ size.label }-btn`\n      btn.classList.add(\"ms-menu-button\", \"square\")\n      btn.textContent = size.label\n      if (this.editor.configuration.fontStyle.size === size.value) {\n        btn.classList.add(\"active\")\n      }\n      btn.addEventListener(\"pointerup\", (e) =>\n      {\n        e.preventDefault()\n        e.stopPropagation()\n        wrapper.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n        if (size.value === \"auto\") {\n          this.editor.configuration.fontStyle.size = \"auto\"\n        }\n        else {\n          const fontSize = (size.value as number)\n          this.editor.configuration.fontStyle.size = fontSize\n          const textSymbols = this.symbolsSelected.filter(s => s.type === SymbolType.Text || (s.type === SymbolType.Group && s.extractText().length))\n          this.editor.updateTextFontStyle(textSymbols.map(s => s.id), { fontSize: fontSize * this.rowHeight })\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      })\n      wrapper.appendChild(btn)\n    })\n    this.menuFontSize = this.createWrapCollapsible(wrapper, \"Font size\")\n    this.menuFontSize.id = `${ this.id }-font-size`\n    return this.menuFontSize\n  }\n\n  protected createMenuFontWeight(): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.id = `${ this.id }-font-weight-list`\n    wrapper.classList.add(\"ms-menu-row\", \"font-weight-list\")\n\n    this.fontWeightList.forEach((weight) =>\n    {\n      const btn = document.createElement(\"button\")\n      btn.id = `${ this.id }-font-weight-${ weight.label }-btn`\n      btn.classList.add(\"ms-menu-button\", \"center\")\n      btn.textContent = weight.label\n      if (this.editor.configuration.fontStyle.weight === weight.value) {\n        btn.classList.add(\"active\")\n      }\n      btn.addEventListener(\"pointerup\", (e) =>\n      {\n        e.preventDefault()\n        e.stopPropagation()\n        wrapper.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n        this.editor.configuration.fontStyle.weight = weight.value as \"auto\" | \"normal\" | \"bold\"\n        if (this.editor.configuration.fontStyle.weight !== \"auto\") {\n          const textSymbols = this.symbolsSelected.filter(s => s.type === SymbolType.Text || (s.type === SymbolType.Group && s.extractText().length))\n          this.editor.updateTextFontStyle(textSymbols.map(s => s.id), { fontWeight: this.editor.configuration.fontStyle.weight })\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      })\n      wrapper.appendChild(btn)\n    })\n    this.menuFontWeight = this.createWrapCollapsible(wrapper, \"Font weight\")\n    this.menuFontWeight.id = `${ this.id }-font-weight`\n    return this.menuFontWeight\n  }\n\n  protected createMenuOpacity(): HTMLDivElement\n  {\n    const symbolsStyles = this.symbolsSelected.map(s => s.style)\n    const hasUniqOpacity = symbolsStyles.length && symbolsStyles.every(st => st.opacity === symbolsStyles[0]?.opacity)\n    const currentOpacity = (hasUniqOpacity && symbolsStyles[0]?.opacity ? symbolsStyles[0]?.opacity : (this.editor.penStyle.opacity || 1)) * 100 as number\n\n    const wrapper = document.createElement(\"div\")\n    wrapper.id = `${ this.id }-opacity-input-wrapper`\n    const input = document.createElement(\"input\")\n    input.id = `${ this.id }-opacity-input`\n    input.setAttribute(\"name\", `opacity`)\n    input.setAttribute(\"type\", \"range\")\n    input.setAttribute(\"step\", \"1\")\n    input.setAttribute(\"min\", \"1\")\n    input.setAttribute(\"max\", \"100\")\n    wrapper.appendChild(input)\n\n    const output = document.createElement(\"output\")\n    output.setAttribute(\"for\", `opacity`)\n    output.innerHTML = currentOpacity ? `${ currentOpacity }` : \"-\"\n    wrapper.appendChild(output)\n\n    if (currentOpacity) {\n      input.setAttribute(\"value\", currentOpacity.toString())\n    }\n    input.addEventListener(\"input\", (evt) =>\n    {\n      const value = (evt.target as HTMLInputElement).value as unknown as number\n      output.innerHTML = `${ value }%`\n      this.editor.penStyle = { opacity: value / 100 }\n      if (this.symbolsSelected.length) {\n        this.editor.updateSymbolsStyle(this.symbolsSelected.map(s => s.id), { opacity: value / 100 })\n      }\n    })\n    this.menuStrokeOpacity = this.createWrapCollapsible(wrapper, \"Opacity\")\n    this.menuStrokeOpacity.id = `${ this.id }-opacity`\n    return this.menuStrokeOpacity\n  }\n\n  render(layer: HTMLElement): void\n  {\n    if (this.editor.configuration.menu.style.enable) {\n      this.triggerBtn = document.createElement(\"button\")\n      this.triggerBtn.id = this.id\n      this.triggerBtn.classList.add(\"ms-menu-button\", \"square\")\n      this.triggerBtn.innerHTML = styleIcon\n\n      const subMenuContent = document.createElement(\"div\")\n      subMenuContent.classList.add(\"ms-menu-colmun\")\n      subMenuContent.appendChild(this.createMenuStroke())\n      subMenuContent.appendChild(this.createMenuColorFill())\n      subMenuContent.appendChild(this.createMenuThickness())\n      subMenuContent.appendChild(this.createMenuFontSize())\n      subMenuContent.appendChild(this.createMenuFontWeight())\n      subMenuContent.appendChild(this.createMenuOpacity())\n\n      const params: TSubMenuParam = {\n        trigger: this.triggerBtn,\n        subMenu: subMenuContent,\n        position: \"bottom-left\",\n      }\n      this.subMenu = new IIMenuSub(params)\n\n      this.wrapper = document.createElement(\"div\")\n      this.wrapper.classList.add(\"ms-menu\", \"ms-menu-top-right\")\n      this.wrapper.appendChild(this.subMenu.element)\n      layer.appendChild(this.wrapper)\n      this.update()\n    }\n  }\n\n  update(): void\n  {\n    if (this.subMenu) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      this.isMobile ? this.subMenu.wrap() : this.subMenu.unwrap()\n    }\n\n    if (this.editor.tool === EditorTool.Write) {\n      this.show()\n      if (this.menuColorStroke) {\n        this.menuColorStroke.style.display = \"block\"\n      }\n      if (this.menuColorFill) {\n        this.menuColorFill.style.display = this.writeShape ? \"block\" : \"none\"\n      }\n      if (this.menuThickness) {\n        this.menuThickness.style.display = \"block\"\n      }\n      if (this.menuFontSize) {\n        this.menuFontSize.style.display = \"block\"\n      }\n      if (this.menuFontWeight) {\n        this.menuFontWeight.style.display = \"block\"\n      }\n      if (this.menuStrokeOpacity) {\n        this.menuStrokeOpacity.style.display = \"block\"\n      }\n    }\n    else if (this.editor.tool === EditorTool.Select) {\n      this.show()\n      if (this.menuColorStroke) {\n        this.menuColorStroke.style.display = \"block\"\n      }\n      if (this.menuColorFill) {\n        const shapeSelected = this.model.symbolsSelected.length && this.model.symbolsSelected.some(s => s.type === SymbolType.Shape)\n        this.menuColorFill.style.display = shapeSelected ? \"block\" : \"none\"\n      }\n      if (this.menuThickness) {\n        this.menuThickness.style.display = \"block\"\n      }\n      if (this.menuFontSize) {\n        this.menuFontSize.style.display = \"block\"\n      }\n      if (this.menuFontWeight) {\n        this.menuFontWeight.style.display = \"block\"\n      }\n      if (this.menuStrokeOpacity) {\n        this.menuStrokeOpacity.style.display = \"block\"\n      }\n    }\n    else {\n      this.hide()\n    }\n  }\n\n  show(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"visible\"\n    }\n  }\n\n  hide(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"hidden\"\n    }\n  }\n\n  destroy(): void\n  {\n    if (this.wrapper) {\n      while (this.wrapper.lastChild) {\n        this.wrapper.removeChild(this.wrapper.lastChild)\n      }\n      this.wrapper.remove()\n      this.wrapper = undefined\n      this.subMenu = undefined\n      this.triggerBtn = undefined\n      this.menuColorStroke = undefined\n      this.menuColorFill = undefined\n      this.menuThickness = undefined\n      this.menuFontSize = undefined\n      this.menuFontWeight = undefined\n      this.menuStrokeOpacity = undefined\n    }\n  }\n}\n","import ArrowDown from \"../assets/svg/nav-arrow-down.svg\"\nimport { SELECTION_MARGIN } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { DecoratorKind, IIDecorator, IIRecognizedText, IIStroke, IISymbolGroup, IIText, RecognizedKind, SymbolType, TIISymbol } from \"../symbol\"\nimport { IIMenu, TMenuItemBoolean, TMenuItemButton, TMenuItemColorList } from \"./IIMenu\"\nimport { createUUID } from \"../utils\"\nimport { IIMenuSub, TSubMenuParam } from \"./IIMenuSub\"\nimport { InteractiveInkEditor } from \"../editor\"\n/**\n * @group Menu\n */\nexport class IIMenuContext extends IIMenu\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n  editor: InteractiveInkEditor\n  id: string\n  wrapper?: HTMLElement\n  editMenu?: HTMLDivElement\n  editInput?: HTMLInputElement\n  editSaveBtn?: HTMLButtonElement\n  reorderMenu?: HTMLDivElement\n  decoratorMenu?: HTMLDivElement\n  menuExport?: HTMLDivElement\n  duplicateBtn?: HTMLButtonElement\n  groupBtn?: HTMLButtonElement\n  convertBtn?: HTMLButtonElement\n  removeBtn?: HTMLButtonElement\n\n  position: {\n    x: number,\n    y: number,\n    scrollTop: number,\n    scrollLeft: number\n  }\n\n  constructor(editor: InteractiveInkEditor, id = \"ms-menu-context\")\n  {\n    super()\n    this.id = id\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.position = { x: 0, y: 0, scrollLeft: 0, scrollTop: 0 }\n  }\n\n  get symbolsSelected(): TIISymbol[]\n  {\n    return this.editor.model.symbolsSelected\n  }\n\n  get haveSymbolsSelected(): boolean\n  {\n    return this.symbolsSelected.length > 0\n  }\n\n  get symbolsDecorable(): (IIStroke | IIText | IISymbolGroup | IIRecognizedText)[]\n  {\n    return this.symbolsSelected.filter(s => [SymbolType.Stroke, SymbolType.Text, SymbolType.Group].includes(s.type) || (s.type === SymbolType.Recognized && s.kind === RecognizedKind.Text)) as (IIStroke | IIText | IISymbolGroup | IIRecognizedText)[]\n  }\n\n  get showDecorator(): boolean\n  {\n    return this.symbolsDecorable.length > 0\n  }\n\n  protected createMenuEdit(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-edit-trigger`\n    trigger.classList.add(\"ms-menu-button\")\n    const label = document.createElement(\"span\")\n    label.innerText = \"Edit\"\n    trigger.appendChild(label)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    this.editInput = document.createElement(\"input\")\n    subMenuWrapper.appendChild(this.editInput)\n    this.editSaveBtn = document.createElement(\"button\")\n    this.editSaveBtn.classList.add(\"ms-menu-button\")\n    this.editSaveBtn.innerText = \"Save\"\n    subMenuWrapper.appendChild(this.editSaveBtn)\n    this.editSaveBtn.addEventListener(\"pointerdown\", async (e) =>\n    {\n      e.stopPropagation()\n      const textSymbol = this.editor.model.symbolsSelected.find(s => s.type === SymbolType.Text) as IIText\n      if (textSymbol) {\n        const firstChar = textSymbol.chars[0]\n        textSymbol.chars = []\n        for (let i = 0; i < this.editInput!.value.length; i++) {\n          textSymbol.chars.push({\n            label: this.editInput!.value.charAt(i),\n            id: createUUID(),\n            color: firstChar.color,\n            fontSize: firstChar.fontSize,\n            fontWeight: firstChar.fontWeight,\n            bounds: firstChar.bounds\n          })\n        }\n        await this.editor.updateSymbol(textSymbol)\n        this.editor.selector.resetSelectedGroup([textSymbol])\n      }\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    this.editMenu = new IIMenuSub(params).element\n\n    return this.editMenu\n  }\n\n  protected createMenuDuplicate(): HTMLElement\n  {\n    this.duplicateBtn = document.createElement(\"button\")\n    this.duplicateBtn.id = `${ this.id }-duplicate`\n    this.duplicateBtn.textContent = \"Duplicate\"\n    this.duplicateBtn.classList.add(\"ms-menu-button\")\n    this.duplicateBtn.addEventListener(\"pointerup\", async () =>\n    {\n      const symbolsToDuplicate = this.symbolsSelected\n\n      const updateDeepIdInGroup = (gr: IISymbolGroup) =>\n      {\n        gr.children.forEach(s =>\n        {\n          s.id = s.id.slice(0, -36) + `-${ createUUID() }`\n          switch (s.type) {\n            case SymbolType.Group:\n              updateDeepIdInGroup(s)\n              break\n            case SymbolType.Recognized:\n              s.strokes.forEach(s => s.id = s.id.slice(0, -36) + `-${ createUUID() }`)\n              break\n          }\n        })\n      }\n      const duplicatedSymbols = symbolsToDuplicate.map(s =>\n      {\n        const clone = s.clone()\n        while (this.editor.model.symbols.find(s => s.id === clone.id)) {\n          clone.id = clone.id.slice(0, -36) + `-${ createUUID() }`\n          if (clone.type === SymbolType.Group) {\n            updateDeepIdInGroup(clone)\n          }\n          else if (clone.type === SymbolType.Recognized) {\n            clone.strokes.forEach(s => s.id = s.id.slice(0, -36) + `-${ createUUID() }`)\n          }\n        }\n        clone.selected = true\n        this.editor.translator.applyToSymbol(clone, SELECTION_MARGIN, SELECTION_MARGIN)\n        return clone\n      })\n\n      this.editor.unselectAll()\n      await this.editor.addSymbols(duplicatedSymbols)\n      this.editor.selector.drawSelectedGroup(duplicatedSymbols)\n    })\n    return this.duplicateBtn\n  }\n\n  protected createMenuGroup(): HTMLElement\n  {\n    this.groupBtn = document.createElement(\"button\")\n    this.groupBtn.id = `${ this.id }-duplicate`\n    this.groupBtn.textContent = \"Group\"\n    this.groupBtn.classList.add(\"ms-menu-button\")\n    this.groupBtn.addEventListener(\"pointerup\", async () =>\n    {\n      if (this.symbolsSelected.length === 1 && this.symbolsSelected[0].type === SymbolType.Group) {\n        const symbols = this.editor.ungroupSymbol(this.symbolsSelected[0] as IISymbolGroup)\n        this.editor.select(symbols.map(s => s.id))\n      }\n      else {\n        const symbols = this.symbolsSelected.slice()\n        this.editor.unselectAll()\n        const group = this.editor.groupSymbols(symbols)\n        group.selected = true\n        this.editor.select([group.id])\n      }\n    })\n    return this.groupBtn\n  }\n\n  protected createMenuConvert(): HTMLElement\n  {\n    this.convertBtn = document.createElement(\"button\")\n    this.convertBtn.id = `${ this.id }-convert`\n    this.convertBtn.textContent = \"Convert\"\n    this.convertBtn.classList.add(\"ms-menu-button\")\n    this.convertBtn.addEventListener(\"pointerup\", () => this.editor.convertSymbols(this.symbolsSelected))\n    return this.convertBtn\n  }\n\n  protected createMenuRemove(): HTMLButtonElement\n  {\n    this.removeBtn = document.createElement(\"button\")\n    this.removeBtn.id = `${ this.id }-remove`\n    this.removeBtn.textContent = \"Remove\"\n    this.removeBtn.classList.add(\"ms-menu-button\")\n    this.removeBtn.addEventListener(\"pointerup\", async () =>\n    {\n      this.editor.selector.removeSelectedGroup()\n      await this.editor.removeSymbols(this.symbolsSelected.map(s => s.id))\n    })\n    return this.removeBtn\n  }\n\n  protected createMenuReorder(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-reorder`\n    trigger.classList.add(\"ms-menu-button\")\n    const label = document.createElement(\"span\")\n    label.innerText = \"Reorder\"\n    trigger.appendChild(label)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const menuItems: TMenuItemButton[] = [\n      {\n        type: \"button\",\n        id: `${ this.id }-reorder-first`,\n        label: \"Bring to front\",\n        callback: () =>\n        {\n          this.editor.changeOrderSymbols(this.symbolsSelected, \"last\")\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-reorder-forward`,\n        label: \"Bring forward\",\n        callback: () =>\n        {\n          this.editor.changeOrderSymbols(this.symbolsSelected, \"forward\")\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-reorder-backward`,\n        label: \"Send backward\",\n        callback: () =>\n        {\n          this.editor.changeOrderSymbols(this.symbolsSelected, \"backward\")\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-reorder-last`,\n        label: \"Send to back\",\n        callback: () =>\n        {\n          this.editor.changeOrderSymbols(this.symbolsSelected.slice().reverse(), \"first\")\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      },\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    this.reorderMenu = new IIMenuSub(params).element\n    return this.reorderMenu\n  }\n\n  protected createDecoratorSubMenu(label: string, kind: DecoratorKind): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-decorator-${ kind }`\n    trigger.classList.add(\"ms-menu-button\")\n    const labelEL = document.createElement(\"span\")\n    labelEL.innerText = label\n    trigger.appendChild(labelEL)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const menuItems: (TMenuItemBoolean | TMenuItemColorList)[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-decorator-${ kind }-enable`,\n        label: \"Enable\",\n        initValue: false,\n        callback: (enable) =>\n        {\n          this.symbolsDecorable.forEach(s =>\n          {\n            if (enable) {\n              if (!s.decorators.some(d => d.kind === kind)) {\n                s.decorators.push(new IIDecorator(kind, this.editor.penStyle))\n              }\n            }\n            else {\n              const decoIndex = s.decorators.findIndex(d => d.kind === kind)\n              if (decoIndex > -1) {\n                s.decorators.splice(decoIndex, 1)\n              }\n            }\n            this.editor.model.updateSymbol(s)\n            this.editor.renderer.drawSymbol(s)\n          })\n\n          document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(b =>\n          {\n            (b as HTMLButtonElement).disabled = !enable\n            b.classList.remove(\"active\")\n          })\n          if (enable) {\n            document.querySelector(`#${ this.id }-decorator-${ kind }-color button`)?.classList.add(\"active\")\n          }\n        }\n      },\n      {\n        type: \"colors\",\n        label: \"Colors\",\n        id: `${ this.id }-decorator-${ kind }-color`,\n        fill: false,\n        values: this.colors.filter((_c, i) => !(i % 4)),\n        initValue: this.colors[0],\n        disabled: true,\n        callback: (color) =>\n        {\n          this.symbolsDecorable.forEach(s =>\n          {\n            const deco = s.decorators.find(d => d.kind === kind)\n            if (deco) {\n              deco.style.color = color\n              this.editor.model.updateSymbol(s)\n              this.editor.renderer.drawSymbol(s)\n            }\n          })\n        },\n      }\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    return this.decoratorMenu = new IIMenuSub(params).element\n  }\n\n  protected createMenuDecorator(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-decorator`\n    trigger.classList.add(\"ms-menu-button\")\n    const label = document.createElement(\"span\")\n    label.innerText = \"Decorator\"\n    trigger.appendChild(label)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    subMenuWrapper.appendChild(this.createDecoratorSubMenu(\"Hightlight\", DecoratorKind.Highlight))\n    subMenuWrapper.appendChild(this.createDecoratorSubMenu(\"Surround\", DecoratorKind.Surround))\n    subMenuWrapper.appendChild(this.createDecoratorSubMenu(\"Underline\", DecoratorKind.Underline))\n    subMenuWrapper.appendChild(this.createDecoratorSubMenu(\"Strikethrough\", DecoratorKind.Strikethrough))\n\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    this.decoratorMenu = new IIMenuSub(params).element\n    return this.decoratorMenu\n  }\n\n  protected createMenuExport(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-export`\n    trigger.classList.add(\"ms-menu-button\")\n    const label = document.createElement(\"span\")\n    label.innerText = \"Export\"\n    trigger.appendChild(label)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const menuItems: TMenuItemButton[] = [\n      {\n        type: \"button\",\n        id: `${ this.id }-export-json`,\n        label: \"json\",\n        callback: () => this.editor.downloadAsJson(this.haveSymbolsSelected)\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-export-svg`,\n        label: \"svg\",\n        callback: () => this.editor.downloadAsSVG(this.haveSymbolsSelected)\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-export-png`,\n        label: \"png\",\n        callback: () => this.editor.downloadAsPNG(this.haveSymbolsSelected)\n      },\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    this.menuExport = new IIMenuSub(params).element\n    return this.menuExport\n  }\n\n  protected createMenuSelectAll(): HTMLElement\n  {\n    const btn = document.createElement(\"button\")\n    btn.id = `${ this.id }-duplicate`\n    btn.textContent = \"Select all\"\n    btn.classList.add(\"ms-menu-button\")\n    btn.addEventListener(\"pointerup\", async () => this.editor.selectAll())\n    return btn\n  }\n\n  protected updateDecoratorSubMenu(): void\n  {\n    if (this.showDecorator) {\n      this.decoratorMenu?.style.removeProperty(\"display\")\n\n      Object.values(DecoratorKind).forEach(kind =>\n      {\n        const checkbox = document.getElementById(`${ this.id }-decorator-${ kind }-enable`) as HTMLInputElement\n        if (checkbox) {\n          document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(e => e.classList.remove(\"active\"))\n          const decos = this.symbolsDecorable.flatMap(s => s.decorators).filter(d => d.kind === kind)\n\n          if (decos.length && decos.every(d => d.style.color === decos[0].style.color)) {\n            const btnToActivate = document.getElementById(`${ this.id }-decorator-${ kind }-color-${ decos[0].style.color?.replace(\"#\", \"\") }-btn`)\n            btnToActivate?.classList.add(\"active\")\n          }\n\n          if (this.symbolsDecorable.filter(s => s.decorators.some(d => d.kind === kind)).length === this.symbolsDecorable.length) {\n            checkbox.checked = true\n\n            document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(b =>\n            {\n              (b as HTMLButtonElement).disabled = false\n            })\n            checkbox.indeterminate = false\n          }\n          else if (this.symbolsDecorable.filter(s => !s.decorators.some(d => d.kind === kind)).length === this.symbolsDecorable.length) {\n            checkbox.checked = false\n            document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(b =>\n            {\n              (b as HTMLButtonElement).disabled = true\n            })\n            checkbox.indeterminate = false\n          }\n          else {\n            checkbox.setAttribute(\"indeterminate\", \"true\")\n            checkbox.indeterminate = true\n            document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(b =>\n            {\n              (b as HTMLButtonElement).disabled = false\n            })\n          }\n        }\n\n      })\n    }\n    else {\n      this.decoratorMenu?.style.setProperty(\"display\", \"none\")\n    }\n  }\n\n  protected updateGroupMenu(): void\n  {\n    if (this.groupBtn && this.haveSymbolsSelected) {\n      this.groupBtn.style.removeProperty(\"display\")\n      if (this.symbolsSelected.length === 1 && this.symbolsSelected[0].type === SymbolType.Group) {\n        this.groupBtn.textContent = \"UnGroup\"\n      }\n      else {\n        this.groupBtn.textContent = \"Group\"\n      }\n    }\n    else {\n      this.groupBtn?.style.setProperty(\"display\", \"none\")\n    }\n  }\n\n  update(): void\n  {\n    this.wrapper?.style.setProperty(\"left\", `${ this.position.x - this.position.scrollLeft }px`)\n    this.wrapper?.style.setProperty(\"top\", `${ this.position.y - this.position.scrollTop }px`)\n\n    if (this.haveSymbolsSelected) {\n      const textSymbol = this.editor.model.symbolsSelected.find(s => s.type === SymbolType.Text)\n      if (this.editMenu && this.editInput && this.editor.model.symbolsSelected.length === 1 && textSymbol) {\n        this.editMenu.style.removeProperty(\"display\")\n        this.editInput.value = (textSymbol as IIText).label\n      }\n      else {\n        this.editMenu?.style.setProperty(\"display\", \"none\")\n      }\n\n      if (this.editor.extractStrokesFromSymbols(this.symbolsSelected).length) {\n        this.convertBtn?.style.removeProperty(\"display\")\n      }\n      else {\n        this.convertBtn?.style.setProperty(\"display\", \"none\")\n      }\n\n\n      this.reorderMenu?.style.removeProperty(\"display\")\n      this.duplicateBtn?.style.removeProperty(\"display\")\n      this.removeBtn?.style.removeProperty(\"display\")\n      this.menuExport?.style.removeProperty(\"display\")\n    }\n    else {\n      this.editMenu?.style.setProperty(\"display\", \"none\")\n      this.convertBtn?.style.setProperty(\"display\", \"none\")\n      this.reorderMenu?.style.setProperty(\"display\", \"none\")\n      this.duplicateBtn?.style.setProperty(\"display\", \"none\")\n      this.removeBtn?.style.setProperty(\"display\", \"none\")\n      this.menuExport?.style.setProperty(\"display\", \"none\")\n    }\n    this.updateDecoratorSubMenu()\n    this.updateGroupMenu()\n  }\n\n  render(layer: HTMLElement): void\n  {\n    this.wrapper = document.createElement(\"div\")\n    this.wrapper.id = `${ this.id }-wrapper`\n    this.wrapper.classList.add(\"ms-menu\", \"ms-menu-context\")\n    this.wrapper.appendChild(this.createMenuEdit())\n    this.wrapper.appendChild(this.createMenuDecorator())\n    this.wrapper.appendChild(this.createMenuReorder())\n    this.wrapper.appendChild(this.createMenuExport())\n    this.wrapper.appendChild(this.createMenuConvert())\n    this.wrapper.appendChild(this.createMenuGroup())\n    this.wrapper.appendChild(this.createMenuDuplicate())\n    this.wrapper.appendChild(this.createMenuRemove())\n    this.wrapper.appendChild(this.createMenuSelectAll())\n    this.wrapper.style.setProperty(\"display\", \"none\")\n    layer.appendChild(this.wrapper)\n\n    this.editor.layers.rendering.addEventListener(\"scroll\", () =>\n    {\n      this.position.scrollLeft = this.editor.layers.rendering.scrollLeft || 0\n      this.position.scrollTop = this.editor.layers.rendering.scrollTop || 0\n      this.update()\n    })\n  }\n\n  show(): void\n  {\n    this.update()\n    this.wrapper?.style.setProperty(\"display\", \"block\")\n  }\n\n  hide(): void\n  {\n    this.wrapper?.style.setProperty(\"display\", \"none\")\n  }\n\n  destroy(): void\n  {\n    while (this.wrapper?.lastChild) {\n      this.wrapper.removeChild(this.wrapper.lastChild)\n    }\n    this.wrapper?.remove()\n  }\n}\n","\n/**\n * @group Menu\n */\nexport type TMenuConfiguration = {\n  enable: boolean,\n  style: {\n    enable: boolean,\n  }\n  tool: {\n    enable: boolean,\n  }\n  action: {\n    enable: boolean,\n  }\n  context: {\n    enable: boolean,\n  }\n}\n\n/**\n * @group Menu\n * @source\n */\nexport const DefaultMenuConfiguration: TMenuConfiguration = {\n  enable: true,\n  style: {\n    enable: true\n  },\n  tool: {\n    enable: true\n  },\n  action: {\n    enable: true\n  },\n  context: {\n    enable: true\n  },\n}\n","import style from \"./menu.css\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { InteractiveInkEditor } from \"../editor\"\nimport { IIMenuAction } from \"./IIMenuAction\"\nimport { IIMenuTool } from \"./IIMenuTool\"\nimport { IIMenuContext } from \"./IIMenuContext\"\nimport { IIMenuStyle } from \"./IIMenuStyle\"\n\n/**\n * @group Manager\n */\nexport class IIMenuManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n  editor: InteractiveInkEditor\n  layer?: HTMLElement\n  action: IIMenuAction\n  tool: IIMenuTool\n  context: IIMenuContext\n  style: IIMenuStyle\n\n  constructor(editor: InteractiveInkEditor, custom?: { style?: IIMenuStyle, tool?: IIMenuTool, action?: IIMenuAction, context?: IIMenuContext })\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n\n    if (custom?.style) {\n      const CustomMenuStyle = custom.style as unknown as typeof IIMenuStyle\n      this.style = new CustomMenuStyle(this.editor)\n    }\n    else {\n      this.style = new IIMenuStyle(this.editor)\n    }\n    if (custom?.tool) {\n      const CustomMenuTool = custom.tool as unknown as typeof IIMenuTool\n      this.tool = new CustomMenuTool(this.editor)\n    }\n    else {\n      this.tool = new IIMenuTool(this.editor)\n    }\n    if (custom?.action) {\n      const CustomMenuAction = custom.action as unknown as typeof IIMenuAction\n      this.action = new CustomMenuAction(this.editor)\n    }\n    else {\n      this.action = new IIMenuAction(this.editor)\n    }\n    if (custom?.context) {\n      const CustomMenuAction = custom.context as unknown as typeof IIMenuContext\n      this.context = new CustomMenuAction(this.editor)\n    }\n    else {\n      this.context = new IIMenuContext(this.editor)\n    }\n  }\n\n  render(layer: HTMLElement): void\n  {\n    if (this.editor.configuration.menu.enable) {\n      this.layer = layer\n\n      const styleElement = document.createElement(\"style\")\n      styleElement.appendChild(document.createTextNode(style as string))\n      this.layer.prepend(styleElement)\n\n      if (this.editor.configuration.menu.action.enable) {\n        this.action.render(this.layer)\n      }\n      if (this.editor.configuration.menu.style.enable) {\n        this.style.render(this.layer)\n      }\n      if (this.editor.configuration.menu.tool.enable) {\n        this.tool.render(this.layer)\n      }\n      if (this.editor.configuration.menu.context.enable) {\n        this.context.render(this.layer)\n      }\n    }\n  }\n\n  update(): void\n  {\n    this.action.update()\n    this.tool.update()\n    this.style.update()\n  }\n\n  show(): void\n  {\n    this.action.show()\n    this.tool.show()\n    this.style.show()\n  }\n\n  hide(): void\n  {\n    this.action.hide()\n    this.tool.hide()\n    this.style.hide()\n  }\n\n  destroy(): void\n  {\n    this.action.destroy()\n    this.tool.destroy()\n    this.style.destroy()\n  }\n}\n","import { PartialDeep } from \"../utils\"\n\n/**\n * @group Snap\n */\nexport type TSnapConfiguration = {\n  guide: boolean\n  symbol: boolean\n  angle: number\n}\n\n/**\n * @group Snap\n * @source\n */\nexport const DefaultSnapConfiguration: TSnapConfiguration = {\n  guide: true,\n  symbol: true,\n  angle: 0\n}\n\n/**\n * @group Snap\n */\nexport class SnapConfiguration implements TSnapConfiguration\n{\n  guide: boolean\n  symbol: boolean\n  angle: number\n\n  constructor(config? : PartialDeep<TSnapConfiguration>)\n  {\n    this.symbol = config?.symbol !== undefined ? config.symbol : DefaultSnapConfiguration.symbol\n    this.guide = config?.guide !== undefined ? config.guide : DefaultSnapConfiguration.guide\n    this.angle = config?.angle !== undefined ? config.angle : DefaultSnapConfiguration.angle\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { Box, TPoint, TSegment } from \"../symbol\"\nimport { IISVGRenderer } from \"../renderer\"\nimport { IISVGRendererConst } from \"../renderer/svg/IISVGRendererConst\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PartialDeep } from \"../utils\"\nimport { SnapConfiguration, TSnapConfiguration } from \"./IISnapConfiguration\"\n\n/**\n * @group Snap\n */\nexport type TSnapNudge = TPoint\n\n/**\n * @group Snap\n */\nexport type TSnapLineInfos = {\n  nudge: TSnapNudge,\n  verticales: TSegment[]\n  horizontales: TSegment[]\n}\n\n/**\n * @group Snap\n */\nexport class IISnapManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.CONVERTER)\n  editor: InteractiveInkEditor\n  configuration: SnapConfiguration\n\n  constructor(editor: InteractiveInkEditor, config?: PartialDeep<TSnapConfiguration>)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.configuration = new SnapConfiguration(config)\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): IISVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get selectionSnapPoints(): TPoint[]\n  {\n    return Box.createFromPoints(this.model.symbolsSelected.flatMap(s => s.snapPoints)).snapPoints\n  }\n\n  get otherSnapPoints(): TPoint[]\n  {\n    const selectSymbolIds = this.model.symbolsSelected.map(s => s.id)\n    return this.model.symbols.filter(s => !selectSymbolIds.includes(s.id)).flatMap(s => s.snapPoints)\n  }\n\n  get snapThreshold(): number\n  {\n    return this.editor.configuration.rendering.guides.gap / 2\n  }\n\n  protected getNearestVerticalGuide(x: number): number\n  {\n    if (this.renderer.verticalGuides.length) {\n      return this.renderer.verticalGuides.reduce((prev, curr) =>\n      {\n        return (Math.abs(curr - x) < Math.abs(prev - x) ? curr : prev)\n      })\n    }\n    return x\n  }\n\n  protected getNearestHorizontalGuide(y: number): number\n  {\n    if (this.renderer.horizontalGuides.length) {\n      return this.renderer.horizontalGuides.reduce((prev, curr) =>\n      {\n        return (Math.abs(curr - y) < Math.abs(prev - y) ? curr : prev)\n      })\n    }\n    return y\n  }\n\n  protected getGuidePointToSnap(point: TPoint): TPoint\n  {\n    return {\n      x: this.getNearestVerticalGuide(point.x),\n      y: this.getNearestHorizontalGuide(point.y)\n    }\n  }\n\n  drawSnapToElementLines(lines: TSegment[]): void\n  {\n    const attrs = {\n      role: \"snap-to-element\",\n      fill: \"transparent\",\n      stroke: \"blue\",\n      \"stroke-width\": \"2\",\n      style: IISVGRendererConst.noSelection,\n      \"marker-start\": `url(#${ IISVGRendererConst.crossMarker })`,\n      \"marker-end\": `url(#${ IISVGRendererConst.crossMarker })`\n    }\n    lines.forEach(seg =>\n    {\n      this.renderer.drawLine(seg.p1, seg.p2, attrs)\n    })\n  }\n\n  clearSnapToElementLines(): void\n  {\n    this.renderer.clearElements({ attrs: { role: \"snap-to-element\" } })\n  }\n\n  protected getSnapLinesInfos(sourcePoints: TPoint[], targetPoints: TPoint[]): TSnapLineInfos\n  {\n    const infos: TSnapLineInfos = {\n      nudge: {\n        x: Infinity,\n        y: Infinity\n      },\n      verticales: [],\n      horizontales: [],\n    }\n    if (!sourcePoints.length || !targetPoints.length) return infos\n\n    sourcePoints.forEach(p1 =>\n    {\n      targetPoints.forEach(p2 =>\n      {\n        if (this.snapThreshold > Math.abs(p2.x - p1.x)) {\n          if (Math.abs(infos.nudge.x) > Math.abs(p2.x - p1.x)) {\n            infos.nudge.x = p2.x - p1.x\n            infos.verticales = [{ p1: { ...p1 }, p2 }]\n          }\n          else if (infos.nudge.x === p2.x - p1.x) {\n            infos.verticales.push({ p1: { ...p1 }, p2 })\n          }\n        }\n        if (this.snapThreshold > Math.abs(p2.y - p1.y)) {\n          if (Math.abs(infos.nudge.y) > Math.abs(p2.y - p1.y)) {\n            infos.nudge.y = p2.y - p1.y\n            infos.horizontales = [{ p1: { ...p1 }, p2 }]\n          }\n          else if (infos.nudge.y === p2.y - p1.y) {\n            infos.horizontales.push({ p1: { ...p1 }, p2 })\n          }\n        }\n      })\n    })\n\n    return infos\n  }\n\n  snapResize(point: TPoint, horizontal = true, vertical = true): TPoint\n  {\n    this.clearSnapToElementLines()\n    if (!this.configuration.symbol && !this.configuration.guide) return point\n\n    let localPoint: TPoint = {\n      x: Infinity,\n      y: Infinity\n    }\n    if (this.configuration.guide) {\n      localPoint = this.getGuidePointToSnap(point)\n    }\n    const snapLines: TSegment[] = []\n\n    if (this.configuration.symbol) {\n      const snapLinesInfos = this.getSnapLinesInfos([point], this.otherSnapPoints)\n      if (horizontal && Math.abs(snapLinesInfos.nudge.x) <= Math.abs(point.x - localPoint.x)) {\n        localPoint.x = point.x + snapLinesInfos.nudge.x\n        snapLines.push(...snapLinesInfos.verticales)\n      }\n      if (vertical && Math.abs(snapLinesInfos.nudge.y) <= Math.abs(point.y - localPoint.y)) {\n        localPoint.y = point.y + snapLinesInfos.nudge.y\n        snapLines.push(...snapLinesInfos.horizontales)\n      }\n    }\n\n    if (localPoint.x === Infinity) localPoint.x = point.x\n    if (localPoint.y === Infinity) localPoint.y = point.y\n\n    snapLines.forEach(s => s.p1 = localPoint)\n    this.drawSnapToElementLines(snapLines)\n    return localPoint\n  }\n\n  snapTranslate(tx: number, ty: number): TSnapNudge\n  {\n    this.clearSnapToElementLines()\n    const nudge: TSnapNudge = { x: tx, y: ty }\n    if (!this.configuration.symbol && !this.configuration.guide) return nudge\n\n    const selectionSymbolPoints = this.selectionSnapPoints.map(p => ({ x: p.x + tx, y: p.y + ty }))\n\n    let lastDeltaX = Infinity\n    let lastDeltaY = Infinity\n\n    if (this.configuration.guide) {\n      selectionSymbolPoints.forEach(p =>\n      {\n        const gridPoint = this.getGuidePointToSnap(p)\n        if (lastDeltaX > Math.abs(gridPoint.x - p.x)) {\n          nudge.x = gridPoint.x - p.x + tx\n          lastDeltaX = Math.abs(gridPoint.x - p.x)\n        }\n        if (lastDeltaY > Math.abs(gridPoint.y - p.y)) {\n          nudge.y = gridPoint.y - p.y + ty\n          lastDeltaY = Math.abs(gridPoint.y - p.y)\n        }\n      })\n    }\n\n    const snapLines: TSegment[] = []\n    if (this.configuration.symbol) {\n      const snapLinesInfos = this.getSnapLinesInfos(selectionSymbolPoints, this.otherSnapPoints)\n      if (lastDeltaX >= Math.abs(snapLinesInfos.nudge.x) && snapLinesInfos.verticales.length) {\n        nudge.x = snapLinesInfos.nudge.x + tx\n        snapLines.push(...snapLinesInfos.verticales)\n      }\n      if (lastDeltaY >= Math.abs(snapLinesInfos.nudge.y) && snapLinesInfos.horizontales.length) {\n        nudge.y = snapLinesInfos.nudge.y + ty\n        snapLines.push(...snapLinesInfos.horizontales)\n      }\n    }\n    if (snapLines.length) {\n      snapLines.forEach(l =>\n      {\n        l.p1.x += nudge.x - tx\n        l.p1.y += nudge.y - ty\n      })\n      this.drawSnapToElementLines(snapLines)\n    }\n    return nudge\n  }\n\n  snapRotation(angleDegree: number): number\n  {\n    if (this.configuration.angle > 0) {\n      return this.configuration.angle * Math.round(angleDegree / this.configuration.angle)\n    }\n    return angleDegree\n  }\n}\n","import { mergeDeep, PartialDeep } from \"../utils\"\nimport { DefaultStyle, TStyle } from \"../style\"\nimport { DefaultLoggerConfiguration, TLoggerConfiguration } from \"../logger\"\nimport { DefaultGrabberConfiguration, TGrabberConfiguration } from \"../grabber\"\nimport { DefaultHistoryConfiguration, THistoryConfiguration } from \"../history\"\nimport { DefaultMenuConfiguration, TMenuConfiguration } from \"../menu\"\nimport { DefaultRecognizerWebSocketConfiguration, RecognizerWebSocketConfiguration, TRecognitionWebSocketConfiguration, TRecognizerWebSocketConfiguration, TServerWebsocketConfiguration } from \"../recognizer\"\nimport { DefaultIIRendererConfiguration, TIIRendererConfiguration } from \"../renderer\"\nimport { DefaultGestureConfiguration, TGestureConfiguration } from \"../gesture\"\nimport { TEditorConfiguration } from \"./AbstractEditor\"\nimport { DefaultSnapConfiguration, SnapConfiguration, TSnapConfiguration } from \"../snap\"\n\n/**\n * @group Editor\n */\nexport type TInteractiveInkEditorConfiguration = TEditorConfiguration & TRecognizerWebSocketConfiguration & {\n \"undo-redo\": THistoryConfiguration\n  rendering: TIIRendererConfiguration\n  grabber: TGrabberConfiguration\n  menu: TMenuConfiguration\n  penStyle: TStyle,\n  fontStyle: {\n    size: number | \"auto\"\n    weight: \"bold\" | \"normal\" | \"auto\"\n  }\n  gesture: TGestureConfiguration\n  snap: TSnapConfiguration\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultInteractiveInkEditorConfiguration: TInteractiveInkEditorConfiguration = {\n  server: DefaultRecognizerWebSocketConfiguration.server,\n  recognition: DefaultRecognizerWebSocketConfiguration.recognition,\n  menu: DefaultMenuConfiguration,\n  rendering: DefaultIIRendererConfiguration,\n  logger: DefaultLoggerConfiguration,\n  grabber: DefaultGrabberConfiguration,\n  \"undo-redo\": DefaultHistoryConfiguration,\n\n  penStyle: DefaultStyle,\n  fontStyle: {\n    size: \"auto\",\n    weight: \"auto\",\n  },\n  gesture: DefaultGestureConfiguration,\n  snap: DefaultSnapConfiguration\n}\n\n/**\n * @group Editor\n */\nexport class InteractiveInkEditorConfiguration implements TInteractiveInkEditorConfiguration\n{\n  grabber: TGrabberConfiguration\n  logger: TLoggerConfiguration\n  server: TServerWebsocketConfiguration\n  recognition: TRecognitionWebSocketConfiguration\n  rendering: TIIRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  menu: TMenuConfiguration\n\n  penStyle: TStyle\n  fontStyle: {\n    size: number | \"auto\"\n    weight: \"bold\" | \"normal\" | \"auto\"\n  }\n  gesture: TGestureConfiguration\n  snap: TSnapConfiguration\n\n  constructor(configuration?: PartialDeep<TInteractiveInkEditorConfiguration>)\n  {\n    const { server, recognition } =  new RecognizerWebSocketConfiguration(configuration)\n    this.recognition = recognition\n    this.server = server\n\n    this.grabber = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.grabber, configuration?.grabber)\n    this.logger = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.logger, configuration?.logger)\n    this.rendering = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.rendering, configuration?.rendering)\n    this[\"undo-redo\"] = mergeDeep({}, DefaultInteractiveInkEditorConfiguration[\"undo-redo\"], configuration?.[\"undo-redo\"])\n    this.menu = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.menu, configuration?.menu)\n    this.gesture = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.gesture, configuration?.gesture)\n    this.snap = new SnapConfiguration(configuration?.snap)\n\n    this.penStyle = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.penStyle, configuration?.penStyle)\n    this.fontStyle = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.fontStyle, configuration?.fontStyle)\n  }\n}\n","import { EditorTool, SELECTION_MARGIN } from \"../Constants\"\nimport { JIIXEdgeKind, JIIXELementType, JIIXNodeKind, IIModel, TExport, TJIIXStrokeItem } from \"../model\"\nimport\n{\n  Box,\n  EdgeKind,\n  IIDecorator,\n  TIIEdge,\n  IIEdgeArc,\n  IIEdgeLine,\n  IIEdgePolyLine,\n  TIIShape,\n  IIShapeCircle,\n  IIShapeEllipse,\n  IIShapePolygon,\n  IIStroke,\n  IIRecognizedText,\n  IISymbolGroup,\n  IIText,\n  ShapeKind,\n  SymbolType,\n  TIISymbol,\n  convertPartialStrokesToOIStrokes,\n  TIIRecognized,\n  IIRecognizedLine,\n  IIRecognizedPolyLine,\n  IIRecognizedArc,\n} from \"../symbol\"\nimport { RecognizerWebSocket } from \"../recognizer\"\nimport { IISVGRenderer, SVGBuilder, TIIRendererConfiguration } from \"../renderer\"\nimport { TStyle } from \"../style\"\nimport\n{\n  IIConversionManager,\n  IIWriteManager,\n  IISelectionManager,\n  IIResizeManager,\n  IIRotationManager,\n  IITranslateManager,\n  IITextManager,\n  IIEraseManager,\n  IIDebugSVGManager,\n  IIMoveManager,\n} from \"../manager\"\nimport { RecognizedKind, IIRecognizedCircle, IIRecognizedEllipse, IIRecognizedPolygon } from \"../symbol\"\nimport { IIHistoryManager, TIIHistoryBackendChanges, TIIHistoryChanges, THistoryContext } from \"../history\"\nimport { PartialDeep, convertMillimeterToPixel, mergeDeep } from \"../utils\"\nimport { IIMenuAction, IIMenuManager, IIMenuStyle, IIMenuTool } from \"../menu\"\nimport { AbstractEditor, EditorOptionsBase } from \"./AbstractEditor\"\nimport { InteractiveInkEditorConfiguration, TInteractiveInkEditorConfiguration } from \"./InteractiveInkEditorConfiguration\"\nimport { IIGestureManager } from \"../gesture\"\nimport { IISnapManager } from \"../snap\"\n\n/**\n * @group Editor\n */\nexport type TInteractiveInkEditorOptions = PartialDeep<EditorOptionsBase &\n  {\n    configuration: TInteractiveInkEditorConfiguration\n  }> &\n  {\n    override?: {\n      recognizer?: RecognizerWebSocket\n      menu?: {\n        style?: IIMenuStyle\n        tool?: IIMenuTool\n        action?: IIMenuAction\n      }\n    }\n  }\n/**\n * @group Editor\n */\nexport class InteractiveInkEditor extends AbstractEditor\n{\n  #configuration: InteractiveInkEditorConfiguration\n  #model: IIModel\n  #tool: EditorTool = EditorTool.Write\n  #layerUITimer?: ReturnType<typeof setTimeout>\n  #recognizeStrokeTimer?: ReturnType<typeof setTimeout>\n\n  renderer: IISVGRenderer\n  recognizer: RecognizerWebSocket\n\n  #penStyle: TStyle\n\n  history: IIHistoryManager\n  writer: IIWriteManager\n  eraser: IIEraseManager\n  gesture: IIGestureManager\n  resizer: IIResizeManager\n  rotator: IIRotationManager\n  translator: IITranslateManager\n  converter: IIConversionManager\n  texter: IITextManager\n  selector: IISelectionManager\n  svgDebugger: IIDebugSVGManager\n  snaps: IISnapManager\n  move: IIMoveManager\n  menu: IIMenuManager\n\n  constructor(rootElement: HTMLElement, options?: TInteractiveInkEditorOptions)\n  {\n    super(rootElement, options)\n\n    this.#configuration = new InteractiveInkEditorConfiguration(options?.configuration)\n    this.#penStyle = Object.assign({}, this.#configuration.penStyle)\n\n    if (options?.override?.recognizer) {\n      const CustomRecognizer = options?.override.recognizer as unknown as typeof RecognizerWebSocket\n      this.recognizer = new CustomRecognizer(this.#configuration)\n    }\n    else {\n      this.recognizer = new RecognizerWebSocket(this.#configuration)\n    }\n    this.recognizer.event.addErrorListener(this.manageError.bind(this))\n    this.recognizer.event.addExportedListener(this.event.emitExported.bind(this.event))\n    this.recognizer.event.addContentChangedListener(this.onContentChanged.bind(this))\n    this.recognizer.event.addSessionOpenedListener(this.event.emitSessionOpened.bind(this.event))\n    this.recognizer.event.addEndInitialization(this.layers.hideMessageModal.bind(this.layers))\n    this.recognizer.event.addIdleListener(this.updateLayerState.bind(this))\n\n    this.renderer = new IISVGRenderer(this.#configuration.rendering)\n\n    this.history = new IIHistoryManager(this.#configuration[\"undo-redo\"], this.event)\n\n    this.writer = new IIWriteManager(this)\n    this.eraser = new IIEraseManager(this)\n    this.selector = new IISelectionManager(this)\n    this.move = new IIMoveManager(this)\n\n    this.gesture = new IIGestureManager(this, this.#configuration.gesture)\n    this.resizer = new IIResizeManager(this)\n    this.rotator = new IIRotationManager(this)\n    this.translator = new IITranslateManager(this)\n    this.converter = new IIConversionManager(this)\n    this.texter = new IITextManager(this)\n    this.svgDebugger = new IIDebugSVGManager(this)\n    this.snaps = new IISnapManager(this, this.#configuration.snap)\n    this.menu = new IIMenuManager(this, options?.override?.menu)\n\n    this.#model = new IIModel(this.#configuration.rendering.minWidth, this.#configuration.rendering.minHeight, this.configuration.rendering.guides.gap)\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return this.recognizer.initialized.promise\n  }\n\n  //#region Properties\n  get tool(): EditorTool\n  {\n    return this.#tool\n  }\n  set tool(i: EditorTool)\n  {\n    this.#tool = i\n    this.menu.tool.update()\n    this.setCursorStyle()\n    this.unselectAll()\n\n    this.eraser.detach()\n    this.selector.detach()\n    this.move.detach()\n    this.writer.detach()\n    switch (this.#tool) {\n      case EditorTool.Erase:\n        this.eraser.attach(this.layers.rendering)\n        break\n      case EditorTool.Select:\n        this.selector.attach(this.layers.rendering)\n        break\n      case EditorTool.Move:\n        this.move.attach(this.layers.rendering)\n        break\n      default:\n        this.writer.attach(this.layers.rendering)\n        break\n    }\n    this.event.emitToolChanged(i)\n  }\n\n  get model(): IIModel\n  {\n    return this.#model\n  }\n\n  get configuration(): InteractiveInkEditorConfiguration\n  {\n    return this.#configuration\n  }\n  set renderingConfiguration(renderingConfiguration: TIIRendererConfiguration)\n  {\n    this.configuration.rendering = mergeDeep(this.configuration.rendering, renderingConfiguration)\n    const height = Math.max(this.renderer.parent.clientHeight, this.configuration.rendering.minHeight)\n    const width = Math.max(this.renderer.parent.clientWidth, this.configuration.rendering.minWidth)\n    this.renderer.resize(height, width)\n    this.model.rowHeight = this.configuration.rendering.guides.gap\n    this.history.stack.forEach(i => i.model.rowHeight = this.model.rowHeight)\n    this.event.emitUIpdated()\n  }\n  //#endregion\n\n  //#region Style\n  get penStyle(): TStyle\n  {\n    return this.#penStyle\n  }\n  set penStyle(penStyle: PartialDeep<TStyle>)\n  {\n    this.logger.info(\"set penStyle\", { penStyle })\n    this.#penStyle = Object.assign({}, this.#penStyle, penStyle)\n  }\n  //#endregion\n\n  protected updateLayerState(idle: boolean): void\n  {\n    this.event.emitIdle(idle)\n    this.layers.updateState(idle)\n  }\n\n  updateLayerUI(timeout: number = 500): void\n  {\n    clearTimeout(this.#layerUITimer)\n    this.#layerUITimer = setTimeout(() =>\n    {\n      this.menu.update()\n      this.svgDebugger.apply()\n      this.waitForIdle()\n      this.event.emitUIpdated()\n    }, timeout)\n  }\n\n  manageError(error: Error): void\n  {\n    this.layers.showMessageError(error)\n    this.event.emitError(error)\n  }\n\n  protected setCursorStyle(): void\n  {\n    switch (this.#tool) {\n      case EditorTool.Erase:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.add(\"erase\")\n        this.layers.root.classList.remove(\"select\")\n        this.layers.root.classList.remove(\"move\")\n        break\n      case EditorTool.Select:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        this.layers.root.classList.add(\"select\")\n        this.layers.root.classList.remove(\"move\")\n        break\n      case EditorTool.Move:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        this.layers.root.classList.remove(\"select\")\n        this.layers.root.classList.add(\"move\")\n        break\n      default:\n        this.layers.root.classList.add(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        this.layers.root.classList.remove(\"select\")\n        this.layers.root.classList.remove(\"move\")\n        break\n    }\n  }\n\n  protected async onContentChanged(undoRedoContext: THistoryContext): Promise<void>\n  {\n    clearTimeout(this.#recognizeStrokeTimer)\n    this.#recognizeStrokeTimer = setTimeout(async () =>\n    {\n      await this.synchronizeStrokesWithJIIX()\n      this.updateLayerUI(0)\n      this.event.emitChanged(undoRedoContext)\n    }, 500)\n  }\n\n  async initialize(): Promise<void>\n  {\n    try {\n      this.logger.info(\"initialize\")\n      this.layers.render()\n      this.layers.showLoader()\n      this.tool = EditorTool.Write\n      this.renderer.init(this.layers.rendering)\n      this.menu.render(this.layers.ui.root)\n\n      const compStyles = window.getComputedStyle(this.layers.root)\n      this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.#configuration.rendering.minWidth)\n      this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.#configuration.rendering.minHeight)\n      this.model.rowHeight = this.configuration.rendering.guides.gap\n      this.history.init(this.model)\n\n      if(!this.recognizer.configuration.server.version) {\n        await this.loadInfo(this.configuration.server)\n        this.recognizer.configuration.server.version = this.info!.version\n      }\n      await this.recognizer.init()\n    } catch (error) {\n      this.logger.error(\"initialize\", error)\n      this.layers.showMessageError(error as Error)\n      throw error\n    }\n    finally {\n      this.logger.debug(\"initialize\", \"finally\")\n      this.layers.hideLoader()\n      this.layers.updateState(true)\n    }\n  }\n\n  async changeLanguage(code: string): Promise<void>\n  {\n    try {\n      this.logger.info(\"changeLanguage\", { code })\n      this.updateLayerState(false)\n      this.configuration.recognition.lang = code\n      await this.recognizer.newSession(this.configuration)\n      this.recognizer.addStrokes(this.extractStrokesFromSymbols(this.model.symbols), false)\n      await this.synchronizeStrokesWithJIIX(true)\n      this.layers.hideLoader()\n      this.event.emitLoaded()\n    }\n    catch (error) {\n      this.logger.error(\"changeLanguage\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n    finally {\n      this.updateLayerUI()\n    }\n  }\n\n  protected buildShape(partialShape: PartialDeep<TIIShape>): TIIShape\n  {\n    switch (partialShape.kind) {\n      case ShapeKind.Circle:\n        return IIShapeCircle.create(partialShape as PartialDeep<IIShapeCircle>)\n      case ShapeKind.Ellipse:\n        return IIShapeEllipse.create(partialShape as PartialDeep<IIShapeEllipse>)\n      case ShapeKind.Polygon:\n        return IIShapePolygon.create(partialShape as PartialDeep<IIShapePolygon>)\n      default:\n        throw new Error(`Unable to create shape, kind: \"${ partialShape.kind }\" is unknown`)\n    }\n  }\n\n  protected buildEdge(partialEdge: PartialDeep<TIIEdge>): TIIEdge\n  {\n    switch (partialEdge.kind) {\n      case EdgeKind.Arc:\n        return IIEdgeArc.create(partialEdge as PartialDeep<IIEdgeArc>)\n      case EdgeKind.Line:\n        return IIEdgeLine.create(partialEdge as PartialDeep<IIEdgeLine>)\n      case EdgeKind.PolyEdge:\n        return IIEdgePolyLine.create(partialEdge as PartialDeep<IIEdgePolyLine>)\n      default:\n        throw new Error(`Unable to create edge, kind: \"${ partialEdge.kind }\" is unknown`)\n    }\n  }\n\n  protected buildRecognized(partialSymbol: PartialDeep<TIIRecognized>): TIIRecognized\n  {\n    switch (partialSymbol.kind) {\n      case RecognizedKind.Text:\n        return IIRecognizedText.create(partialSymbol)\n      case RecognizedKind.Arc:\n        return IIRecognizedArc.create(partialSymbol)\n      case RecognizedKind.Circle:\n        return IIRecognizedCircle.create(partialSymbol)\n      case RecognizedKind.Ellipse:\n        return IIRecognizedEllipse.create(partialSymbol)\n      case RecognizedKind.Polygone:\n        return IIRecognizedPolygon.create(partialSymbol)\n      case RecognizedKind.Line:\n        return IIRecognizedLine.create(partialSymbol)\n      case RecognizedKind.PolyEdge:\n        return IIRecognizedPolyLine.create(partialSymbol)\n      default:\n        throw new Error(`Unable to create recognized, symbol type '${ JSON.stringify(partialSymbol) } is unknow`)\n    }\n  }\n\n  protected buildGroup(partialGroup: PartialDeep<IISymbolGroup>): IISymbolGroup\n  {\n    if (!partialGroup.children?.length) {\n      throw new Error(`Unable to create group, no children`)\n    }\n\n    const children = partialGroup.children.map(partialSymbol =>\n    {\n      switch (partialSymbol?.type) {\n        case SymbolType.Stroke:\n          return IIStroke.create(partialSymbol as PartialDeep<IIStroke>)\n        case SymbolType.Shape:\n          return this.buildShape(partialSymbol as PartialDeep<TIIShape>)\n        case SymbolType.Edge:\n          return this.buildEdge(partialSymbol as PartialDeep<TIIEdge>)\n        case SymbolType.Text:\n          return IIText.create(partialSymbol as PartialDeep<IIText>)\n        case SymbolType.Group:\n          return this.buildGroup(partialSymbol as PartialDeep<IISymbolGroup>)\n        case SymbolType.Recognized:\n          return this.buildRecognized(partialSymbol as PartialDeep<TIIRecognized>)\n        default:\n          throw new Error(`Unable to create group, symbol type '${ JSON.stringify(partialSymbol) } is unknow`)\n      }\n    })\n    const group = new IISymbolGroup(children, partialGroup.style)\n    if (partialGroup.id) {\n      group.id = partialGroup.id\n    }\n    if (partialGroup.decorators) {\n      group.decorators = partialGroup.decorators.map(d => new IIDecorator(d!.kind!, d!.style as TStyle))\n    }\n    return group\n  }\n\n  protected buildStroke(partialSymbol: PartialDeep<IIStroke>): IIStroke\n  {\n    return IIStroke.create(partialSymbol as PartialDeep<IIStroke>)\n  }\n\n  protected buildStrokeText(partialSymbol: PartialDeep<IIRecognizedText>): IIRecognizedText\n  {\n    return IIRecognizedText.create(partialSymbol as PartialDeep<IIRecognizedText>)\n  }\n\n  protected buildText(partialSymbol: PartialDeep<IIText>): IIText\n  {\n    return IIText.create(partialSymbol as PartialDeep<IIText>)\n  }\n\n  protected buildSymbol(partialSymbol: PartialDeep<TIISymbol>): TIISymbol\n  {\n    try {\n      switch (partialSymbol.type) {\n        case SymbolType.Stroke:\n          return this.buildStroke(partialSymbol)\n        case SymbolType.Shape:\n          return this.buildShape(partialSymbol)\n        case SymbolType.Edge:\n          return this.buildEdge(partialSymbol)\n        case SymbolType.Text:\n          return this.buildText(partialSymbol)\n        case SymbolType.Group:\n          return this.buildGroup(partialSymbol)\n        case SymbolType.Recognized:\n          return this.buildRecognized(partialSymbol as PartialDeep<TIIRecognized>)\n        default:\n          throw new Error(`Unable to build symbol, type: \"${ partialSymbol.type }\" is unknown`)\n      }\n    }\n    catch (error) {\n      this.logger.error(\"createSymbol\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n  }\n\n  async createSymbol(partialSymbol: PartialDeep<TIISymbol>): Promise<TIISymbol>\n  {\n    try {\n      return await this.addSymbol(this.buildSymbol(partialSymbol))\n    }\n    catch (error) {\n      this.logger.error(\"createSymbol\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n    finally {\n      this.updateLayerUI()\n    }\n  }\n\n  async createSymbols(partialSymbols: PartialDeep<TIISymbol>[]): Promise<TIISymbol[]>\n  {\n    try {\n      const errors: string[] = []\n      const symbols: TIISymbol[] = []\n      partialSymbols.forEach(partialSymbol =>\n      {\n        try {\n          symbols.push(this.buildSymbol(partialSymbol))\n        } catch (error) {\n          errors.push(((error as Error).message || error) as string)\n        }\n      })\n      if (errors.length) {\n        throw new Error(errors.join(\"\\n\"))\n      }\n      return await this.addSymbols(symbols)\n    } catch (error) {\n      this.logger.error(\"createSymbols\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n  }\n\n  /** @hidden */\n  protected updateTextBounds(symbol: TIISymbol): void\n  {\n    if (symbol.type === SymbolType.Text) {\n      this.texter.updateBounds(symbol)\n    }\n    else if (symbol.type === SymbolType.Group) {\n      symbol.extractText().forEach(t => this.texter.updateBounds(t))\n    }\n  }\n\n  /** @hidden */\n  async addSymbol(sym: TIISymbol, addToHistory = true): Promise<TIISymbol>\n  {\n    this.logger.info(\"addSymbol\", { sym })\n    this.updateLayerState(false)\n    this.updateTextBounds(sym)\n    this.model.addSymbol(sym)\n    this.renderer.drawSymbol(sym)\n\n    const strokes = this.extractStrokesFromSymbols([sym])\n    this.recognizer.addStrokes(strokes, false)\n\n    if (addToHistory) {\n      this.history.push(this.model, { added: [sym] })\n    }\n    this.updateLayerUI()\n    return sym\n  }\n\n  /** @hidden */\n  async addSymbols(symList: TIISymbol[], addToHistory = true): Promise<TIISymbol[]>\n  {\n    this.logger.info(\"addSymbol\", { symList })\n    this.updateLayerState(false)\n    symList.forEach(s =>\n    {\n      this.updateTextBounds(s)\n      this.model.addSymbol(s)\n      this.renderer.drawSymbol(s)\n    })\n    const strokes = this.extractStrokesFromSymbols(symList)\n    this.recognizer.addStrokes(strokes, false)\n    if (addToHistory) {\n      this.history.push(this.model, { added: symList })\n    }\n    this.updateLayerUI()\n    return symList\n  }\n\n  async updateSymbol(sym: TIISymbol, addToHistory = true): Promise<TIISymbol>\n  {\n    this.logger.info(\"updateSymbol\", { sym })\n    this.updateLayerState(false)\n    this.updateTextBounds(sym)\n    this.model.updateSymbol(sym)\n    this.renderer.drawSymbol(sym)\n    const strokes = this.extractStrokesFromSymbols([sym])\n    this.recognizer.replaceStrokes(strokes.map(s => s.id), strokes)\n    if (addToHistory) {\n      this.history.push(this.model, { updated: [sym] })\n    }\n    this.updateLayerUI()\n    return sym\n  }\n\n  async updateSymbols(symList: TIISymbol[], addToHistory = true): Promise<TIISymbol[]>\n  {\n    this.logger.info(\"updateSymbol\", { symList })\n    this.updateLayerState(false)\n    symList.forEach(s =>\n    {\n      this.updateTextBounds(s)\n      this.model.updateSymbol(s)\n      this.renderer.drawSymbol(s)\n    })\n    const strokes = this.extractStrokesFromSymbols(symList)\n    this.recognizer.replaceStrokes(strokes.map(s => s.id), strokes)\n    if (addToHistory) {\n      this.history.push(this.model, { updated: symList })\n    }\n    this.updateLayerUI()\n    return symList\n  }\n\n  updateSymbolsStyle(symbolIds: string[], style: PartialDeep<TStyle>, addToHistory = true): void\n  {\n    this.logger.info(\"updateSymbolsStyle\", { symbolIds, style })\n    const symbols: TIISymbol[] = []\n    this.model.symbols.forEach(s =>\n    {\n      if (symbolIds.includes(s.id)) {\n        s.style = Object.assign({}, s.style, style)\n        if (\n          SymbolType.Text === s.type ||\n          SymbolType.Group === s.type ||\n          SymbolType.Recognized === s.type) {\n          s.updateChildrenStyle()\n        }\n        this.renderer.drawSymbol(s)\n        this.model.updateSymbol(s)\n        s.modificationDate = Date.now()\n        symbols.push(s)\n      }\n    })\n    if (symbols.length) {\n      symbols.forEach(s =>\n      {\n        if (s.type === SymbolType.Text) {\n          const lastWidth = s.bounds.width\n          this.texter.updateBounds(s)\n          const tx = s.bounds.width - lastWidth\n          if (tx !== 0) {\n            this.texter.moveTextAfter(s, tx)\n          }\n        }\n      })\n    }\n    if (addToHistory && symbols.length) {\n      this.history.push(this.model, { style: { symbols, style } })\n    }\n  }\n\n  updateTextFontStyle(textIds: string[], { fontSize, fontWeight }: { fontSize?: number, fontWeight?: \"normal\" | \"bold\" | \"auto\" }): void\n  {\n    this.logger.info(\"updateTextFontStyle\", { textIds, fontSize, fontWeight })\n    const symbols: (IIText | IISymbolGroup)[] = []\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    this.model.symbols.forEach(s =>\n    {\n      if (textIds.includes(s.id)) {\n        if (s.type === SymbolType.Text) {\n          s.updateChildrenFont({ fontSize, fontWeight: fontWeight === \"auto\" ? undefined : fontWeight })\n          const lastWidth = s.bounds.width\n          this.texter.updateBounds(s)\n          this.renderer.drawSymbol(s)\n          const tx = s.bounds.width - lastWidth\n          if (tx !== 0) {\n            const symbolsTranslated = this.texter.moveTextAfter(s, tx)\n            if (symbolsTranslated?.length) {\n              translate.push({\n                symbols: symbolsTranslated,\n                tx,\n                ty: 0\n              })\n            }\n          }\n          s.modificationDate = Date.now()\n          symbols.push(s)\n        }\n        else if (s.type === SymbolType.Group) {\n          const textChildren = s.extractText()\n          if (textChildren.length) {\n            textChildren.forEach(text =>\n            {\n              text.updateChildrenFont({ fontSize, fontWeight: fontWeight === \"auto\" ? undefined : fontWeight })\n              const lastWidth = s.bounds.width\n              this.texter.updateBounds(text)\n              const tx = s.bounds.width - lastWidth\n              const symbolsTranslated = this.texter.moveTextAfter(text, tx)\n              if (symbolsTranslated?.length) {\n                translate.push({\n                  symbols: symbolsTranslated,\n                  tx,\n                  ty: 0\n                })\n              }\n            })\n            s.modificationDate = Date.now()\n            this.renderer.drawSymbol(s)\n            symbols.push(s)\n          }\n\n        }\n      }\n    })\n    if (symbols.length) {\n      this.history.push(this.model, { style: { symbols, fontSize }, translate })\n    }\n  }\n\n  async replaceSymbols(oldSymbols: TIISymbol[], newSymbols: TIISymbol[], addToHistory = true): Promise<void>\n  {\n    this.logger.info(\"replaceSymbol\", { oldSymbols, newSymbols })\n    this.updateLayerState(false)\n\n    const oldStrokes = this.extractStrokesFromSymbols(oldSymbols)\n    const newStrokes = this.extractStrokesFromSymbols(newSymbols)\n\n    const symToReplace = oldSymbols.shift()\n\n    if (symToReplace) {\n      oldSymbols.forEach(s =>\n      {\n        this.renderer.removeSymbol(s.id)\n        this.model.removeSymbol(s.id)\n      })\n\n      this.model.replaceSymbol(symToReplace.id, newSymbols)\n      this.renderer.replaceSymbol(symToReplace.id, newSymbols)\n\n\n      if (oldStrokes.length && newStrokes.length) {\n        this.recognizer.replaceStrokes(oldStrokes.map(s => s.id), newStrokes)\n      }\n      else if (oldStrokes.length) {\n        this.recognizer.eraseStrokes(oldStrokes.map(s => s.id))\n      }\n      else {\n        this.recognizer.addStrokes(newStrokes, false)\n      }\n\n      if (addToHistory) {\n        this.history.push(this.model, { replaced: { oldSymbols, newSymbols } })\n      }\n      this.updateLayerUI()\n    }\n  }\n\n  changeOrderSymbol(symbol: TIISymbol, position: \"first\" | \"last\" | \"forward\" | \"backward\"): void\n  {\n    this.model.changeOrderSymbol(symbol.id, position)\n    this.renderer.changeOrderSymbol(symbol, position)\n    this.history.push(this.model, { order: { symbols: [symbol], position } })\n  }\n\n  changeOrderSymbols(symbols: TIISymbol[], position: \"first\" | \"last\" | \"forward\" | \"backward\")\n  {\n    symbols.forEach(s =>\n    {\n      this.model.changeOrderSymbol(s.id, position)\n      this.renderer.changeOrderSymbol(s, position)\n    })\n    this.history.push(this.model, { order: { symbols, position } })\n  }\n\n  groupSymbols(symbols: TIISymbol[]): IISymbolGroup\n  {\n    const group = this.buildGroup({ children: symbols })\n    symbols.forEach(s =>\n    {\n      this.model.removeSymbol(s.id)\n      this.renderer.removeSymbol(s.id)\n    })\n    this.model.addSymbol(group)\n    this.history.push(this.model, { group: { symbols } })\n    return group\n  }\n\n  ungroupSymbol(group: IISymbolGroup): TIISymbol[]\n  {\n    group.children.forEach(s => this.renderer.drawSymbol(s))\n    this.renderer.removeSymbol(group.id)\n    this.model.replaceSymbol(group.id, group.children)\n    this.history.push(this.model, { ungroup: { group } })\n    return group.children\n  }\n\n  async synchronizeStrokesWithJIIX(force: boolean = false): Promise<void>\n  {\n    //if there is no stroke, jiix should not have changed\n    const strokes = this.model.symbols.filter(s => s.type === SymbolType.Stroke)\n    if (!force && !strokes.length) {\n      this.event.emitSynchronized()\n      return\n    }\n    await this.export([\"application/vnd.myscript.jiix\"])\n\n    const getSymbolsAndStrokesAssociatedFromJIIXStrokeItems = (items: TJIIXStrokeItem[] = []): { symbols: TIISymbol[], strokes: IIStroke[] } =>\n    {\n      const symbols: TIISymbol[] = []\n      const strokes: IIStroke[] = []\n      const strokeIdsUsed: string[] = []\n      items.forEach(i =>\n      {\n        const strokeId = i[\"full-id\"]!\n        if (strokeIdsUsed.includes(strokeId)) {\n          return\n        }\n        strokeIdsUsed.push(strokeId)\n        const sym = this.model.getRootSymbol(strokeId)\n        if (sym) {\n          switch (sym?.type) {\n            // we do not modify a group created by the user\n            // case SymbolType.Group:\n            //   strokes.push(...sym.extractStrokes())\n            //   break\n            case SymbolType.Recognized:\n              // if it's recognized symbol with same number of strokes\n              // the recognition has been already done\n              // if (sym.strokes.length === items.length) {\n              //   return\n              // }\n              strokes.push(sym.strokes.find(s => s.id === i[\"full-id\"]!)!)\n              break\n            default:\n              strokes.push(sym as IIStroke)\n              break\n          }\n          const symIdx = symbols.findIndex(s => s.id === sym.id)\n          if (symIdx < 0) {\n            symbols.push(sym)\n          }\n          else {\n            symbols[symIdx] = sym\n          }\n        }\n      })\n      return {\n        symbols,\n        strokes\n      }\n    }\n\n    const jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    jiix?.elements?.forEach(el =>\n    {\n      switch (el.type) {\n        case JIIXELementType.Text: {\n          el.words?.forEach(w =>\n          {\n            const jiixAssociation = getSymbolsAndStrokesAssociatedFromJIIXStrokeItems(w.items)\n            if (jiixAssociation.strokes.length) {\n              if (jiixAssociation.symbols.length === 1) {\n                const symAsso = jiixAssociation.symbols[0]\n                if (\n                  symAsso.type === SymbolType.Recognized && symAsso.kind === RecognizedKind.Text &&\n                  symAsso.label === w.label &&\n                  symAsso.strokes.length === symAsso.strokes.length\n                ) {\n                  return\n                }\n              }\n              const line = el.lines!.find(l => l[\"first-char\"]! <= w[\"first-char\"]! && l[\"last-char\"]! >= w[\"last-char\"]!)!\n              const recognizedText = new IIRecognizedText(jiixAssociation.strokes, { baseline: convertMillimeterToPixel(line[\"baseline-y\"]), xHeight: convertMillimeterToPixel(line[\"x-height\"]) })\n              recognizedText.label = w.label\n              jiixAssociation.symbols.forEach(sym =>\n              {\n                if (sym.type === SymbolType.Recognized && sym.kind === RecognizedKind.Text) {\n                  sym.decorators.forEach(d =>\n                  {\n                    if (!recognizedText.decorators.some(wd => wd.kind === d.kind)) {\n                      recognizedText.decorators.push(d)\n                    }\n                  })\n                }\n                this.model.removeSymbol(sym.id)\n                this.renderer.removeSymbol(sym.id)\n              })\n              this.model.addSymbol(recognizedText)\n              this.renderer.drawSymbol(recognizedText)\n            }\n          })\n          break\n        }\n        case JIIXELementType.Node: {\n          let symbolRecognized: TIIRecognized | undefined\n          const jiixAssociation = getSymbolsAndStrokesAssociatedFromJIIXStrokeItems(el.items)\n          if (jiixAssociation.strokes.length) {\n            if (jiixAssociation.symbols.length === 1) {\n              const symAsso = jiixAssociation.symbols[0]\n              if (symAsso.type === SymbolType.Recognized &&\n                symAsso.strokes.length === jiixAssociation.strokes.length) {\n                return\n              }\n            }\n            switch (el.kind) {\n              case JIIXNodeKind.Circle: {\n                symbolRecognized = new IIRecognizedCircle(jiixAssociation.strokes)\n                break\n              }\n              case JIIXNodeKind.Ellipse: {\n                symbolRecognized = new IIRecognizedEllipse(jiixAssociation.strokes)\n                break\n              }\n              case JIIXNodeKind.Rectangle:\n              case JIIXNodeKind.Triangle:\n              case JIIXNodeKind.Parallelogram:\n              case JIIXNodeKind.Polygon:\n              case JIIXNodeKind.Rhombus: {\n                symbolRecognized = new IIRecognizedPolygon(jiixAssociation.strokes)\n                break\n              }\n              default:\n                this.logger.warn(\"synchronizeStrokesWithJIIX\", `Can not create recognized shape symbol, kind unknow: ${ el }`)\n                break\n            }\n            if (symbolRecognized) {\n              jiixAssociation.symbols.forEach(sym =>\n              {\n                this.model.removeSymbol(sym.id)\n                this.renderer.removeSymbol(sym.id)\n              })\n              this.model.addSymbol(symbolRecognized)\n              this.renderer.drawSymbol(symbolRecognized)\n            }\n          }\n          break\n        }\n        case JIIXELementType.Edge: {\n          let symbolRecognized: TIIRecognized | undefined\n          const jiixAssociation = getSymbolsAndStrokesAssociatedFromJIIXStrokeItems(el.kind === JIIXEdgeKind.PolyEdge ? el.edges.flatMap(e => e.items!) : el.items)\n          if (jiixAssociation.strokes.length) {\n            if (jiixAssociation.symbols.length === 1) {\n              const symAsso = jiixAssociation.symbols[0]\n              if (symAsso.type === SymbolType.Recognized &&\n                symAsso.strokes.length === jiixAssociation.strokes.length) {\n                return\n              }\n            }\n            switch (el.kind) {\n              case JIIXEdgeKind.Line: {\n                symbolRecognized = new IIRecognizedLine(jiixAssociation.strokes)\n                break\n              }\n              case JIIXEdgeKind.PolyEdge: {\n                symbolRecognized = new IIRecognizedPolyLine(jiixAssociation.strokes)\n                break\n              }\n              case JIIXEdgeKind.Arc: {\n                symbolRecognized = new IIRecognizedArc(jiixAssociation.strokes)\n                break\n              }\n              default:\n                this.logger.warn(\"synchronizeStrokesWithJIIX\", `Can not create recognized edge symbol, kind unknow: ${ el }`)\n                break\n            }\n            if (symbolRecognized) {\n              jiixAssociation.symbols.forEach(sym =>\n              {\n                this.model.removeSymbol(sym.id)\n                this.renderer.removeSymbol(sym.id)\n              })\n              this.model.addSymbol(symbolRecognized)\n              this.renderer.drawSymbol(symbolRecognized)\n            }\n          }\n          break\n        }\n        default:\n          this.logger.warn(\"synchronizeStrokesWithJIIX\", `Can not create recognized symbol, type unknow: ${ el }`)\n          break\n      }\n    })\n    // because model.export is emptied when you change symbols\n    this.model.mergeExport({ \"application/vnd.myscript.jiix\": jiix })\n    this.history.update(this.model)\n    this.event.emitSynchronized()\n  }\n\n  async removeSymbol(id: string, addToHistory = true): Promise<void>\n  {\n    this.logger.info(\"removeSymbol\", { id })\n    const symbol = this.model.getRootSymbol(id)\n    if (symbol) {\n      this.updateLayerState(false)\n      if (symbol.type === SymbolType.Group) {\n        const groupStrokeIds = symbol.extractStrokes().map(s => s.id)\n        symbol.removeChilds([id])\n        if (symbol.children.length) {\n          this.model.updateSymbol(symbol)\n          this.renderer.drawSymbol(symbol)\n          if (groupStrokeIds.includes(id)) {\n            this.recognizer.eraseStrokes([id])\n          }\n        }\n        else {\n          this.recognizer.eraseStrokes(groupStrokeIds)\n          this.model.removeSymbol(symbol.id)\n          this.renderer.removeSymbol(symbol.id)\n        }\n      }\n      else {\n        this.recognizer.eraseStrokes([id])\n        this.model.removeSymbol(symbol.id)\n        this.renderer.removeSymbol(symbol.id)\n      }\n      if (addToHistory) {\n        this.history.push(this.model, { erased: [symbol] })\n      }\n      this.updateLayerUI()\n    }\n    else {\n      this.renderer.removeSymbol(id)\n      this.recognizer.eraseStrokes([id])\n    }\n  }\n\n  async removeSymbols(ids: string[], addToHistory = true): Promise<TIISymbol[]>\n  {\n    this.logger.info(\"removeSymbol\", { ids })\n    const symbolsToRemove: TIISymbol[] = []\n    const symbolsToUpdate: TIISymbol[] = []\n    const strokesIds: string[] = []\n    ids.forEach(id =>\n    {\n      const sym = this.model.getRootSymbol(id)\n      if (sym) {\n        /** we remove root element */\n        if (sym.id === id) {\n          symbolsToRemove.push(sym)\n          switch (sym.type) {\n            case SymbolType.Stroke:\n              strokesIds.push(sym.id)\n              break\n            case SymbolType.Recognized:\n              strokesIds.push(...sym.strokes.map(s => s.id))\n              break\n            case SymbolType.Group:\n              strokesIds.push(...sym.extractStrokes().map(s => s.id))\n              break\n          }\n        }\n        else {\n          /** we want to remove child */\n          switch (sym.type) {\n            case SymbolType.Group: {\n              const gr = sym.clone()\n              strokesIds.push(...gr.extractStrokes().map(s => s.id).filter(id => ids.includes(id)))\n              gr.removeChilds(ids)\n              if (gr.children.length) {\n                symbolsToUpdate.push(gr)\n              }\n              else {\n                symbolsToRemove.push(gr)\n              }\n              break\n            }\n            case SymbolType.Recognized: {\n              strokesIds.push(id)\n              const ws = sym.clone()\n              ws.removeStrokes(ids)\n              if (ws.strokes.length) {\n                symbolsToUpdate.push(ws)\n              }\n              else {\n                symbolsToRemove.push(ws)\n              }\n              break\n            }\n          }\n\n        }\n      }\n    })\n    this.recognizer.eraseStrokes(strokesIds)\n    symbolsToRemove.forEach(s =>\n    {\n      this.model.removeSymbol(s.id)\n      this.renderer.removeSymbol(s.id)\n    })\n\n    symbolsToUpdate.forEach(s =>\n    {\n      this.model.updateSymbol(s)\n      this.renderer.drawSymbol(s)\n    })\n\n\n    if (addToHistory) {\n      const changes: TIIHistoryChanges = {}\n      if (symbolsToRemove.length || symbolsToUpdate.length) {\n        if (symbolsToRemove.length) {\n          changes.erased = symbolsToRemove\n        }\n        if (symbolsToUpdate.length) {\n          changes.updated = symbolsToUpdate\n        }\n        this.history.push(this.model, changes)\n        this.updateLayerUI()\n      }\n    }\n    this.updateLayerState(false)\n    return symbolsToRemove\n  }\n\n  select(ids: string[]): void\n  {\n    this.selector.removeSelectedGroup()\n    this.model.symbols.forEach(s =>\n    {\n      s.selected = ids.includes(s.id)\n      this.renderer.drawSymbol(s)\n    })\n    this.selector.drawSelectedGroup(this.model.symbolsSelected)\n    this.updateLayerUI()\n    this.event.emitSelected(this.model.symbolsSelected)\n  }\n\n  selectAll(): void\n  {\n    this.selector.removeSelectedGroup()\n    this.model.symbols.forEach(s =>\n    {\n      s.selected = true\n      this.renderer.drawSymbol(s)\n    })\n    this.selector.drawSelectedGroup(this.model.symbolsSelected)\n    this.updateLayerUI()\n    this.event.emitSelected(this.model.symbolsSelected)\n  }\n\n  unselectAll(): void\n  {\n    if (this.model.symbolsSelected.length) {\n      this.model.symbolsSelected.forEach(s =>\n      {\n        s.selected = false\n        this.renderer.drawSymbol(s)\n      })\n      this.selector.removeSelectedGroup()\n      this.updateLayerUI()\n      this.event.emitSelected(this.model.symbolsSelected)\n    }\n  }\n\n  async importPointEvents(partialStrokes: PartialDeep<IIStroke>[]): Promise<IIModel>\n  {\n    this.logger.info(\"importPointEvents\", { partialStrokes })\n    this.updateLayerState(false)\n    const strokes = convertPartialStrokesToOIStrokes(partialStrokes)\n    strokes.forEach(s =>\n    {\n      this.model.addSymbol(s)\n      this.renderer.drawSymbol(s)\n    })\n    this.recognizer.addStrokes(strokes, false)\n    this.history.push(this.model, { added: strokes })\n    this.logger.debug(\"importPointEvents\", this.model)\n    this.updateLayerUI()\n    this.event.emitImported(this.model.exports as TExport)\n    return this.model\n  }\n\n  protected triggerDownload(fileName: string, urlData: string): void\n  {\n    const downloadAnchorNode = document.createElement(\"a\")\n    downloadAnchorNode.setAttribute(\"href\", urlData)\n    downloadAnchorNode.setAttribute(\"download\", fileName)\n    document.body.appendChild(downloadAnchorNode)\n    downloadAnchorNode.click()\n    downloadAnchorNode.remove()\n  }\n\n  getSymbolsBounds(symbols: TIISymbol[], margin: number = SELECTION_MARGIN): Box\n  {\n    const box = Box.createFromBoxes(symbols.map(s => s.bounds))\n    box.x -= margin\n    box.y -= margin\n    box.width += margin * 2\n    box.height += margin * 2\n    return box\n  }\n\n  protected buildBlobFromSymbols(symbols: TIISymbol[], box: Box): Blob\n  {\n    const svgNode = SVGBuilder.createLayer(box)\n    symbols.forEach(s =>\n    {\n      const el = this.renderer.getElementById(s.id)?.cloneNode(true)\n      if (el) {\n        svgNode.appendChild(el)\n      }\n    })\n\n    const svgString = (new XMLSerializer()).serializeToString(svgNode)\n\n    return new Blob([svgString], {\n      type: \"image/svg+xml;charset=utf-8\"\n    })\n  }\n\n  protected getExportName(extension: string): string\n  {\n    const options: Intl.DateTimeFormatOptions = { year: \"numeric\", month: \"numeric\", day: \"numeric\", hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\" }\n    try {\n      return `iink-ts-${ new Date().toLocaleDateString(navigator.language, options) }.${ extension }`\n    }\n    catch {\n      return `iink-ts-${ new Date().toLocaleDateString(\"en-US\", options) }.${ extension }`\n    }\n  }\n\n  downloadAsSVG(selection = false)\n  {\n    const symbols = selection ? this.model.symbolsSelected : this.model.symbols\n    const box = this.getSymbolsBounds(symbols)\n    const svgBlob = this.buildBlobFromSymbols(symbols, box)\n    const url = URL.createObjectURL(svgBlob)\n    this.triggerDownload(this.getExportName(\"svg\"), url)\n  }\n\n  downloadAsPNG(selection = false)\n  {\n    const symbols = selection ? this.model.symbolsSelected : this.model.symbols\n    const box = this.getSymbolsBounds(symbols)\n    const svgBlob = this.buildBlobFromSymbols(symbols, box)\n\n    const url = URL.createObjectURL(svgBlob)\n    const image = new Image(box.width, box.height)\n    image.src = url\n    image.onload = () =>\n    {\n      const canvas = document.createElement(\"canvas\")\n      canvas.width = image.width\n      canvas.height = image.height\n\n      const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D\n      ctx.drawImage(image, 0, 0)\n      URL.revokeObjectURL(url)\n\n      const imgURI = canvas\n        .toDataURL(\"image/png\")\n        .replace(\"image/png\", \"image/octet-stream\")\n\n      this.triggerDownload(this.getExportName(\"png\"), imgURI)\n    }\n  }\n\n  downloadAsJson(selection = false)\n  {\n    const symbolsToExport = selection ? this.model.symbolsSelected : this.model.symbols\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(symbolsToExport, null, 2))\n    this.triggerDownload(this.getExportName(\"json\"), dataStr)\n  }\n\n  extractStrokesFromSymbols(symbols: TIISymbol[] | undefined): IIStroke[]\n  {\n    if (!symbols?.length) return []\n    const strokes: IIStroke[] = []\n    symbols.forEach(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Stroke:\n          strokes.push(s)\n          break\n        case SymbolType.Recognized:\n          strokes.push(...s.strokes)\n          break\n        case SymbolType.Group:\n          strokes.push(...s.extractStrokes())\n          break\n      }\n    })\n    return strokes\n  }\n\n  extractTextsFromSymbols(symbols: TIISymbol[] | undefined): IIText[]\n  {\n    if (!symbols?.length) return []\n    const texts: IIText[] = []\n    symbols.forEach(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Text:\n          texts.push(s)\n          break\n        case SymbolType.Group:\n          texts.push(...s.extractText())\n          break\n      }\n    })\n    return texts\n  }\n\n  protected extractBackendChanges(changes: TIIHistoryChanges): TIIHistoryBackendChanges\n  {\n    const backendChanges: TIIHistoryBackendChanges = {}\n    backendChanges.added = this.extractStrokesFromSymbols(changes.added)\n    backendChanges.erased = this.extractStrokesFromSymbols(changes.erased)\n\n    const updated = this.extractStrokesFromSymbols(changes.updated)\n\n    const oldStrokes = updated.concat(this.extractStrokesFromSymbols(changes.replaced?.oldSymbols))\n    const newStrokes = updated.concat(this.extractStrokesFromSymbols(changes.replaced?.newSymbols))\n    if (oldStrokes.length && newStrokes.length) {\n      backendChanges.replaced = {\n        oldStrokes,\n        newStrokes\n      }\n    }\n    else {\n      backendChanges.added.push(...newStrokes)\n      backendChanges.erased.push(...oldStrokes)\n    }\n\n    if (changes.matrix) {\n      backendChanges.matrix = {\n        strokes: this.extractStrokesFromSymbols(changes.matrix.symbols),\n        matrix: changes.matrix.matrix,\n      }\n    }\n\n    if (changes.translate?.length) {\n      backendChanges.translate = []\n      changes.translate.forEach(tr =>\n      {\n        const strokes = this.extractStrokesFromSymbols(tr.symbols)\n        if (strokes.length) {\n          backendChanges.translate!.push({\n            strokes,\n            tx: tr.tx,\n            ty: tr.ty\n          })\n        }\n      })\n    }\n    if (changes.scale?.length) {\n      backendChanges.scale = []\n      changes.scale.forEach(tr =>\n      {\n        const strokes = this.extractStrokesFromSymbols(tr.symbols)\n        if (strokes.length) {\n          backendChanges.scale!.push({\n            strokes,\n            origin: tr.origin,\n            scaleX: tr.scaleX,\n            scaleY: tr.scaleY\n          })\n        }\n      })\n    }\n    if (changes.rotate?.length) {\n      backendChanges.rotate = []\n      changes.rotate.forEach(tr =>\n      {\n        const strokes = this.extractStrokesFromSymbols(tr.symbols)\n        if (strokes.length) {\n          backendChanges.rotate!.push({\n            strokes,\n            center: tr.center,\n            angle: tr.angle\n          })\n        }\n      })\n    }\n    return backendChanges\n  }\n\n  async undo(): Promise<IIModel>\n  {\n    this.logger.info(\"undo\")\n    if (this.history.context.canUndo) {\n      this.updateLayerState(false)\n      this.unselectAll()\n      const previousStackItem = this.history.undo()\n      const modifications = previousStackItem.model.extractDifferenceSymbols(this.model)\n      this.#model = previousStackItem.model.clone()\n      this.logger.debug(\"undo\", { previousStackItem })\n      const actionsToBackend = this.extractBackendChanges(previousStackItem.changes)\n      modifications.removed.forEach(s => this.renderer.removeSymbol(s.id))\n      modifications.added.forEach(s => this.renderer.drawSymbol(s))\n      if (\n        actionsToBackend.added?.length ||\n        actionsToBackend.erased?.length ||\n        actionsToBackend.replaced ||\n        actionsToBackend.matrix ||\n        actionsToBackend.translate?.length ||\n        actionsToBackend.scale?.length ||\n        actionsToBackend.rotate?.length\n      ) {\n        await this.recognizer.undo(actionsToBackend)\n      }\n      this.updateLayerUI()\n    }\n    return this.model\n  }\n\n  async redo(): Promise<IIModel>\n  {\n    this.logger.info(\"redo\")\n\n    if (this.history.context.canRedo) {\n      this.updateLayerState(false)\n      this.unselectAll()\n      const nextStackItem = this.history.redo()\n      const modifications = nextStackItem.model.extractDifferenceSymbols(this.model)\n      this.#model = nextStackItem.model.clone()\n      this.logger.debug(\"redo\", { modifications })\n      const actionsToBackend = this.extractBackendChanges(nextStackItem.changes)\n      modifications.removed.forEach(s => this.renderer.removeSymbol(s.id))\n      modifications.added.forEach(s => this.renderer.drawSymbol(s))\n      if (\n        actionsToBackend.added?.length ||\n        actionsToBackend.erased?.length ||\n        actionsToBackend.replaced ||\n        actionsToBackend.matrix ||\n        actionsToBackend.translate?.length ||\n        actionsToBackend.scale?.length ||\n        actionsToBackend.rotate?.length\n      ) {\n        await this.recognizer.redo(actionsToBackend)\n      }\n\n      this.updateLayerUI()\n    }\n    return this.model\n  }\n\n  async export(mimeTypes?: string[]): Promise<IIModel>\n  {\n    try {\n      this.logger.info(\"export\", { mimeTypes })\n      const exports = await this.recognizer.export(mimeTypes)\n      this.model.mergeExport(exports as TExport)\n    }\n    catch (error) {\n      this.logger.error(\"export\", { error })\n      this.manageError(error as Error)\n      throw error\n    }\n    return this.model\n  }\n\n  async convert(): Promise<void>\n  {\n    await this.convertSymbols()\n  }\n\n  async convertSymbols(symbols?: TIISymbol[]): Promise<void>\n  {\n    try {\n      this.updateLayerState(false)\n      await this.converter.apply(symbols)\n      this.event.emitConverted(this.model.converts as TExport)\n    }\n    catch (error) {\n      this.logger.error(\"convert\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n    finally {\n      this.updateLayerUI()\n    }\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    return this.recognizer.waitForIdle()\n  }\n\n  async resize({ height, width }: { height?: number, width?: number } = {}): Promise<void>\n  {\n    try {\n      this.logger.info(\"resize\", { height, width })\n      const compStyles = window.getComputedStyle(this.layers.root)\n      height = height || Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.configuration.rendering.minHeight)\n      width = width || Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.configuration.rendering.minWidth)\n\n      this.updateLayerState(false)\n      this.model.height = height\n      this.model.width = width\n      this.renderer.resize(height, width)\n      this.updateLayerUI(50)\n      this.updateLayerState(true)\n    } catch (error) {\n      this.manageError(error as Error)\n    }\n  }\n\n  async clear(): Promise<void>\n  {\n    try {\n      this.logger.info(\"clear\")\n      this.updateLayerState(false)\n      if (this.model.symbols.length) {\n        this.selector.removeSelectedGroup()\n        const erased = this.model.symbols\n        this.renderer.clear()\n        this.model.clear()\n        this.history.push(this.model, { erased })\n        this.recognizer.clear()\n        this.event.emitSelected(this.model.symbolsSelected)\n      }\n      this.updateLayerUI()\n      this.event.emitCleared()\n    } catch (error) {\n      this.manageError(error as Error)\n    }\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.logger.info(\"destroy\")\n    this.eraser.detach()\n    this.selector.detach()\n    this.move.detach()\n    this.writer.detach()\n\n    this.renderer.destroy()\n    this.menu.destroy()\n    this.recognizer.destroy()\n    this.model.clear()\n    this.history.clear()\n    return Promise.resolve()\n  }\n}\n","/**\n * @group Editor\n * @remarks\n * Configure when the action is triggered.\n *\n * POINTER_UP :   Action is triggered on every PenUP.\n *                This is the recommended mode for CDK V3 WebSocket recognitions.\n *\n * QUIET_PERIOD : Action is triggered after a quiet period in milli-seconds on every pointer up.\n *                The value is set to 1000 for example recognition will be triggered when the user stops writing for 1 seconds.\n *                This is the recommended mode for all REST discoveries.\n *\n * DEMAND :       Action is triggered on external demande\n */\n export type TEditorTriggerConfiguration = {\n  exportContent: \"QUIET_PERIOD\" | \"POINTER_UP\" | \"DEMAND\"\n  exportContentDelay: number\n  resizeTriggerDelay: number\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultEditorTriggerConfiguration: TEditorTriggerConfiguration = {\n  exportContent: \"POINTER_UP\",\n  exportContentDelay: 1000,\n  resizeTriggerDelay: 100\n}\n","import { DefaultGrabberConfiguration, TGrabberConfiguration } from \"../grabber\"\nimport { DefaultHistoryConfiguration, THistoryConfiguration } from \"../history\"\nimport { DefaultLoggerConfiguration, TLoggerConfiguration } from \"../logger\"\nimport { DefaultRecognizerHTTPV1Configuration, RecognizerHTTPV1Configuration, TRecognitionHTTPV1Configuration, TRecognizerHTTPV1Configuration, TServerHTTPConfiguration } from \"../recognizer\"\nimport { DefaultRendererConfiguration, TRendererConfiguration } from \"../renderer\"\nimport { DefaultTheme, TPenStyle, TTheme } from \"../style\"\nimport { mergeDeep, PartialDeep } from \"../utils\"\nimport { TEditorConfiguration } from \"./AbstractEditor\"\nimport { DefaultEditorTriggerConfiguration, TEditorTriggerConfiguration } from \"./EditorTriggerConfiguration\"\n\n\n/**\n * @group Editor\n */\nexport type TInkEditorDeprecatedConfiguration = TEditorConfiguration & TRecognizerHTTPV1Configuration & {\n  rendering: TRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TPenStyle,\n  penStyleClasses?: string\n  theme: TTheme\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultInkEditorDeprecatedConfiguration: TInkEditorDeprecatedConfiguration = {\n  server: DefaultRecognizerHTTPV1Configuration.server,\n  recognition: DefaultRecognizerHTTPV1Configuration.recognition,\n  rendering: DefaultRendererConfiguration,\n  grabber: DefaultGrabberConfiguration,\n  triggers: DefaultEditorTriggerConfiguration,\n  \"undo-redo\": DefaultHistoryConfiguration,\n  logger: DefaultLoggerConfiguration,\n  penStyle: {},\n  theme: DefaultTheme\n}\n\n/**\n * @group Editor\n */\nexport class InkEditorDeprecatedConfiguration implements TInkEditorDeprecatedConfiguration\n{\n  server: TServerHTTPConfiguration\n  recognition: TRecognitionHTTPV1Configuration\n  rendering: TRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TPenStyle\n  penStyleClasses?: string\n  theme: TTheme\n\n  constructor(configuration?: PartialDeep<TInkEditorDeprecatedConfiguration>)\n  {\n    const { server, recognition } = new RecognizerHTTPV1Configuration(configuration)\n    this.server = server\n    this.recognition = recognition\n    this.rendering = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.rendering, configuration?.rendering)\n    this.grabber = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.grabber, configuration?.grabber)\n    this[\"undo-redo\"] = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration[\"undo-redo\"], configuration?.[\"undo-redo\"])\n    this.triggers = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.triggers, configuration?.triggers)\n    this.logger = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.logger, configuration?.logger)\n    this.penStyle = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.penStyle, configuration?.penStyle)\n    this.penStyleClasses = configuration?.penStyleClasses || this.penStyleClasses\n    this.theme = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.theme, configuration?.theme)\n  }\n}\n","import { EditorTool } from \"../Constants\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { Model, TExport } from \"../model\"\nimport { Stroke, TStroke, TPointer } from \"../symbol\"\nimport { RecognizerHTTPV1, TConverstionState } from \"../recognizer\"\nimport { CanvasRenderer } from \"../renderer\"\nimport { DefaultPenStyle, StyleManager, TPenStyle, TTheme } from \"../style\"\nimport { HistoryManager } from \"../history\"\nimport { DeferredPromise, PartialDeep } from \"../utils\"\nimport { AbstractEditor, EditorOptionsBase } from \"./AbstractEditor\"\nimport { InkEditorDeprecatedConfiguration, TInkEditorDeprecatedConfiguration } from \"./InkEditorDeprecatedConfiguration\"\n\n/**\n * @group Editor\n */\nexport type TInkEditorDeprecatedOptions = PartialDeep<EditorOptionsBase &\n{\n  configuration: TInkEditorDeprecatedConfiguration\n}> &\n{\n  override?: {\n    grabber?: PointerEventGrabber\n    recognizer?: RecognizerHTTPV1\n  }\n}\n\n/**\n * @group Editor\n * @deprecated Use {@link InkEditor} instead.\n */\nexport class InkEditorDeprecated extends AbstractEditor\n{\n  #configuration: InkEditorDeprecatedConfiguration\n  #model: Model\n  #resizeTimer?: ReturnType<typeof setTimeout>\n  #exportTimer?: ReturnType<typeof setTimeout>\n\n  grabber: PointerEventGrabber\n  renderer: CanvasRenderer\n  recognizer: RecognizerHTTPV1\n  history: HistoryManager\n  styleManager: StyleManager\n  #tool: EditorTool = EditorTool.Write\n\n  constructor(rootElement: HTMLElement, options?: TInkEditorDeprecatedOptions)\n  {\n    super(rootElement, options)\n\n    this.#configuration = new InkEditorDeprecatedConfiguration(options?.configuration)\n    this.styleManager = new StyleManager(options?.configuration?.penStyle, options?.configuration?.theme)\n\n    if (options?.override?.grabber) {\n      const CustomGrabber = options.override.grabber as unknown as typeof PointerEventGrabber\n      this.grabber = new CustomGrabber(this.#configuration.grabber)\n    }\n    else {\n      this.grabber = new PointerEventGrabber(this.#configuration.grabber)\n    }\n    this.grabber.onPointerDown = this.onPointerDown.bind(this)\n    this.grabber.onPointerMove = this.onPointerMove.bind(this)\n    this.grabber.onPointerUp = this.onPointerUp.bind(this)\n\n    if (options?.override?.recognizer) {\n      const CustomRecognizer = options.override.recognizer as unknown as typeof RecognizerHTTPV1\n      this.recognizer = new CustomRecognizer(this.#configuration)\n    }\n    else {\n      this.recognizer = new RecognizerHTTPV1(this.#configuration)\n    }\n    this.renderer = new CanvasRenderer(this.#configuration.rendering)\n\n    this.tool = EditorTool.Write\n    this.#model = new Model()\n    this.history = new HistoryManager(this.#configuration[\"undo-redo\"], this.event)\n  }\n\n  protected onPointerDown(info: PointerInfo): void\n  {\n    this.logger.info(\"onPointerDown\", { tool: this.tool, info })\n    const style: TPenStyle = Object.assign({}, this.theme?.ink, this.currentPenStyle)\n    switch (this.tool) {\n      case EditorTool.Erase: {\n        if (this.model.removeStrokesFromPoint(info.pointer).length > 0) {\n          this.renderer.drawModel(this.model)\n        }\n        break\n      }\n      case EditorTool.Write:\n        this.model.initCurrentStroke(info.pointer, info.pointerType, style)\n        this.drawCurrentStroke()\n        break\n      default:\n        this.logger.warn(\"#onPointerDown\", `onPointerDown tool unknow: \"${ this.tool }\"`)\n        break\n    }\n  }\n\n  protected onPointerMove(info: PointerInfo): void\n  {\n    this.logger.info(\"onPointerMove\", { tool: this.tool, info })\n    switch (this.tool) {\n      case EditorTool.Erase: {\n        if (this.model.removeStrokesFromPoint(info.pointer).length > 0) {\n          this.renderer.drawModel(this.model)\n        }\n        break\n      }\n      case EditorTool.Write:\n        this.model.appendToCurrentStroke(info.pointer)\n        this.drawCurrentStroke()\n        break\n      default:\n        this.logger.warn(\"#onPointerMove\", `onPointerMove tool unknow: \"${ this.tool }\"`)\n        break\n    }\n  }\n\n  protected async onPointerUp(info: PointerInfo): Promise<void>\n  {\n    try {\n      this.logger.info(\"onPointerUp\", { tool: this.tool, info })\n      switch (this.tool) {\n        case EditorTool.Erase:\n          this.model.removeStrokesFromPoint(info.pointer)\n          if (this.history.stack.at(-1)?.modificationDate !== this.model.modificationDate) {\n            await this.updateModelRendering()\n          }\n          break\n        case EditorTool.Write:\n          this.model.endCurrentStroke(info.pointer)\n          await this.updateModelRendering()\n          break\n        default:\n          this.logger.warn(\"#onPointerUp\", `onPointerUp tool unknow: \"${ this.tool }\"`)\n          break\n      }\n    } catch (error) {\n      this.layers.showMessageError(error as Error)\n      this.event.emitError(error as Error)\n      throw error\n    }\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return Promise.resolve()\n  }\n\n  get tool(): EditorTool\n  {\n    return this.#tool\n  }\n  set tool(i: EditorTool)\n  {\n    this.#tool = i\n    this.setCursorStyle()\n  }\n\n  protected setCursorStyle(): void\n  {\n    switch (this.tool) {\n      case EditorTool.Erase:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.add(\"erase\")\n        break\n      default:\n        this.layers.root.classList.add(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        break\n    }\n  }\n\n  get model(): Model\n  {\n    return this.#model\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.styleManager.currentPenStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.styleManager.penStyle\n  }\n  set penStyle(penStyle: TPenStyle | undefined)\n  {\n    this.logger.info(\"setPenStyle\", { penStyle })\n    this.styleManager.setPenStyle(penStyle)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.styleManager.penStyleClasses\n  }\n  set penStyleClasses(penStyleClasses: string | undefined)\n  {\n    this.logger.info(\"setPenStyleClasses\", { penStyleClasses })\n    this.styleManager.setPenStyleClasses(penStyleClasses)\n  }\n\n  get theme(): TTheme\n  {\n    return this.styleManager.theme\n  }\n  set theme(theme: PartialDeep<TTheme>)\n  {\n    this.logger.info(\"setTheme\", { theme })\n    this.styleManager.setTheme(theme)\n  }\n\n  get configuration(): InkEditorDeprecatedConfiguration\n  {\n    return this.#configuration\n  }\n\n  async initialize(): Promise<void>\n  {\n    try {\n      this.logger.info(\"initialize\")\n      this.layers.render()\n      this.layers.showLoader()\n\n      const compStyles = window.getComputedStyle(this.layers.root)\n      this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.#configuration.rendering.minWidth)\n      this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.#configuration.rendering.minHeight)\n      this.history.push(this.model)\n      this.layers.rendering.classList.add(this.configuration.recognition.type.toLowerCase().replace(\" \", \"-\"))\n      this.renderer.init(this.layers.rendering, { x: 50, y: 50 })\n      this.grabber.attach(this.layers.rendering)\n    } catch (error) {\n      this.logger.error(\"initialize\", error)\n      this.layers.showMessageError(error as Error)\n      throw error\n    }\n    finally {\n      this.logger.debug(\"initialize\", \"finally\")\n      this.layers.hideLoader()\n      this.layers.updateState(true)\n    }\n  }\n\n  drawCurrentStroke(): void\n  {\n    this.logger.debug(\"drawCurrentStroke\", { stroke: this.model.currentSymbol })\n    this.renderer.drawPendingStroke(this.model.currentSymbol)\n  }\n\n  async updateModelRendering(): Promise<Model>\n  {\n    this.logger.info(\"updateModelRendering\")\n    this.renderer.drawModel(this.model)\n    const deferred = new DeferredPromise<Model>()\n    this.history.push(this.model)\n    if (this.#configuration.triggers.exportContent !== \"DEMAND\") {\n      clearTimeout(this.#exportTimer)\n      let currentModel = this.model.clone()\n      this.#exportTimer = setTimeout(async () =>\n      {\n        try {\n          currentModel = await this.recognizer.export(currentModel)\n          this.history.updateStack(currentModel)\n          if (this.model.modificationDate === currentModel.modificationDate) {\n            this.model.exports = currentModel.exports\n          }\n          deferred.resolve(this.model)\n        } catch (error) {\n          this.logger.error(\"updateModelRendering\", { error })\n          this.event.emitError(error as Error)\n          deferred.reject(error as Error)\n        }\n      }, this.#configuration.triggers.exportContent === \"QUIET_PERIOD\" ? this.#configuration.triggers.exportContentDelay : 0)\n    } else {\n      deferred.resolve(this.model)\n    }\n    await deferred.promise\n    this.event.emitExported(this.model.exports as TExport)\n    this.logger.debug(\"updateModelRendering\", this.model.exports)\n    return deferred.promise\n  }\n\n  async export(mimeTypes?: string[]): Promise<Model>\n  {\n    this.logger.info(\"export\", { mimeTypes })\n    const newModel = await this.recognizer.export(this.model.clone(), mimeTypes)\n    if (this.model.modificationDate === newModel.modificationDate) {\n      this.model.mergeExport(newModel.exports as TExport)\n    }\n    this.history.updateStack(newModel)\n    this.event.emitExported(this.model.exports as TExport)\n    this.logger.debug(\"export\", this.model)\n    return this.model\n  }\n\n  async convert(params?: { conversionState?: TConverstionState, mimeTypes?: string[] }): Promise<Model>\n  {\n    this.logger.info(\"convert\", { params })\n    const newModel = await this.recognizer.convert(this.model, params?.conversionState, params?.mimeTypes)\n    Object.assign(this.#model, newModel)\n    this.event.emitConverted(this.model.converts as TExport)\n    this.logger.debug(\"convert\", this.model)\n    return this.model\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<Model>\n  {\n    const errors: string[] = []\n    strokes.forEach((s, strokeIndex) =>\n    {\n      let flag = true\n      const stroke = new Stroke(s.style || DefaultPenStyle, s.pointerType)\n      if (s.id) stroke.id = s.id\n      if (!s.pointers?.length) {\n        errors.push(`stroke ${ strokeIndex + 1 } has not pointers`)\n        flag = false\n        return\n      }\n      s.pointers?.forEach((pp, pIndex) =>\n      {\n        if (!pp) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no pointer at ${ pIndex }`)\n          flag = false\n          return\n        }\n        const pointer: TPointer = {\n          p: pp.p || 1,\n          t: pp.t || pIndex,\n          x: 0,\n          y: 0\n        }\n        if (pp?.x == undefined || pp?.x == null) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no x at pointer at ${ pIndex }`)\n          flag = false\n          return\n        }\n        else {\n          pointer.x = pp.x\n        }\n        if (pp?.y == undefined || pp?.y == null) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no y at pointer at ${ pIndex }`)\n          flag = false\n          return\n        }\n        else {\n          pointer.y = pp.y\n        }\n        if (flag) {\n          stroke.pointers.push(pointer)\n        }\n      })\n      if (flag) {\n        this.model.addStroke(stroke)\n      }\n    })\n\n    if (errors.length) {\n      this.event.emitError(new Error(errors.join(\"\\n\")))\n    }\n    try {\n      const newModel = await this.updateModelRendering()\n      Object.assign(this.#model, newModel)\n      this.event.emitImported(this.model.exports as TExport)\n      return this.model\n    } catch (error) {\n      this.event.emitError(error as Error)\n      throw error as Error\n    }\n  }\n  async resize({ height, width }: { height?: number, width?: number } = {}): Promise<void>\n  {\n    this.logger.info(\"resize\", { height, width })\n    const deferredResize = new DeferredPromise<Model>()\n    const compStyles = window.getComputedStyle(this.layers.root)\n    this.model.height = height || Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.configuration.rendering.minHeight)\n    this.model.width = width || Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.configuration.rendering.minWidth)\n    this.renderer.resize(this.model)\n    if (this.model.symbols.length) {\n      clearTimeout(this.#resizeTimer)\n      this.#resizeTimer = setTimeout(async () =>\n      {\n        const resizeModel = await this.recognizer.resize(this.model)\n        deferredResize.resolve(resizeModel)\n      }, this.#configuration.triggers.resizeTriggerDelay)\n    } else {\n      deferredResize.resolve(this.model)\n    }\n    this.#model = await deferredResize.promise\n    this.logger.debug(\"resize\", { model: this.model })\n    this.event.emitExported(this.model.exports as TExport)\n  }\n\n  async undo(): Promise<void>\n  {\n    this.logger.info(\"undo\")\n    this.#model = this.history.undo() as Model\n    this.renderer.drawModel(this.#model)\n    this.#model = await this.recognizer.export(this.#model)\n    this.history.updateStack(this.#model)\n    this.event.emitExported(this.#model.exports as TExport)\n    this.logger.debug(\"undo\", this.#model)\n  }\n\n  async redo(): Promise<void>\n  {\n    this.logger.info(\"redo\")\n    this.#model = this.history.redo() as Model\n    this.renderer.drawModel(this.#model)\n    this.#model = await this.recognizer.export(this.#model)\n    this.history.updateStack(this.#model)\n    this.event.emitExported(this.#model.exports as TExport)\n    this.logger.debug(\"redo\", this.#model)\n  }\n\n  async clear(): Promise<void>\n  {\n    this.logger.info(\"clear\")\n    this.model.clear()\n    this.history.push(this.model)\n    this.renderer.drawModel(this.model)\n    this.event.emitExported(this.model.exports as TExport)\n    this.event.emitCleared()\n    this.logger.debug(\"clear\", this.model)\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.logger.info(\"destroy\")\n    this.event.removeAllListeners()\n    this.grabber.detach()\n    this.layers.destroy()\n    this.renderer.destroy()\n    return Promise.resolve()\n  }\n}\n","import style from \"./InteractiveInkSSRSmartGuide.css\"\nimport { InteractiveInkSSREditor } from \"../editor\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { ExportType, TJIIXExport, TJIIXWord } from \"../model\"\nimport { convertMillimeterToPixel, createUUID } from \"../utils\"\nimport { TMarginConfiguration } from \"../recognizer\"\n\n/**\n * @group InteractiveInkSSRSmartGuide\n */\nexport class InteractiveInkSSRSmartGuide\n{\n  uuid: string\n  #smartGuideElement!: HTMLDivElement\n  #wrapperElement!: HTMLDivElement\n  #prompterContainerElement!: HTMLDivElement\n  #prompterTextElement!: HTMLDivElement\n  #ellipsisElement!: HTMLDivElement\n  #tagElement!: HTMLDivElement\n  #candidatesElement!: HTMLDivElement\n  #menuElement!: HTMLDivElement\n  #convertElement!: HTMLButtonElement\n  #copyElement!: HTMLButtonElement\n  #deleteElement!: HTMLButtonElement\n  #isMenuOpen!: boolean\n  editor: InteractiveInkSSREditor\n  margin: TMarginConfiguration\n  jiix?: TJIIXExport\n  lastWord?: TJIIXWord\n  wordToChange?: TJIIXWord\n  #logger = LoggerManager.getLogger(LoggerCategory.SMARTGUIDE)\n\n  constructor(editor: InteractiveInkSSREditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.uuid = createUUID()\n    this.editor = editor\n    this.margin = {\n      bottom: 0,\n      left: 0,\n      right: 0,\n      top: 0\n    }\n    this.#createRootElement()\n    this.#createWrapperElement()\n    this.#createPrompterContainerElement()\n    this.#createPrompterTextElement()\n    this.#createEllipsisElement()\n    this.#createTagElement()\n    this.#createCandidatesElement()\n    this.#createMoreMenuElement()\n    this.#createConvertElement()\n    this.#createCopyElement()\n    this.#createDeleteElement()\n  }\n\n  #createRootElement(): void\n  {\n    this.#smartGuideElement = document.createElement(\"div\")\n    this.#smartGuideElement.id = `smartguide-${ this.uuid }`\n    this.#smartGuideElement.classList.add(\"smartguide\")\n    this.#smartGuideElement.addEventListener(\"pointerdown\", e => {\n      e.preventDefault()\n      e.stopPropagation()\n    })\n  }\n\n  #createWrapperElement(): void\n  {\n    this.#wrapperElement = document.createElement(\"div\")\n    this.#wrapperElement.id = `smartguide-wrapper-${ this.uuid }`\n    this.#wrapperElement.classList.add(\"smartguide-wrapper\")\n  }\n\n  #createPrompterContainerElement(): void\n  {\n    this.#prompterContainerElement = document.createElement(\"div\")\n    this.#prompterContainerElement.id = `prompter-container-${ this.uuid }`\n    this.#prompterContainerElement.classList.add(\"prompter-container\")\n  }\n\n  #createPrompterTextElement(): void\n  {\n    this.#prompterTextElement = document.createElement(\"div\")\n    this.#prompterTextElement.id = `prompter-text-${ this.uuid }`\n    this.#prompterTextElement.classList.add(\"prompter-text\")\n    this.#prompterTextElement.setAttribute(\"touch-action\", \"none\")\n  }\n\n  #createEllipsisElement(): void\n  {\n    this.#ellipsisElement = document.createElement(\"div\")\n    this.#ellipsisElement.id = `ellipsis-${ this.uuid }`\n    this.#ellipsisElement.classList.add(\"ellipsis\")\n    this.#ellipsisElement.innerHTML = \"...\"\n  }\n\n  #createTagElement(): void\n  {\n    this.#tagElement = document.createElement(\"div\")\n    this.#tagElement.id = `tag-icon-${ this.uuid }`\n    this.#tagElement.classList.add(\"tag-icon\")\n    this.#tagElement.innerHTML = \"&#182;\"\n  }\n\n  #createCandidatesElement(): void\n  {\n    this.#candidatesElement = document.createElement(\"div\")\n    this.#candidatesElement.id = `candidates-${ this.uuid }`\n    this.#candidatesElement.classList.add(\"candidates\")\n  }\n\n  #createMoreMenuElement(): void\n  {\n    this.#menuElement = document.createElement(\"div\")\n    this.#menuElement.id = `more-menu-${ this.uuid }`\n    this.#menuElement.classList.add(\"more-menu\")\n  }\n\n  #createConvertElement(): void\n  {\n    this.#convertElement = document.createElement(\"button\")\n    this.#convertElement.id = `convert-${ this.uuid }`\n    this.#convertElement.classList.add(\"options-label-button\")\n    this.#convertElement.innerHTML = \"Convert\"\n  }\n\n  #createCopyElement(): void\n  {\n    this.#copyElement = document.createElement(\"button\")\n    this.#copyElement.id = `copy-${ this.uuid }`\n    this.#copyElement.classList.add(\"options-label-button\")\n    this.#copyElement.innerHTML = \"Copy\"\n  }\n\n  #createDeleteElement(): void\n  {\n    this.#deleteElement = document.createElement(\"button\")\n    this.#deleteElement.id = `delete-${ this.uuid }`\n    this.#deleteElement.classList.add(\"options-label-button\")\n    this.#deleteElement.innerHTML = \"Delete\"\n  }\n\n  init(domElement: HTMLElement, margin: TMarginConfiguration): void\n  {\n    this.#logger.info(\"init\", { domElement, margin })\n\n    const styleElement = document.createElement(\"style\")\n    styleElement.appendChild(document.createTextNode(style as string))\n    domElement.appendChild(styleElement)\n\n\n    domElement.appendChild(this.#smartGuideElement)\n    this.#smartGuideElement.appendChild(this.#wrapperElement)\n\n    this.#wrapperElement.appendChild(this.#tagElement)\n\n    this.#prompterContainerElement.appendChild(this.#prompterTextElement)\n    this.#wrapperElement.appendChild(this.#prompterContainerElement)\n\n    this.#wrapperElement.appendChild(this.#ellipsisElement)\n\n    this.#menuElement.appendChild(this.#convertElement)\n    this.#menuElement.appendChild(this.#copyElement)\n    this.#menuElement.appendChild(this.#deleteElement)\n    this.#menuElement.classList.add(\"close\")\n    this.#wrapperElement.appendChild(this.#menuElement)\n    this.#isMenuOpen = false\n\n    this.#candidatesElement.style.display = \"none\"\n    this.#wrapperElement.appendChild(this.#candidatesElement)\n    this.margin = margin\n    this.#addListeners()\n\n    this.resize()\n  }\n\n  #showCandidates = (target: HTMLElement) =>\n  {\n    this.#logger.info(\"showCandidates\", { target })\n    const wordId = parseInt(target.id.replace(\"word-\", \"\").replace(this.uuid, \"\"))\n    const words = this.jiix?.words as TJIIXWord[]\n    this.wordToChange = words[wordId]\n    if (this.wordToChange) {\n      this.wordToChange.id = wordId.toString()\n      this.#candidatesElement.innerHTML = \"\"\n      if (this.wordToChange?.candidates) {\n        this.#candidatesElement.style.display = \"flex\"\n        this.wordToChange.candidates.forEach((word, index) =>\n        {\n          if (this.wordToChange?.label === word) {\n            this.#candidatesElement.innerHTML += `<span id=\"cdt-${ index }${ this.uuid }\" class=\"selected-word\">${ word }</span>`\n          } else {\n            this.#candidatesElement.innerHTML += `<span id=\"cdt-${ index }${ this.uuid }\">${ word }</span>`\n          }\n        })\n\n        target.appendChild(this.#candidatesElement)\n      }\n    }\n  }\n  #hideCandidates(): void\n  {\n    this.#candidatesElement.style.display = \"none\"\n  }\n\n  #openMenu(): void\n  {\n    this.#menuElement.classList.add(\"open\")\n    this.#menuElement.classList.remove(\"close\")\n    this.#isMenuOpen = true\n  }\n  #closeMenu(): void\n  {\n    this.#menuElement.classList.add(\"close\")\n    this.#menuElement.classList.remove(\"open\")\n    this.#isMenuOpen = false\n  }\n\n  #onClickEllipsis = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickEllipsis\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    this.#isMenuOpen ? this.#closeMenu() : this.#openMenu()\n    this.#hideCandidates()\n  }\n\n  #onClickConvert = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickConvert\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.editor.convert()\n    this.#closeMenu()\n  }\n\n  #createTextAreaElement(value: string): HTMLTextAreaElement\n  {\n    const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\"\n    const textArea = document.createElement(\"textarea\")\n    textArea.style.fontSize = \"12pt\"\n    textArea.style.display = \"absolute\"\n    textArea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\"\n    const yPosition = window.pageYOffset || document.documentElement.scrollTop\n    textArea.style.top = `${ yPosition }px`\n    textArea.setAttribute(\"readonly\", \"\")\n    textArea.value = value\n    return textArea\n  }\n\n  #selectText(textArea: HTMLTextAreaElement)\n  {\n    if (navigator.userAgent.match(/ipad|iphone/i)) {\n      const range = document.createRange()\n      range.selectNodeContents(textArea)\n      const selection = window.getSelection()\n      if (selection) {\n        selection.removeAllRanges()\n        selection.addRange(range)\n        textArea.setSelectionRange(0, 999999)\n      }\n    } else {\n      textArea.select()\n    }\n  }\n\n  #onClickCopy = async (evt: Event): Promise<void> =>\n  {\n    this.#logger.info(\"onClickCopy\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    try {\n      this.#closeMenu()\n      let message = \"Nothing to copy\"\n      if (this.#prompterTextElement.innerText) {\n        message = `\"${ this.#prompterTextElement.innerText }\" copied to clipboard`\n        const fakeEl = this.#createTextAreaElement(this.#prompterTextElement.innerText)\n        this.#prompterContainerElement.appendChild(fakeEl)\n        this.#selectText(fakeEl)\n        document.execCommand(\"copy\")\n        fakeEl.remove()\n      }\n      this.editor.event.emitNotif({ message, timeout: 1500 })\n    } catch (error) {\n      this.#logger.error(\"onClickCopy\", error)\n      this.editor.event.emitError(error as Error)\n    }\n  }\n\n  #onClickDelete = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickDelete\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.editor.clear()\n    this.#closeMenu()\n  }\n\n  #onClickCandidate = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickCandidate\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    const target = evt.target as HTMLElement\n    const candidate = target.innerText\n    if (this.jiix?.words && candidate !== this.wordToChange?.label && this.wordToChange?.candidates?.includes(candidate)) {\n      this.jiix.words[parseInt(this.wordToChange?.id as string)].label = candidate\n      this.editor.import(new Blob([JSON.stringify(this.jiix)], { type: ExportType.JIIX }), ExportType.JIIX)\n    }\n    this.#candidatesElement.style.display = \"none\"\n  }\n\n  #onClickPrompter = (evt: Event): void =>\n  {\n    this.#logger.info(\"onClickPrompter\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.#closeMenu()\n    const target = evt.target as HTMLElement\n    if (target.id !== this.#prompterTextElement.id) {\n      this.#showCandidates(target)\n    } else {\n      this.#hideCandidates()\n    }\n  }\n\n  #stopPropagation = (evt: Event) =>\n  {\n    evt.preventDefault()\n    evt.stopPropagation()\n  }\n\n  #onClickOutSide = () =>\n  {\n    this.#hideCandidates()\n    this.#closeMenu()\n  }\n\n  #addListeners(): void\n  {\n    this.#smartGuideElement.addEventListener(\"pointerdown\", this.#stopPropagation.bind(this))\n    this.#ellipsisElement.addEventListener(\"pointerdown\", this.#onClickEllipsis.bind(this))\n    this.#convertElement.addEventListener(\"pointerdown\", this.#onClickConvert.bind(this))\n    this.#copyElement.addEventListener(\"pointerdown\", this.#onClickCopy.bind(this))\n    this.#deleteElement.addEventListener(\"pointerdown\", this.#onClickDelete.bind(this))\n    this.#prompterTextElement.addEventListener(\"pointerdown\", this.#onClickPrompter.bind(this))\n    this.#candidatesElement.addEventListener(\"pointerdown\", this.#onClickCandidate.bind(this))\n    document.addEventListener(\"pointerdown\", this.#onClickOutSide.bind(this))\n  }\n\n  #removeListeners(): void\n  {\n    this.#smartGuideElement.addEventListener(\"pointerdown\", this.#stopPropagation)\n    this.#ellipsisElement.removeEventListener(\"pointerdown\", this.#onClickEllipsis)\n    this.#convertElement.removeEventListener(\"pointerdown\", this.#onClickConvert)\n    this.#copyElement.removeEventListener(\"pointerdown\", this.#onClickCopy)\n    this.#deleteElement.removeEventListener(\"pointerdown\", this.#onClickDelete)\n    this.#prompterTextElement.removeEventListener(\"pointerdown\", this.#onClickPrompter)\n    this.#candidatesElement.removeEventListener(\"pointerdown\", this.#onClickCandidate)\n    document.removeEventListener(\"pointerdown\", this.#onClickOutSide)\n  }\n\n  resize(): void\n  {\n    this.#logger.info(\"resize\")\n    const marginLeft = convertMillimeterToPixel(this.margin.left)\n    const marginRight = convertMillimeterToPixel(this.margin.right)\n    this.#wrapperElement.style.marginLeft = `${ marginLeft }px`\n    this.#wrapperElement.style.marginRight = `${ marginRight }px`\n  }\n\n  update(exports: TJIIXExport): void\n  {\n    this.#logger.info(\"update\", { exports })\n    this.jiix = exports\n    const createWordSpan = (index: number, word?: TJIIXWord) =>\n    {\n      const span = document.createElement(\"span\")\n      span.id = `word-${ index }${ this.uuid }`\n      if (word) {\n        span.textContent = word.label\n      } else {\n        span.innerHTML = \"&nbsp;\"\n      }\n      this.#logger.debug(\"update\", { span })\n      return span\n    }\n\n    const populatePrompter = () =>\n    {\n      this.#logger.info(\"populatePrompter\")\n      this.#prompterTextElement.innerHTML = \"\"\n      if (this.jiix?.words) {\n        const words = this.jiix.words as TJIIXWord[]\n        const myFragment = document.createDocumentFragment()\n        words.forEach((word, index) =>\n        {\n          if (word.label === \" \" || word.label.includes(\"\\n\")) {\n            myFragment.appendChild(createWordSpan(index))\n          } else if (index !== words.length - 1) {\n            myFragment.appendChild(createWordSpan(index, word))\n          } else {\n            this.#prompterTextElement.appendChild(myFragment)\n            if (this.lastWord) {\n              this.lastWord = word\n            }\n            const span = createWordSpan(index, word)\n            // This is used to scroll to last word if last word is modified\n\n            if ((this.lastWord?.candidates !== word.candidates) && (this.lastWord?.label !== word.label)) {\n              this.lastWord = word\n            }\n            if (this.wordToChange?.id === index.toString()) {\n              span.classList.add(\"modified-word\")\n              this.wordToChange = undefined\n            }\n            else {\n              span.classList.add(\"added-word\")\n            }\n            this.#prompterTextElement.appendChild(span)\n            this.#prompterContainerElement.scrollLeft = span.offsetLeft\n            this.#logger.debug(\"update => populatePrompter\", { span, lastWord: this.lastWord })\n          }\n        })\n      }\n    }\n    populatePrompter()\n    if (this.jiix?.words?.length) {\n      this.#ellipsisElement.style.setProperty(\"pointer-events\", \"auto\")\n    }\n    else {\n      this.#ellipsisElement.style.setProperty(\"pointer-events\", \"none\")\n    }\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.#prompterTextElement.innerHTML = \"\"\n    this.#candidatesElement.innerHTML = \"\"\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    this.#removeListeners()\n    this.#smartGuideElement.remove()\n  }\n}","import { DefaultGrabberConfiguration, TGrabberConfiguration } from \"../grabber\"\nimport { DefaultHistoryConfiguration, THistoryConfiguration } from \"../history\"\nimport { DefaultLoggerConfiguration, TLoggerConfiguration } from \"../logger\"\nimport { DefaultRecognizerWebSocketSSRConfiguration, TRecognizerWebSocketSSRRecognitionConfiguration, TRecognizerWebSocketSSRConfiguration, RecognizerWebSocketSSRConfiguration, TServerWebsocketConfiguration } from \"../recognizer\"\nimport { DefaultRendererConfiguration, TRendererConfiguration } from \"../renderer\"\nimport { DefaultTheme, TPenStyle, TTheme } from \"../style\"\nimport { mergeDeep, PartialDeep } from \"../utils\"\nimport { TEditorConfiguration } from \"./AbstractEditor\"\nimport { DefaultEditorTriggerConfiguration, TEditorTriggerConfiguration } from \"./EditorTriggerConfiguration\"\n\n/**\n * @group Editor\n */\nexport type TInteractiveInkSSREditorConfiguration = TEditorConfiguration & TRecognizerWebSocketSSRConfiguration & {\n  rendering: TRendererConfiguration\n  smartGuide: {\n    enable: boolean\n  },\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TPenStyle,\n  penStyleClasses?: string\n  theme: TTheme\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultInteractiveInkSSREditorConfiguration: TInteractiveInkSSREditorConfiguration = {\n  server: DefaultRecognizerWebSocketSSRConfiguration.server,\n  recognition: DefaultRecognizerWebSocketSSRConfiguration.recognition,\n  rendering: DefaultRendererConfiguration,\n  smartGuide: {\n    enable: true\n  },\n  grabber: DefaultGrabberConfiguration,\n  triggers: DefaultEditorTriggerConfiguration,\n  \"undo-redo\": DefaultHistoryConfiguration,\n  logger: DefaultLoggerConfiguration,\n  penStyle: {},\n  theme: DefaultTheme\n}\n\n/**\n * @group Editor\n */\nexport class InteractiveInkSSREditorConfiguration implements TInteractiveInkSSREditorConfiguration\n{\n  server: TServerWebsocketConfiguration\n  recognition: TRecognizerWebSocketSSRRecognitionConfiguration\n  rendering: TRendererConfiguration\n  smartGuide: {\n    enable: boolean\n  }\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TPenStyle\n  penStyleClasses?: string\n  theme: TTheme\n\n  constructor(configuration?: PartialDeep<TInteractiveInkSSREditorConfiguration>)\n  {\n    const { server, recognition } = new RecognizerWebSocketSSRConfiguration(configuration)\n    this.server = server\n    this.recognition = recognition\n\n    this.rendering = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.rendering, configuration?.rendering)\n    this.smartGuide = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.smartGuide, configuration?.smartGuide)\n    this[\"undo-redo\"] = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration[\"undo-redo\"], configuration?.[\"undo-redo\"])\n    this.grabber = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.grabber, configuration?.grabber)\n    this.triggers = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.triggers, configuration?.triggers)\n    this.logger = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.logger, configuration?.logger)\n    this.penStyle = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.penStyle, configuration?.penStyle)\n    this.penStyleClasses = configuration?.penStyleClasses || this.penStyleClasses\n    this.theme = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.theme, configuration?.theme)\n\n    if (this.recognition.type !== \"TEXT\") {\n      this.smartGuide.enable = false\n    }\n    if (this.smartGuide.enable && !this.recognition.text.mimeTypes.includes(\"application/vnd.myscript.jiix\")) {\n      this.recognition.text.mimeTypes.push(\"application/vnd.myscript.jiix\")\n    }\n\n  }\n}\n","import { EditorTool } from \"../Constants\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { TRecognizerWebSocketSSRMessageSVGPatch, RecognizerWebSocketSSR, DefaultMarginConfiguration, TConverstionState, TMarginConfiguration } from \"../recognizer\"\nimport { InteractiveInkSSRSmartGuide } from \"../smartguide\"\nimport { InteractiveInkSSRSVGRenderer } from \"../renderer\"\nimport { DefaultPenStyle, StyleManager, TPenStyle, TTheme } from \"../style\"\nimport { HistoryManager, THistoryContext } from \"../history\"\nimport { DeferredPromise, PartialDeep } from \"../utils\"\nimport { Stroke, TStroke, TPointer } from \"../symbol\"\nimport { AbstractEditor, EditorOptionsBase } from \"./AbstractEditor\"\nimport { InteractiveInkSSREditorConfiguration } from \"./InteractiveInkSSREditorConfiguration\"\n\n/**\n * @group Editor\n */\nexport type TInteractiveInkSSREditorOptions = PartialDeep<EditorOptionsBase &\n  {\n    configuration: InteractiveInkSSREditorConfiguration\n  }> &\n  {\n    override?: {\n      grabber?: PointerEventGrabber\n      recognizer?: RecognizerWebSocketSSR\n    }\n  }\n\n/**\n * @group Editor\n */\nexport class InteractiveInkSSREditor extends AbstractEditor\n{\n  #configuration: InteractiveInkSSREditorConfiguration\n  #model: Model\n  #resizeTimer?: ReturnType<typeof setTimeout>\n\n  smartGuide?: InteractiveInkSSRSmartGuide\n  grabber: PointerEventGrabber\n  renderer: InteractiveInkSSRSVGRenderer\n  recognizer: RecognizerWebSocketSSR\n  history: HistoryManager\n  styleManager: StyleManager\n  #tool: EditorTool = EditorTool.Write\n\n  constructor(rootElement: HTMLElement, options?: TInteractiveInkSSREditorOptions)\n  {\n    super(rootElement, options)\n\n    this.#configuration = new InteractiveInkSSREditorConfiguration(options?.configuration)\n    this.styleManager = new StyleManager(options?.configuration?.penStyle, options?.configuration?.theme)\n\n    if (options?.override?.grabber) {\n      const CustomGrabber = options.override.grabber as unknown as typeof PointerEventGrabber\n      this.grabber = new CustomGrabber(this.#configuration.grabber)\n    }\n    else {\n      this.grabber = new PointerEventGrabber(this.#configuration.grabber)\n    }\n\n    if (options?.override?.recognizer) {\n      const CustomRecognizer = options.override.recognizer as unknown as typeof RecognizerWebSocketSSR\n      this.recognizer = new CustomRecognizer(this.#configuration)\n    }\n    else {\n      this.recognizer = new RecognizerWebSocketSSR(this.#configuration)\n    }\n\n    this.renderer = new InteractiveInkSSRSVGRenderer(this.#configuration.rendering)\n\n    this.tool = EditorTool.Write\n    this.#model = new Model()\n    this.history = new HistoryManager(this.#configuration[\"undo-redo\"], this.event)\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return this.recognizer.initialized.promise\n  }\n\n  get tool(): EditorTool\n  {\n    return this.#tool\n  }\n  set tool(i: EditorTool)\n  {\n    this.#tool = i\n    this.setCursorStyle()\n  }\n\n  protected setCursorStyle(): void\n  {\n    switch (this.tool) {\n      case EditorTool.Erase:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.add(\"erase\")\n        break\n      default:\n        this.layers.root.classList.add(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        break\n    }\n  }\n\n  get model(): Model\n  {\n    return this.#model\n  }\n\n  get configuration(): InteractiveInkSSREditorConfiguration\n  {\n    return this.#configuration\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.styleManager.currentPenStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.styleManager.penStyle\n  }\n  set penStyle(penStyle: PartialDeep<TPenStyle>)\n  {\n    this.logger.info(\"setPenStyle\", { penStyle })\n    this.styleManager.setPenStyle(penStyle)\n    this.logger.debug(\"setPenStyle\", this.styleManager.penStyle)\n    this.recognizer.setPenStyle(this.styleManager.penStyle)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.styleManager.penStyleClasses\n  }\n  set penStyleClasses(penClass: string)\n  {\n    this.logger.info(\"setPenStyleClasses\", { penClass })\n    this.styleManager.setPenStyleClasses(penClass)\n    this.logger.debug(\"setPenStyleClasses\", this.styleManager.penStyleClasses)\n    this.recognizer.setPenStyleClasses(this.styleManager.penStyleClasses)\n  }\n\n  get theme(): TTheme\n  {\n    return this.styleManager.theme\n  }\n  set theme(theme: PartialDeep<TTheme>)\n  {\n    this.logger.info(\"setTheme\", { theme })\n    this.styleManager.setTheme(theme)\n    this.logger.debug(\"setTheme\", this.styleManager.theme)\n    this.recognizer.setTheme(this.styleManager.theme)\n  }\n\n  protected async syncStyle(): Promise<void>\n  {\n    await Promise.all([\n      this.recognizer.setPenStyle(this.styleManager.penStyle),\n      this.recognizer.setPenStyleClasses(this.styleManager.penStyleClasses),\n      this.recognizer.setTheme(this.styleManager.theme)\n    ])\n  }\n\n  protected onExport(exports: TExport): void\n  {\n    this.logger.debug(\"onExport\", { exports })\n    if (this.smartGuide && exports?.[\"application/vnd.myscript.jiix\"]) {\n      const jjix = exports[\"application/vnd.myscript.jiix\"] as TJIIXExport\n      this.smartGuide.update(jjix)\n    }\n    this.model.mergeExport(exports)\n    this.event.emitExported(exports)\n  }\n\n  protected onPointerDown(info: PointerInfo): void\n  {\n    this.logger.info(\"onPointerDown\", { tool: this.tool, info })\n    const style: TPenStyle = Object.assign({}, this.theme?.ink, this.currentPenStyle)\n    this.model.initCurrentStroke(info.pointer, this.tool === EditorTool.Erase ? \"eraser\" : info.pointerType, style)\n    this.drawCurrentStroke()\n  }\n\n  protected onPointerMove(info: PointerInfo): void\n  {\n    this.logger.info(\"onPointerMove\", { tool: this.tool, info })\n    this.model.appendToCurrentStroke(info.pointer)\n    this.drawCurrentStroke()\n  }\n\n  protected async onPointerUp(info: PointerInfo): Promise<void>\n  {\n    try {\n      this.logger.info(\"onPointerUp\", { tool: this.tool, info })\n      this.model.endCurrentStroke(info.pointer)\n      await this.synchronizeModelWithBackend()\n    } catch (error) {\n      this.event.emitError(error as Error)\n    }\n  }\n\n  protected onSVGPatch(evt: TRecognizerWebSocketSSRMessageSVGPatch): void\n  {\n    this.logger.info(\"onSVGPatch\", { evt })\n    this.renderer.updatesLayer(evt.layer, evt.updates)\n  }\n\n  protected initializeSmartGuide(): void\n  {\n    this.smartGuide?.destroy()\n    this.logger.info(\"initializeSmartGuide\", { smartGuide: this.configuration.smartGuide })\n    if (this.configuration.smartGuide.enable) {\n      this.smartGuide = new InteractiveInkSSRSmartGuide(this)\n      let margin: TMarginConfiguration = DefaultMarginConfiguration\n      switch (this.configuration.recognition.type) {\n        case \"TEXT\":\n          margin = this.configuration.recognition.text.margin\n          break\n        case \"MATH\":\n          margin = this.configuration.recognition.math.margin\n          break\n      }\n      this.smartGuide.init(this.layers.ui.root, margin)\n    }\n  }\n\n  protected onContetChaned(undoRedoContext: THistoryContext): void\n  {\n    this.history.context = undoRedoContext\n    this.event.emitChanged(undoRedoContext)\n  }\n\n  protected onError(error: Error): void\n  {\n    this.layers.showMessageError(error)\n    this.event.emitError(error)\n  }\n\n  async initialize(): Promise<void>\n  {\n    try {\n      this.logger.info(\"initialize\")\n      this.layers.render()\n      this.layers.showLoader()\n\n      const compStyles = window.getComputedStyle(this.layers.root)\n      this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.#configuration.rendering.minWidth)\n      this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.#configuration.rendering.minHeight)\n      this.history.push(this.model)\n      this.renderer.init(this.layers.rendering)\n\n      this.grabber.attach(this.layers.rendering)\n      this.grabber.onPointerDown = this.onPointerDown.bind(this)\n      this.grabber.onPointerMove = this.onPointerMove.bind(this)\n      this.grabber.onPointerUp = this.onPointerUp.bind(this)\n\n      this.initializeSmartGuide()\n\n      if(!this.recognizer.configuration.server.version) {\n        await this.loadInfo(this.configuration.server)\n        this.recognizer.configuration.server.version = this.info!.version\n      }\n      await this.recognizer.init(this.model.height, this.model.width)\n      this.recognizer.event.addExportedListener(this.onExport.bind(this))\n      this.recognizer.event.addSVGPatchListener(this.onSVGPatch.bind(this))\n      this.recognizer.event.addContentChangedListener(this.onContetChaned.bind(this))\n      this.recognizer.event.addIdleListener(this.event.emitIdle.bind(this.event))\n      this.recognizer.event.addErrorListener(this.onError.bind(this))\n\n      await this.syncStyle()\n    } catch (error) {\n      this.logger.error(\"initialize\", error)\n      this.layers.showMessageError(error as Error)\n      throw error\n    }\n    finally {\n      this.logger.debug(\"initialize\", \"finally\")\n      this.layers.hideLoader()\n      this.layers.updateState(true)\n    }\n  }\n\n  drawCurrentStroke(): void\n  {\n    this.logger.debug(\"drawCurrentStroke\", { stroke: this.model.currentSymbol })\n    const currentSymbol = this.model.currentSymbol as Stroke\n    if (currentSymbol) {\n      this.renderer.drawPendingStroke(currentSymbol)\n    }\n  }\n\n  async synchronizeModelWithBackend(): Promise<Model>\n  {\n    this.logger.info(\"synchronizeModelWithBackend\")\n    if (this.#configuration.triggers.exportContent !== \"DEMAND\") {\n      const unsentStrokes = this.model.extractUnsentStrokes()\n      this.model.updatePositionSent()\n      this.history.push(this.model)\n      this.renderer.clearErasingStrokes()\n      const exports = await this.recognizer.addStrokes(unsentStrokes)\n      this.model.mergeExport(exports)\n      this.history.updateStack(this.model)\n    }\n    this.logger.debug(\"synchronizeModelWithBackend\", this.model)\n    return this.model\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    return this.recognizer.waitForIdle()\n  }\n\n  async export(mimeTypes?: string[]): Promise<Model>\n  {\n    this.logger.info(\"export\", { mimeTypes })\n    try {\n      if (this.#configuration.triggers.exportContent === \"DEMAND\") {\n        const unsentStrokes = this.model.extractUnsentStrokes()\n        this.history.push(this.model)\n        this.history.stack.push(this.model.clone())\n        this.model.updatePositionSent()\n        const exports = await this.recognizer.addStrokes(unsentStrokes)\n        this.model.updatePositionReceived()\n        this.model.mergeExport(exports)\n        this.logger.debug(\"export\", this.model)\n      } else {\n        return await this.recognizer.export(this.model, mimeTypes)\n      }\n    } catch (error) {\n      this.logger.error(\"export\", { error })\n      this.event.emitError(error as Error)\n      return Promise.reject(error)\n    }\n    return this.model\n  }\n\n  async convert(params?: { conversionState?: TConverstionState }): Promise<Model>\n  {\n    this.logger.info(\"convert\", { params })\n    this.history.push(this.model)\n    this.history.stack.push(this.model.clone())\n    this.#model = await this.recognizer.convert(this.model, params?.conversionState)\n    this.logger.debug(\"convert\", this.model)\n    this.history.push(this.model)\n    this.event.emitConverted(this.model.converts as TExport)\n    return this.model\n  }\n\n  async import(data: Blob | string | TJIIXExport, mimeType?: string): Promise<Model>\n  {\n    let blobToImport: Blob\n    if (data instanceof Blob) {\n      blobToImport = data\n    }\n    else if (typeof data === \"string\") {\n      blobToImport = new Blob([data])\n    }\n    else {\n      blobToImport = new Blob([JSON.stringify(data)])\n    }\n    this.logger.info(\"import\", { data, mimeType })\n    this.history.stack.push(this.model.clone())\n    this.#model = await this.recognizer.import(this.model, blobToImport, mimeType)\n    this.history.push(this.model)\n    this.event.emitImported(this.model.exports as TExport)\n    return this.model\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<Model>\n  {\n    this.logger.info(\"importPointEvents\", { strokes })\n    const errors: string[] = []\n    const strokesToImport = strokes.map((s, strokeIndex) =>\n    {\n      const str = new Stroke(s.style || DefaultPenStyle, s.pointerType)\n      if (s.id) str.id = s.id\n      if (s.pointerType) str.pointerType = s.pointerType\n      if (!s.pointers?.length) {\n        errors.push(`stroke ${ strokeIndex + 1 } has not pointers`)\n      }\n      let flag = true\n      s.pointers?.forEach((pp, pIndex) =>\n      {\n        flag = true\n        if (!pp) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no pointer at ${ pIndex }`)\n          return\n        }\n        const pointer: TPointer = {\n          p: pp.p || 1,\n          t: pp.t || pIndex,\n          x: 0,\n          y: 0\n        }\n        if (pp?.x == undefined || pp?.x == null) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no x at pointer at ${ pIndex }`)\n          flag = false\n        }\n        else {\n          pointer.x = pp.x\n        }\n        if (pp?.y == undefined || pp?.y == null) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no y at pointer at ${ pIndex }`)\n          flag = false\n        }\n        else {\n          pointer.y = pp.y\n        }\n        if (flag) {\n          str.pointers.push(pointer)\n        }\n      })\n      return str\n    })\n    if (errors.length) {\n      this.event.emitError(new Error(errors.join(\"\\n\")))\n    }\n    strokesToImport.map(s => this.model.addStroke(s))\n    const exportPoints = await this.recognizer.importPointEvents(strokesToImport)\n    this.model.mergeExport(exportPoints)\n    this.event.emitImported(this.model.exports as TExport)\n    this.logger.debug(\"importPointEvents\", this.model)\n    return this.model\n  }\n\n  async resize({ height, width }: { height?: number, width?: number } = {}): Promise<void>\n  {\n    this.logger.info(\"resize\", { height, width })\n    const deferredResize = new DeferredPromise<Model>()\n    const compStyles = window.getComputedStyle(this.layers.root)\n    this.model.height = height || Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.configuration.rendering.minHeight)\n    this.model.width = width || Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.configuration.rendering.minWidth)\n    const clonedModel = this.model.clone()\n    this.renderer.resize(clonedModel)\n    clearTimeout(this.#resizeTimer)\n    this.#resizeTimer = setTimeout(async () =>\n    {\n      try {\n        const resizeModel = await this.recognizer.resize(clonedModel)\n        deferredResize.resolve(resizeModel)\n      } catch (error) {\n        this.logger.error(\"resize\", { height, width, error })\n        deferredResize.reject(error as Error)\n      }\n    }, this.#configuration.triggers.resizeTriggerDelay)\n\n    this.#model = await deferredResize.promise\n    this.smartGuide?.resize()\n    this.event.emitExported(this.model.exports as TExport)\n    this.logger.debug(\"resize\", this.model)\n  }\n\n  async undo(): Promise<Model>\n  {\n    this.logger.info(\"undo\")\n    if (this.history.context.canUndo) {\n      this.#model = this.history.undo() as Model\n      return this.recognizer.undo(this.model)\n    }\n    else {\n      throw new Error(\"Undo not allowed\")\n    }\n  }\n\n  async redo(): Promise<Model>\n  {\n    this.logger.info(\"redo\")\n    if (this.history.context.canRedo) {\n      this.#model = this.history.redo() as Model\n      this.logger.debug(\"undo\", this.#model)\n      return this.recognizer.redo(this.model)\n    }\n    else {\n      throw new Error(\"Redo not allowed\")\n    }\n  }\n\n  async clear(): Promise<void>\n  {\n    this.logger.info(\"clear\")\n    this.model.clear()\n    this.history.push(this.model)\n    await this.recognizer.clear(this.model)\n    this.event.emitCleared()\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.logger.info(\"destroy\")\n    this.event.removeAllListeners()\n    this.grabber.detach()\n    this.layers.destroy()\n    this.renderer.destroy()\n    this.recognizer.destroy()\n    this.smartGuide?.destroy()\n    return Promise.resolve()\n  }\n}\n","import { DefaultGrabberConfiguration, TGrabberConfiguration } from \"../grabber\"\nimport { DefaultHistoryConfiguration, THistoryConfiguration } from \"../history\"\nimport { DefaultLoggerConfiguration, TLoggerConfiguration } from \"../logger\"\nimport { DefaultRecognizerHTTPV2Configuration, RecognizerHTTPV2Configuration, TRecognizerHTTPV2Configuration, TRecognizerHTTPV2RecognitionConfiguration, TServerHTTPConfiguration } from \"../recognizer\"\nimport { DefaultRendererConfiguration, TRendererConfiguration } from \"../renderer\"\nimport { DefaultStyle, TStyle } from \"../style\"\nimport { convertPixelToMillimeter, mergeDeep, PartialDeep } from \"../utils\"\nimport { TEditorConfiguration } from \"./AbstractEditor\"\nimport { DefaultEditorTriggerConfiguration, TEditorTriggerConfiguration } from \"./EditorTriggerConfiguration\"\n\n\n/**\n * @group Editor\n */\nexport type TInkEditorConfiguration = TEditorConfiguration & TRecognizerHTTPV2Configuration & {\n  renderer: TRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TStyle\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultInkEditorConfiguration: TInkEditorConfiguration = {\n  server: DefaultRecognizerHTTPV2Configuration.server,\n  recognition: DefaultRecognizerHTTPV2Configuration.recognition,\n  renderer: DefaultRendererConfiguration,\n  grabber: DefaultGrabberConfiguration,\n  triggers: DefaultEditorTriggerConfiguration,\n  \"undo-redo\": DefaultHistoryConfiguration,\n  logger: DefaultLoggerConfiguration,\n  penStyle: DefaultStyle,\n}\n\n/**\n * @group Editor\n */\nexport class InkEditorConfiguration implements TInkEditorConfiguration\n{\n  server: TServerHTTPConfiguration\n  recognition: TRecognizerHTTPV2RecognitionConfiguration\n  renderer: TRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TStyle\n\n  constructor(configuration?: PartialDeep<InkEditorConfiguration>)\n  {\n    const { server, recognition } = new RecognizerHTTPV2Configuration(configuration)\n    this.server = server\n    this.recognition = recognition\n    this.renderer = mergeDeep({}, DefaultInkEditorConfiguration.renderer, configuration?.renderer)\n    this.recognition.text.guides.enable = this.renderer.guides.enable\n    if (this.renderer.guides.enable)\n    {\n      this.recognition.text.guides[\"line-gap-mm\"] = convertPixelToMillimeter(this.renderer.guides.gap)\n    }\n    this.grabber = mergeDeep({}, DefaultInkEditorConfiguration.grabber, configuration?.grabber)\n    this[\"undo-redo\"] = mergeDeep({}, DefaultInkEditorConfiguration[\"undo-redo\"], configuration?.[\"undo-redo\"])\n    this.triggers = mergeDeep({}, DefaultInkEditorConfiguration.triggers, configuration?.triggers)\n    this.logger = mergeDeep({}, DefaultInkEditorConfiguration.logger, configuration?.logger)\n    this.penStyle = mergeDeep({}, DefaultInkEditorConfiguration.penStyle, configuration?.penStyle)\n  }\n}\n","import { EditorTool } from \"../Constants\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { Model, TExport } from \"../model\"\nimport { TStroke, convertPartialStrokesToStrokes } from \"../symbol\"\nimport { RecognizerHTTPV2 } from \"../recognizer\"\nimport { CanvasRenderer } from \"../renderer\"\nimport { TStyle } from \"../style\"\nimport { HistoryManager } from \"../history\"\nimport { DeferredPromise, PartialDeep } from \"../utils\"\nimport { AbstractEditor, EditorOptionsBase } from \"./AbstractEditor\"\nimport { InkEditorConfiguration, TInkEditorConfiguration } from \"./InkEditorConfiguration\"\n\n/**\n * @group Editor\n */\nexport type TInkEditorOptions = PartialDeep<EditorOptionsBase &\n{\n  configuration: TInkEditorConfiguration\n}> &\n{\n  override?: {\n    grabber?: PointerEventGrabber\n    recognizer?: RecognizerHTTPV2\n  }\n}\n\n/**\n * @group Editor\n */\nexport class InkEditor extends AbstractEditor {\n  #configuration: InkEditorConfiguration\n  #model: Model\n  #exportTimer?: ReturnType<typeof setTimeout>\n  #penStyle: TStyle\n  grabber: PointerEventGrabber\n  renderer: CanvasRenderer\n  recognizer: RecognizerHTTPV2\n  history: HistoryManager\n  #tool: EditorTool = EditorTool.Write\n\n  constructor(rootElement: HTMLElement, options?: TInkEditorOptions) {\n    super(rootElement, options)\n\n    this.#configuration = new InkEditorConfiguration(options?.configuration)\n\n    this.#penStyle = Object.assign({}, this.#configuration.penStyle)\n\n    if (options?.override?.grabber) {\n      const CustomGrabber = options.override.grabber as unknown as typeof PointerEventGrabber\n      this.grabber = new CustomGrabber(this.#configuration.grabber)\n    }\n    else {\n      this.grabber = new PointerEventGrabber(this.#configuration.grabber)\n    }\n    this.grabber.onPointerDown = this.onPointerDown.bind(this)\n    this.grabber.onPointerMove = this.onPointerMove.bind(this)\n    this.grabber.onPointerUp = this.onPointerUp.bind(this)\n\n    if (options?.override?.recognizer) {\n      const CustomRecognizer = options.override.recognizer as unknown as typeof RecognizerHTTPV2\n      this.recognizer = new CustomRecognizer(this.#configuration)\n    }\n    else {\n      this.recognizer = new RecognizerHTTPV2(this.#configuration)\n    }\n    this.renderer = new CanvasRenderer(this.#configuration.renderer)\n\n    this.tool = EditorTool.Write\n    this.#model = new Model()\n    this.history = new HistoryManager(this.#configuration[\"undo-redo\"], this.event)\n  }\n\n  protected onPointerDown(info: PointerInfo): void {\n    this.logger.info(\"onPointerDown\", { tool: this.tool, info })\n    switch (this.tool) {\n      case EditorTool.Erase: {\n        if (this.model.removeStrokesFromPoint(info.pointer).length > 0) {\n          this.renderer.drawModel(this.model)\n        }\n        break\n      }\n      case EditorTool.Write:\n        this.model.initCurrentStroke(info.pointer, info.pointerType, this.penStyle)\n        this.drawCurrentStroke()\n        break\n      default:\n        this.logger.warn(\"#onPointerDown\", `onPointerDown tool unknow: \"${this.tool}\"`)\n        break\n    }\n  }\n\n  protected onPointerMove(info: PointerInfo): void {\n    this.logger.info(\"onPointerMove\", { tool: this.tool, info })\n    switch (this.tool) {\n      case EditorTool.Erase: {\n        if (this.model.removeStrokesFromPoint(info.pointer).length > 0) {\n          this.renderer.drawModel(this.model)\n        }\n        break\n      }\n      case EditorTool.Write:\n        this.model.appendToCurrentStroke(info.pointer)\n        this.drawCurrentStroke()\n        break\n      default:\n        this.logger.warn(\"#onPointerMove\", `onPointerMove tool unknow: \"${this.tool}\"`)\n        break\n    }\n  }\n\n  protected async onPointerUp(info: PointerInfo): Promise<void> {\n    this.logger.info(\"onPointerUp\", { tool: this.tool, info })\n    switch (this.tool) {\n      case EditorTool.Erase:\n        this.model.removeStrokesFromPoint(info.pointer)\n        if (this.history.stack.at(-1)?.modificationDate !== this.model.modificationDate) {\n          await this.updateModelRendering()\n        }\n        break\n      case EditorTool.Write:\n        this.model.endCurrentStroke(info.pointer)\n        await this.updateModelRendering()\n        break\n      default:\n        this.logger.warn(\"#onPointerUp\", `onPointerUp tool unknow: \"${this.tool}\"`)\n        break\n    }\n  }\n\n  get penStyle(): TStyle\n  {\n    return this.#penStyle\n  }\n  set penStyle(penStyle: PartialDeep<TStyle>)\n  {\n    this.logger.info(\"set penStyle\", { penStyle })\n    this.#penStyle = Object.assign({}, this.#penStyle, penStyle)\n  }\n\n  get initializationPromise(): Promise<void> {\n    return Promise.resolve()\n  }\n\n  get tool(): EditorTool {\n    return this.#tool\n  }\n  set tool(i: EditorTool) {\n    this.#tool = i\n    this.setCursorStyle()\n  }\n\n  protected setCursorStyle(): void {\n    switch (this.tool) {\n      case EditorTool.Erase:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.add(\"erase\")\n        break\n      default:\n        this.layers.root.classList.add(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        break\n    }\n  }\n\n  get model(): Model {\n    return this.#model\n  }\n\n  get configuration(): InkEditorConfiguration {\n    return this.#configuration\n  }\n\n  async initialize(): Promise<void> {\n    try {\n      this.logger.info(\"initialize\")\n      this.layers.render()\n      this.layers.showLoader()\n\n      const compStyles = window.getComputedStyle(this.layers.root)\n      this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.#configuration.renderer.minWidth)\n      this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.#configuration.renderer.minHeight)\n      this.history.push(this.model)\n      this.layers.rendering.classList.add(this.configuration.recognition.type.toLowerCase().replace(\" \", \"-\"))\n      this.renderer.init(this.layers.rendering, this.#configuration.renderer.guides.enable ? { x: this.#configuration.renderer.guides.gap, y: this.#configuration.renderer.guides.gap } : undefined)\n      this.grabber.attach(this.layers.rendering)\n    } catch (error) {\n      this.logger.error(\"initialize\", error)\n      this.layers.showMessageError(error as Error)\n      throw error\n    }\n    finally {\n      this.logger.debug(\"initialize\", \"finally\")\n      this.layers.hideLoader()\n      this.layers.updateState(true)\n    }\n  }\n\n  drawCurrentStroke(): void {\n    this.logger.debug(\"drawCurrentStroke\", { stroke: this.model.currentSymbol })\n    this.renderer.drawPendingStroke(this.model.currentSymbol)\n  }\n\n  async updateModelRendering(): Promise<Model> {\n    this.logger.info(\"updateModelRendering\")\n    this.renderer.drawModel(this.model)\n    const deferred = new DeferredPromise<Model>()\n    this.history.push(this.model)\n    if (this.#configuration.triggers.exportContent !== \"DEMAND\") {\n      clearTimeout(this.#exportTimer)\n      const currentModel = this.model.clone()\n      this.#exportTimer = setTimeout(async () => {\n        try {\n          currentModel.mergeExport(await this.recognizer.send(currentModel.symbols))\n          this.history.updateStack(currentModel)\n          if (this.model.modificationDate === currentModel.modificationDate) {\n            this.model.exports = currentModel.exports\n          }\n          deferred.resolve(this.model)\n        } catch (error) {\n          this.logger.error(\"updateModelRendering\", { error })\n          this.layers.showMessageError(error as Error)\n          this.event.emitError(error as Error)\n          deferred.reject(error as Error)\n        }\n      }, this.#configuration.triggers.exportContent === \"QUIET_PERIOD\" ? this.#configuration.triggers.exportContentDelay : 0)\n    } else {\n      deferred.resolve(this.model)\n    }\n    await deferred.promise\n    this.event.emitExported(this.model.exports as TExport)\n    this.logger.debug(\"updateModelRendering\", this.model.exports)\n    return deferred.promise\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<Model> {\n    try {\n      convertPartialStrokesToStrokes(strokes)\n        .forEach((stroke) => {\n          this.model.addStroke(stroke)\n        })\n      const newModel = await this.updateModelRendering()\n      Object.assign(this.#model, newModel)\n      this.event.emitImported(this.model.exports as TExport)\n      return this.model\n    } catch (error) {\n      this.layers.showMessageError(error as Error)\n      this.event.emitError(error as Error)\n      throw error as Error\n    }\n  }\n\n  async resize({ height, width }: { height?: number, width?: number } = {}): Promise<void> {\n    this.logger.info(\"resize\", { height, width })\n    const compStyles = window.getComputedStyle(this.layers.root)\n    this.model.height = height || Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.configuration.renderer.minHeight)\n    this.model.width = width || Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.configuration.renderer.minWidth)\n    this.renderer.resize(this.model)\n    this.logger.debug(\"resize\", { model: this.model })\n    this.event.emitExported(this.model.exports as TExport)\n  }\n\n  async undo(): Promise<void> {\n    this.logger.info(\"undo\")\n    this.#model = this.history.undo() as Model\n    this.renderer.drawModel(this.#model)\n    this.history.updateStack(this.#model)\n    this.event.emitExported(this.#model.exports as TExport)\n    this.logger.debug(\"undo\", this.#model)\n  }\n\n  async redo(): Promise<void> {\n    this.logger.info(\"redo\")\n    this.#model = this.history.redo() as Model\n    this.renderer.drawModel(this.#model)\n    this.history.updateStack(this.#model)\n    this.event.emitExported(this.#model.exports as TExport)\n    this.logger.debug(\"redo\", this.#model)\n  }\n\n  async clear(): Promise<void> {\n    this.logger.info(\"clear\")\n    this.model.clear()\n    this.history.push(this.model)\n    this.renderer.drawModel(this.model)\n    this.event.emitExported(this.model.exports as TExport)\n    this.event.emitCleared()\n    this.logger.debug(\"clear\", this.model)\n  }\n\n  async destroy(): Promise<void> {\n    this.logger.info(\"destroy\")\n    this.event.removeAllListeners()\n    this.grabber.detach()\n    this.layers.destroy()\n    this.renderer.destroy()\n    return Promise.resolve()\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { EditorType } from \"./AbstractEditor\"\nimport { InteractiveInkEditor, TInteractiveInkEditorOptions } from \"./InteractiveInkEditor\"\nimport { InkEditorDeprecated, TInkEditorDeprecatedOptions } from \"./InkEditorDeprecated\"\nimport { InteractiveInkSSREditor, TInteractiveInkSSREditorOptions } from \"./InteractiveInkSSREditor\"\nimport { InkEditor, TInkEditorOptions } from \"./InkEditor\"\n\n/**\n * @group Editor\n * @hideconstructor\n */\nexport class Editor\n{\n  protected static logger = LoggerManager.getLogger(LoggerCategory.EDITOR)\n  protected static instance: InteractiveInkEditor | InkEditorDeprecated | InteractiveInkSSREditor | InkEditor |undefined\n\n  static async load<T extends EditorType>(rootElement: HTMLElement, type: T, options: T extends \"INTERACTIVEINK\" ? TInteractiveInkEditorOptions : T extends \"INKV1\" ? TInkEditorDeprecatedOptions : TInteractiveInkSSREditorOptions extends \"INKV2\" ? TInkEditorOptions : TInteractiveInkSSREditorOptions):\n    Promise<T extends \"INTERACTIVEINK\" ? InteractiveInkEditor : T extends \"INKV1\" ? InkEditorDeprecated : InteractiveInkSSREditor extends \"INKV2\" ? InkEditor : InteractiveInkSSREditor>\n  {\n    Editor.logger.info(\"load\", { type, options })\n    if (!options) {\n        throw new Error(`Param 'options' missing`)\n    }\n    if (Editor.instance) {\n      await Editor.instance.destroy()\n    }\n\n    switch (type) {\n      case \"INTERACTIVEINK\":\n        Editor.instance = new InteractiveInkEditor(rootElement, options as TInteractiveInkEditorOptions)\n        break\n      case \"INKV1\":\n        Editor.instance = new InkEditorDeprecated(rootElement, options as TInkEditorDeprecatedOptions)\n        break\n      case \"INKV2\":\n        Editor.instance = new InkEditor(rootElement, options as TInkEditorOptions)\n        break;\n      // case \"INTERACTIVEINKSSR\":\n      default:\n        Editor.instance = new InteractiveInkSSREditor(rootElement, options as TInteractiveInkSSREditorOptions)\n        break\n    }\n\n    await Editor.instance.initialize()\n\n    return Editor.instance as T extends \"INTERACTIVEINK\" ? InteractiveInkEditor : T extends \"INKV1\" ? InkEditorDeprecated : InteractiveInkSSREditor extends \"INKV2\" ? InkEditor : InteractiveInkSSREditor\n  }\n\n  static getInstance(): InteractiveInkEditor | InkEditorDeprecated | InteractiveInkSSREditor | InkEditor | undefined\n  {\n    return Editor.instance\n  }\n\n}\n"],"names":["EditorTool","EditorWriteTool","SvgElementRole","ResizeDirection","SELECTION_MARGIN","DeferredPromise","promise","resolve","reject","isFullFilled","isPending","constructor","this","Promise","async","v","isValidNumber","x","isNaN","parseFloat","toString","isFinite","isBetween","val","min","max","computeAverage","arr","reduce","p","c","length","computeDistance","p1","p2","distance","Math","hypot","y","computeAngleAxeRadian","begin","end","atan2","createPointsOnSegment","spaceBetweenPoint","points","globalDistance","spaceWithP1","push","scalaire","v1","v2","computeNearestPointOnSegment","seg","vectP1P","vectP1P2","scalaireP1P_P1P2","scalaireP1P2_P1P2","t","isPointInsideBox","point","box","width","height","convertRadianToDegree","radian","PI","toFixed","convertDegreeToRadian","degree","computeRotatedPoint","center","dx","dy","cos","sin","computePointOnEllipse","radiusX","radiusY","phi","theta","cosPhi","sinPhi","M","abs","N","computeDistanceBetweenPointAndSegment","findIntersectionBetween2Segment","seg1","seg2","S1dx","S1dy","S2dx","S2dy","S1S2dx","S1S2dy","ua_t","ub_t","u_b","ua","ub","findIntersectBetweenSegmentAndCircle","r","result","a","pow","b","cc","deter","e","sqrt","u1","u2","computeAngleRadian","p1c","p2c","p1p2","acos","getClosestPoints","points1","points2","minDistance","Number","MAX_SAFE_INTEGER","forEach","_p1","_p2","d","getClosestPoint","closest","index","i","isPointInsidePolygon","inside","j","isVersionSuperiorOrEqual","source","target","sourceParts","split","targetParts","computeHmac","message","applicationKey","hmacKey","enc","TextEncoder","messageEncoded","encode","keyEncoded","key","crypto","subtle","importKey","name","hash","signature","sign","buffer","Uint8Array","Array","prototype","map","call","padStart","join","convertMillimeterToPixel","mm","convertPixelToMillimeter","px","convertBoundingBoxMillimeterToPixel","createUUID","dt","Date","now","replace","random","floor","mergeDeep","sources","isObject","item","isArray","shift","Object","assign","concat","isDeepEqual","object1","object2","objKeys1","keys","objKeys2","value1","value2","isObjects","object","getAvailableFontList","configuration","server","scheme","host","recognition","lang","serverConfig","response","fetch","json","sort","getAvailableLanguageList","computeLinksPointers","angle","radius","computeMiddlePointer","point1","point2","getApiInfos","ok","version","gitCommit","nativeVersion","LoggerLevel","LoggerCategory","Logger","category","level","debug","functionName","data","DEBUG","dataLog","from","console","info","INFO","warn","WARN","error","LoggerManager","static","Map","getLogger","loggerMap","has","set","ERROR","get","setLoggerLevel","config","lc","DefaultLoggerConfiguration","EDITOR","RECOGNIZER","GRABBER","RENDERER","EDITOR_EVENT","MODEL","SYMBOL","SMARTGUIDE","GESTURE","STYLE","HISTORY","TRANSFORMER","CONVERTER","WRITE","SELECTION","SVGDEBUG","MENU","EditorEventName","EditorEvent","EventTarget","logger","abortController","element","super","AbortController","removeAllListeners","abort","emit","type","evt","CustomEvent","bubbles","composed","detail","undefined","dispatchEvent","emitSessionOpened","sessionId","SESSION_OPENED","addSessionOpenedListener","callback","addEventListener","signal","emitLoaded","LOADED","addLoadedListener","emitNotif","notif","NOTIF","addNotifListener","emitError","err","addErrorListener","emitExported","exports","EXPORTED","addExportedListener","emitChanged","undoRedoContext","CHANGED","canClear","empty","addChangedListener","emitIdle","idle","IDLE","addIdleListener","emitCleared","CLEARED","addClearedListener","emitConverted","CONVERTED","addConvertedListener","emitImported","IMPORTED","addImportedListener","emitSelected","symbols","SELECTED","addSelectedListener","emitToolChanged","mode","TOOL_CHANGED","addToolChangedListener","emitUIpdated","UI_UPDATED","addUIpdatedListener","emitSynchronized","SYNCHRONIZED","addSynchronizedListener","emitGestured","gesture","GESTURED","addGesturedListener","ExportType","JIIXELementType","JIIXNodeKind","JIIXEdgeKind","EditorLayer","root","ui","rendering","onCloseModal","rootClassCss","classList","add","createLayerRender","createLayerUI","render","styleElement","document","createElement","appendChild","createTextNode","prepend","createLoader","loaderHTML","style","display","showLoader","loader","hideLoader","createMessageOverlay","overlay","closeMessageModal","modal","contains","hideMessageModal","text","innerText","remove","createMessageModal","closeBtn","bind","createMessage","showMessageInfo","setTimeout","timeout","showMessageError","createBusy","busy","createState","showState","state","hideState","updateState","destroy","lastChild","removeChild","AbstractEditor","layers","event","loggerConfiguration","rootElement","options","override","cssClass","editor","loggerConfig","loadInfo","Box","boundindBox","Error","createFromBoxes","boxes","createFromPoints","getCorners","getCenter","getSides","vertices","isContained","wrapper","containsPoint","child","overlaps","box1","box2","xMin","xMid","xMax","yMin","yMid","yMax","corners","snapPoints","boundaries","DefaultStyle","color","DefaultPenStyle","DefaultTheme","ink","module","o","n","l","m","defineProperty","configurable","enumerable","__esModule","default","hasOwnProperty","s","TypeError","value","Symbol","iterator","toJSON","u","trim","indexOf","substring","_trimSemiColon","toCSS","slice","parser","JsonCSS","StyleHelper","themeToCSS","themeToJSON","theme","penStyleToCSS","penStyle","css","penStyleToJSON","penStyleString","stringToJSON","JSONToString","entries","k","StyleManager","penStyleClasses","currentPenStyle","setTheme","setPenStyleClasses","setPenStyle","structuredClone","penStyleClass","DecoratorKind","SymbolType","EdgeKind","EdgeDecoration","ShapeKind","RecognizedKind","IIDecorator","id","kind","clone","MatrixTransform","xx","yx","xy","yy","tx","ty","identity","applyToPoint","mat","rotation","hypotAc","hypotBd","toCssString","matrix","invert","denom","multiply","translate","rotate","cosAngle","round","sinAngle","scale","IISymbolBase","creationTime","modificationDate","selected","deleting","transform","opacity","edges","isClosed","isIntersected","some","edge","OIEdgeBase","startDecoration","endDecoration","Edge","bounds","bb","e1","e2","isValidPoint","IIEdgeArc","startAngle","sweepAngle","_vertices","Arc","verticesId","computedVertices","nbVertices","angleStep","endAngle","at","create","partial","arc","IIEdgeLine","start","Line","line","IIEdgePolyLine","PolyEdge","polyline","OIShapeBase","Shape","IIShapeCircle","_bounds","Circle","computedBondingBox","firstPoint","perimeter","nbPoint","rad","boundingBox","createBetweenPoints","origin","updateBetweenPoints","circle","IIShapeEllipse","orientation","Ellipse","ellipse","IIShapePolygon","Polygon","polygon","createTriangleBetweenPoints","updateTriangleBetweenPoints","poly","createParallelogramBetweenPoints","updateParallelogramBetweenPoints","createRectangleBetweenPoints","updateRectangleBetweenPoints","createRhombusBetweenPoints","updateRhombusBetweenPoints","IIStroke","pointerType","decorators","pointers","Stroke","strokeToSplit","before","after","substract","stroke","partStroke","lastPointBeforeStroke","closestLastPointBeforeStroke","newStrokes","strokeAfter","firstPointAfterStroke","closestFirstPointStrokeAfter","computePressure","ratio","pressure","filterPointByAcquisitionDelta","lastPointer","delta","addPointer","pointer","formatToSend","errors","flag","pp","pIndex","convertPartialStrokesToOIStrokes","strokes","IIRecognizedBase","Recognized","flatMap","updateChildrenStyle","containsStroke","strokeId","removeStrokes","strokeIds","strokeRemoved","filter","includes","IIRecognizedArc","JSON","parse","stringify","ws","IIRecognizedCircle","IIRecognizedEllipse","IIRecognizedLine","IIRecognizedPolyLine","IIRecognizedPolygon","Polygone","IIRecognizedText","baseline","xHeight","label","lines","Text","IISymbolGroup","children","Group","chars","containsSymbol","containsOnlyStroke","extractText","extractStrokes","removeChilds","symbolIds","group","every","texts","symbolId","symbol","s1","IIText","offsetY","getCharCorners","char","boxBox","updateChildrenFont","fontSize","fontWeight","getCharsOverlaps","charCorners","fill","IIEraser","Eraser","convertPartialStrokesToStrokes","ji","Model","positions","currentSymbol","converts","rowHeight","creationDate","lastSentPosition","lastReceivedPosition","getStrokeFromPoint","_strokeList","strokePointer","addPoint","addStroke","updateStroke","updatedStroke","strokeIndex","findIndex","splice","removeStroke","removeStrokesFromPoint","strokeToRemove","extractUnsentStrokes","initCurrentStroke","dpi","pxWidth","appendToCurrentStroke","endCurrentStroke","updatePositionSent","position","updatePositionReceived","mergeExport","mergeConvert","clonedModel","clear","IIModel","symbolsSelected","symbolsToDelete","selectSymbol","find","unselectSymbol","resetSelection","getRootSymbol","getSymbolRowIndex","getSymbolsByRowOrdered","rows","rowIndex","row","s2","r1","r2","roundToLineGuide","isSymbolAbove","isSymbolInRow","isSymbolBelow","getFirstSymbol","previous","current","getLastSymbol","addSymbol","updateSymbol","updatedSymbol","sIndex","replaceSymbol","changeOrderSymbol","fromIndex","toIndex","sym","removeSymbol","symbolIndex","extractDifferenceSymbols","model","added","removed","DefaultServerHTTPConfiguration","DefaultServerWebsocketConfiguration","websocket","pingEnabled","pingDelay","maxPingLostCount","autoReconnect","maxRetryCount","fileChunkSize","DefaultEraserConfiguration","DefaultDiagramConvertConfiguration","types","DefaultDiagramConfiguration","convert","eraser","mimeTypes","DefaultJiixConfiguration","ids","words","DefaultExportConfiguration","jiix","DefaultMarginConfiguration","top","left","right","bottom","DefaultSolverConfiguration","enable","DefaultMathUndoRedoConfiguration","DefaultMathConfiguration","solver","margin","DefaultRawContentConfiguration","classification","DefaultDebugConfiguration","DefaultRecognitionRendererConfiguration","DefaultTextGuidesConfiguration","DefaultTextConfiguration","guides","DefaultTextGuidesConfigurationV2","DefaultTexConfigurationV2","DefaultConvertionConfiguration","force","DefaultShapeConvertConfiguration","DefaultShapeBeautificationConfiguration","DefaultShapeConfiguration","beautification","RecognizerEventName","RecognizerError","RecognizerEvent","emitStartInitialization","START_INITIALIZATION","addStartInitialization","emitEndtInitialization","END_INITIALIZATION","addEndInitialization","emitContentChanged","CONTENT_CHANGED","addContentChangedListener","emitConnectionClose","code","CONNECTION_CLOSE","addConnectionCloseListener","emitSVGPatch","svgPatch","SVG_PATCH","addSVGPatchListener","DefaulRecognitionHTTPV1ConfigurationConfiguration","export","math","diagram","renderer","DefaultRecognizerHTTPV1Configuration","RecognizerHTTPV1Configuration","Set","RecognizerHTTPV1","url","postConfig","buildData","strokeGroupByPenStyle","groupIndex","sg","isPenStyleEqual","ps1","ps2","strokeGroupsToSend","newGroup","contentType","charAt","toUpperCase","toLowerCase","xDPI","yDPI","strokeGroups","post","mimeType","headers","Headers","append","hmac","reqInit","method","body","request","Request","blob","catch","tryFetch","then","res","UNKNOW","WRONG_CREDENTIALS","CANT_ESTABLISH","getMimeTypes","requestedMimeTypes","conversionState","myModel","dataToConcert","promises","mt","all","String","mimeTypesRequiringExport","resize","DefaultRecognizerHTTPV2RecognitionConfiguration","shape","DefaultRecognizerHTTPV2Configuration","RecognizerHTTPV2Configuration","RecognizerHTTPV2","formatStrokes","scaleX","scaleY","send","TRecognizerWebSocketMessageType","DefaultRecognitionWebSocketConfiguration","gestures","ignoreGestureStrokes","DefaultRecognizerWebSocketConfiguration","RecognizerWebSocketConfiguration","RecognizerWebSocket","socket","pingWorker","pingCount","reconnectionCount","currentPartId","currentErrorCode","addStrokeDeferred","contextlessGestureDeferred","transformStrokeDeferred","eraseStrokeDeferred","replaceStrokeDeferred","exportDeferredMap","closeDeferred","waitForIdleDeferred","undoDeferred","redoDeferred","clearDeferred","initialized","readyState","OPEN","rejectDeferredPending","values","resetAllDeferred","clearSocketListener","removeEventListener","openCallback","closeCallback","messageCallback","reason","GOING_AWAY","PROTOCOL_ERROR","UNSUPPORTED_DATA","ABNORMAL_CLOSURE","INVALID_FRAME_PAYLOAD","POLICY_VIOLATION","MESSAGE_TOO_BIG","INTERNAL_ERROR","SERVICE_RESTART","TRY_AGAIN","BAD_GATEWAY","TLS_HANDSHAKE","terminate","manageHMACChallenge","hmacChallengeMessage","hmacChallenge","initPing","PingWorker","postMessage","onmessage","close","manageAuthenticated","pixelTomm","iinkSessionId","manageSessionDescriptionMessage","sessionDescriptionMessage","manageNewPartMessage","newPartMessage","managePartChangeMessage","partChangeMessage","partId","manageContentChangedMessage","contentChangeMessage","canRedo","canUndo","manageExportMessage","exportMessage","manageWaitForIdle","manageErrorMessage","errorMessage","NO_ACTIVITY","TOO_OLD","NO_SESSION_FOUND","manageGestureDetected","gestureMessage","manageContextlessGesture","websocketMessage","Pong","HMAC_Challenge","Authenticated","SessionDescription","NewPart","PartChanged","ContentChanged","Exported","GestureDetected","ContextlessGesture","Idle","newSession","init","WebSocket","CONNECTING","CLOSING","CLOSED","waitForIdle","buildAddStrokesMessage","processGestures","addStrokes","buildReplaceStrokesMessage","oldStrokeIds","replaceStrokes","buildTransformTranslateMessage","transformationType","transformTranslate","buildTransformRotateMessage","x0","y0","transformRotate","buildTransformScaleMessage","transformScale","buildTransformMatrixMessage","transformMatrix","buildEraseStrokesMessage","eraseStrokes","recognizeGesture","buildUndoRedoChanges","changes","changesMessages","erased","replaced","oldStrokes","tr","undo","actions","redo","DefaultRecognizerWebSocketSSRRecognitionConfiguration","DefaultRecognizerWebSocketSSRConfiguration","RecognizerWebSocketSSRConfiguration","RecognizerWebSocketSSR","viewSizeHeight","viewSizeWidth","connected","ackDeferred","exportDeferred","convertDeferred","importDeferred","resizeDeferred","importPointEventsDeferred","toLocaleLowerCase","infinitePing","params","xDpi","yDpi","manageAckMessage","manageContentPackageDescriptionMessage","manageContentChangeMessage","context","stackIndex","undoStackIndex","possibleUndoCount","manageSVGPatchMessage","svgPatchMessage","styleClasses","localModel","import","chunkSize","importFileId","readBlob","fileReader","FileReader","onloadend","ev","onerror","readAsText","importFileMessage","size","blobPart","fileChuckMessage","lastChunk","importPointEvents","events","myExportConverted","undoExports","redoExports","clearExports","CanvasRendererShape","table","returnedAngle","drawEllipseArc","context2D","shapeEllipse","centerPoint","maxRadius","minRadius","z1","z2","z3","z4","boundariesPoints","save","beginPath","alpha","cosAlpha","sinAlpha","moveTo","lineTo","restore","drawLine","drawArrowHead","headPoint","beta","fillStyle","strokeStyle","drawShapeEllipse","beginDecoration","beginTangentAngle","endTangentAngle","drawShapeLine","shapeLine","lastPoint","draw","lineWidth","CanvasRendererStroke","renderArc","context2d","renderLine","linkPoints1","linkPoints2","renderFinal","linkPoints","newAngle","renderQuadratic","ctrl","linkPoints3","quadraticCurveTo","NUMBER_POINTS","NUMBER_QUADRATICS","secondPoint","beginLine","endLine","beginFinal","endFinal","closePath","CanvasRendererText","string","textLine","drawUnderline","textUnderline","underline","topLeftPoint","firstCharacter","lastCharacter","drawText","font","textHeight","textAlign","justificationType","textBaseline","fillText","drawTextLine","underlineList","CanvasRenderer","strokeRenderer","shapeRenderer","textRenderer","createCanvas","canvas","resizeContent","pixelRatio","window","devicePixelRatio","renderingCanvas","capturingCanvas","domElement","parentNode","minWidth","clientWidth","minHeight","clientHeight","getContext","drawSymbol","guide","setAttribute","backgroundSize","parent","renderingCanvasContext","capturingCanvasContext","drawModel","clearRect","drawPendingStroke","innerHTML","IISVGRendererConst","arrowHeadStartMarker","arrowHeadEndMaker","selectionFilterId","removalFilterId","crossMarker","noSelection","XMLNS","SVGBuilder","createLayer","attrs","svgEl","createElementNS","createFilter","createDefs","createMarker","marker","createComponentTransfert","createDropShadow","deviation","shadow","createTransfertFunctionTable","feFunc","createGroup","groupEl","createLine","lineEl","createCircle","circleEl","createPath","pathEl","createPolygon","polygonEl","createRect","rectEl","createTSpan","tSpanEl","textContent","createForeignObject","node","objEl","createText","textEl","IISVGRendererEdgeUtil","getLinePath","getPolyLinePath","getArcPath","getSVGPath","getSVGElement","pathAttrs","Arrow","IISVGRendererEraserUtil","startPath","strokeWith","acc","shadowBlur","IISVGRendererDecoratorUtil","decorator","Highlight","Surround","Strikethrough","Underline","IISVGRendererShapeUtil","getPolygonePath","getCirclePath","getEllipsePath","IISVGRendererStrokeUtil","getFinalPath","parts","getQuadraticPath","central","STROKE_LENGTH","STROKE_WIDTH","NB_QUADRATICS","beforeLastPoint","strokeGroup","strokeAttrs","deco","IISVGRendererTextUtil","textGroup","textElement","IISVGRendererRecognizedUtil","recognizedSymbol","IISVGRendererGroupUtil","getChildElement","symbolGroup","IISVGRenderer","groupGuidesId","layer","definitionGroup","verticalGuides","horizontalGuides","initLayer","setProperty","createSVGTools","defs","REFX","SIZE","REFY","arrowHeadMarkerAttrs","markerWidth","markerHeight","refX","refY","arrowHeadStart","orient","arrowHeadEnd","crossMarkerAttrs","viewBox","cross","createFilters","filtersGroup","removalFilter","filterUnits","bfeComponentTransfer","bfeFuncA","selectionFilter","drawGuides","getAttribute","offSet","gap","subOffSet","role","Guide","guidesGroup","svgLine","subY","subX","svgPoint","removeGuides","querySelector","oncontextmenu","buildElementFromSymbol","prependElement","el","symbolToMove","moveEl","insertAdjacentElement","nextElementSibling","previousElementSibling","appendElement","removeElement","oldStroke","oldNode","replaceWith","elements","drawCircle","drawRect","drawConnectionBetweenBox","attrsLine","getElementById","getElements","tagName","query","querySelectorAll","clearElements","firstChild","SVGStroker","buildSVGPath","drawStroke","svgElement","svgPathElement","svgPath","InteractiveInkSSRSVGRenderer","stroker","replaceAll","layerName","update","oldLayer","insertAdjacentHTML","svg","pendingStrokesGroup","replaceElement","elementToRemove","parentSelector","parentId","insertBefore","refId","selector","removeAttribute","updateLayer","updatesLayer","updates","clearPendingStroke","pendingStrokeGroup","clearErasingStrokes","erasingStroke","rect","getBoundingClientRect","svgList","DefaultGuidesConfiguration","DefaultRendererConfiguration","DefaultIIRendererConfiguration","IIConversionManager","fontStyle","computeFontSize","buildChar","grid","weight","buildText","word","charSymbols","charFontSize","charStrokes","items","hightlight","strikethrough","surround","convertText","onlyText","jiixWords","jiixChars","textFontSize","isNewLine","currentY","leftX","currentX","texter","getSpaceWidth","wordStrokes","wordSymbol","nbRow","setBounds","buildCircle","cx","cy","buildEllipse","rx","ry","buildRectangle","rectangle","buildPolygon","buildRhombus","buildTriangle","buildParallelogram","convertNode","associatedStroke","uniqStrokes","Rectangle","Triangle","Parallelogram","Rhombus","buildLine","x1","y1","x2","y2","p1Decoration","p2Decoration","buildPolyEdge","unshift","buildArc","convertEdge","apply","removeSelectedGroup","strokesToConvert","extractStrokesFromSymbols","conversionResults","conversion","addSymbols","cs","removeSymbols","history","IIResizeManager","interactElementsGroup","direction","transformOrigin","keepRatio","applyToStroke","applyToShape","applyToEdge","applyOnText","updateBounds","applyOnGroup","applyToSymbol","applyOnRecognizedSymbol","setTransformOrigin","originX","originY","scaleElement","sx","sy","InteractElementsGroup","localPoint","horizontalResize","verticalResize","snaps","snapResize","deltaX","deltaY","continue","clearSnapToElementLines","oldSymbols","strokesFromSymbols","recognizer","svgDebugger","IIRotationManager","angleRad","strokeText","rotateElement","angleDegree","snapRotation","DefaultListenerConfiguration","capture","passive","DefaultGrabberConfiguration","listenerOptions","xyFloatPrecision","timestampFloatPrecision","delayLongTouch","PointerEventGrabber","layerCapture","capturing","prevent","preventDefault","onPointerDown","onPointerMove","onPointerUp","onContextMenu","roundFloat","oneFloat","requestedFloatPrecision","floatPrecision","extractPointer","clientX","clientY","changedTouches","clientLeft","scrollLeft","clientTop","scrollTop","getPointerInfos","isPrimary","button","buttons","pointerDownHandler","pointerInfo","pointerMoveHandler","pointerUpHandler","pointerOutHandler","contextMenuHandler","stopPointerEvent","attach","detach","removeProperty","IISelectionManager","grabber","selectingId","startSelectionPoint","endSelectionPoint","selectedGroup","rotator","translator","resizer","selectionBox","drawSelectingRect","clearSelectingRect","getPoint","createTranslateRect","Translate","boxWithMarge","translateEl","handler","stopPropagation","endHandler","cursor","resetSelectedGroup","hideInteractElements","createRotateGroup","Rotate","attrs1","attrs2","attrs3","createResizeGroup","Resize","P_NW","P_NE","P_SE","P_SW","bindEl","def","lineResize","cornerResize","createInteractElementsGroup","symbolElementMap","surroundGroup","SURROUND_ATTRS","createEdgeResizeGroup","pointIndex","pointEl","createInteractEdgeGroup","drawSelectedGroup","groupBox","getBBox","menu","show","hide","updatedSymbols","found","currentEl","symbolTypesAllowed","parentElement","unselectAll","updateLayerUI","IITextManager","drawSymbolHidden","setCharsBounds","textGroupEl","getNumberOfChars","ext","getExtentOfChar","getElementBoundingBox","markers","clipped","getBoundingBox","charSymbol","textSymbol","moveTextAfter","textsAfter","IITranslateManager","addToHistory","translateElement","nudge","snapTranslate","IIWriteManager","tool","Pencil","detectGesture","currentSymbolOrigin","wt","gestureManager","needContextLessGesture","strokeBoundsWithMargin","getSymbolsBounds","createCurrentSymbol","DoubleArrow","updateCurrentSymbol","updateCurrentSymbolShape","updateCurrentSymbolEdge","localPointer","interactWithBackend","localStroke","gestureFromContextLess","getGestureFromContextLess","pop","localSymbol","IIEraseManager","currentEraser","lastSeg","IIDebugSVGManager","snapPointsVisibility","verticesVisibility","boundingBoxVisibility","recognitionBoxVisibility","recognitionItemBoxVisibility","debugSnapPoints","debugVertices","showBoundingBox","hideBoundingBox","debugRecognitionBox","debugRecognitionItemBox","showSnapPoints","hideSnapPoints","showVertices","hideVertices","drawBoundingBox","symbolAttrs","charAttrs","symEl","ca","sa","debugBoundingBox","drawRecognitionBox","infos","COLOR","recognitionGroup","infosGroup","infoX","infoY","TEXT_HEIGHT","w","infosGroupBox","rectBox","rectTranslate","newRectBox","showRecognitionBox","hideProperties","candidates","inf","clearRecognitionBox","drawRecognitionItemBox","recognitionItemGroup","charX","charY","charsGroup","charsGroupBox","showRecognitionItemBox","clearRecognitionItemBox","IIMoveManager","getInitialHistoryContext","HistoryManager","stack","updateContext","maxStackSize","updateStack","previousModel","nextModel","IIHistoryManager","isChangesEmpty","updated","order","ungroup","stackIdx","reverseChanges","reversedChanges","newSymbols","currentStackItem","previousStackItem","nextStackItem","DefaultHistoryConfiguration","IIMenu","thicknessList","fontSizeList","fontWeightList","colors","createWrapCollapsible","title","head","btn","ArrowDown","content","toggle","createMenuItemBoolean","labelEl","checkbox","disabled","initValue","indeterminate","checked","createMenuItemSelect","select","opt","Option","createMenuItemButton","icon","createMenuItemButtonList","createMenuItemColorList","createColorList","list","colorEl","createMenuItem","SurroundAction","StrikeThroughAction","InsertAction","DefaultGestureConfiguration","Select","strikeThrough","Draw","insert","LineBreak","IIGestureManager","insertAction","surroundAction","strikeThroughAction","gestureAction","strokeSpaceWidth","applySurroundGesture","gestureStroke","symWithDec","highlight","computeScratchOnStrokes","partPointersToRemove","subStrokes","ss","fullStrokeId","strokePartToErase","computeScratchOnText","charsToRemove","cIndex","c1","computeScratchOnSymbol","strokesScratchedResult","childrenNotTouch","results","strokesToConserve","symbolsGroup","textScratchedResult","applyScratch","symbolsToUpdate","symbolsToErase","symbolsToReplace","updateSymbols","replaceSymbols","applyJoinGesture","symbolsAbove","symbolsRow","symbolsBeforeGestureInRow","symbolsOnGestureInRow","symbolsAfterGestureInRow","symbolsBelow","symbolToJoin","childBefore","childAfter","lastSymbBefore","firstSymbolAfter","translateX","lastSymbBeforeClone","firstSymbolAfterClone","symbolsToGroup","strokeTexts","d1","rest","lastSymbolBeforeGesture","firstSymbolAfterGesture","symbolInNextRow","symbolsAfterNextRow","lastSymbolAbove","createStrokesFromGestureSubStroke","strokeOrigin","subStroke","computeSplitStroke","computeSplitStrokeInGroup","newGroups","symbolsBefore","symbolsAfter","strokeIdToSplit","gs","computeChangesOnSplitStroke","symbolToSplit","strokesToSplit","strokesBefore","strokesAfter","computeChangesOnSplitGroup","groupToSplit","groupSymbolsBefore","groupsSymbolsAfter","groupBefore","grouAfter","computeChangesOnSplitStrokeText","strokeTextToSplit","strokeTextBefore","strokeTextAfter","computeChangesOnSplitText","textToSplit","charsBefore","charsAfter","newTexts","textBefore","pointAfter","textAfter","applyInsertGesture","Insert","applyUnderlineGesture","applyStrikeThroughGesture","Erase","updateSymbolsStyle","synchronizeStrokesWithJIIX","gestureType","gestureStrokeId","strokeAfterIds","strokeBeforeIds","symbolsToUnderline","symbolsToStrikeThrough","IIMenuSub","param","trigger","menuTitle","menuTitleElement","subMenu","open","unwrap","wrap","IIMenuAction","menuLanguage","menuClear","menuUndo","menuRedo","menuConvert","guideGaps","isMobile","createMenuClear","createMenuLanguage","triggerBtn","languages","changeLanguage","createMenuUndo","createMenuRedo","createMenuConvert","createMenuGesture","subMenuWrapper","surroundActionValues","strikeThroughActionValues","splitActionValues","writer","Write","createMenuGuide","renderingConfiguration","createMenuSnap","createMenuDebug","menuItems","createMenuExport","downloadAsJson","downloadAsSVG","downloadAsPNG","readFileAsText","file","reader","onload","createMenuImport","importInput","accept","multiple","importBtn","files","fileString","createSymbols","closeAllSubMenu","action","menuTrigger","visibility","IIMenuTool","writeBtn","menuSelect","menuMove","menuErase","menuShape","subMenuShape","menuEdge","subMenuEdge","createMenuWrite","createMenuMove","Move","createMenuSelect","createMenuErase","createShapeSubMenu","subMenuContent","nextSibling","createMenuShape","rectangleIcon","triangle","rhombus","createEdgeSubMenu","square","createMenuEdge","lineIcon","arrow","doubleArrow","IIMenuStyle","menuColorStroke","menuColorFill","menuThickness","menuFontSize","menuFontWeight","menuStrokeOpacity","writeShape","createMenuStroke","symbolsStyles","st","menuColorStrokeDef","menuColor","createMenuColorFill","createMenuThickness","createMenuFontSize","textSymbols","updateTextFontStyle","createMenuFontWeight","createMenuOpacity","currentOpacity","input","output","shapeSelected","IIMenuContext","editMenu","editInput","editSaveBtn","reorderMenu","decoratorMenu","menuExport","duplicateBtn","groupBtn","convertBtn","removeBtn","haveSymbolsSelected","symbolsDecorable","showDecorator","createMenuEdit","firstChar","createMenuDuplicate","symbolsToDuplicate","updateDeepIdInGroup","gr","duplicatedSymbols","createMenuGroup","ungroupSymbol","groupSymbols","convertSymbols","createMenuRemove","createMenuReorder","changeOrderSymbols","reverse","createDecoratorSubMenu","labelEL","decoIndex","_c","createMenuDecorator","createMenuSelectAll","selectAll","updateDecoratorSubMenu","decos","btnToActivate","updateGroupMenu","DefaultMenuConfiguration","IIMenuManager","custom","CustomMenuStyle","CustomMenuTool","CustomMenuAction","DefaultSnapConfiguration","SnapConfiguration","IISnapManager","selectionSnapPoints","otherSnapPoints","selectSymbolIds","snapThreshold","getNearestVerticalGuide","prev","curr","getNearestHorizontalGuide","getGuidePointToSnap","drawSnapToElementLines","getSnapLinesInfos","sourcePoints","targetPoints","Infinity","verticales","horizontales","horizontal","vertical","snapLines","snapLinesInfos","selectionSymbolPoints","lastDeltaX","lastDeltaY","gridPoint","DefaultInteractiveInkEditorConfiguration","snap","InteractiveInkEditorConfiguration","InteractiveInkEditor","layerUITimer","recognizeStrokeTimer","converter","move","CustomRecognizer","manageError","onContentChanged","updateLayerState","initializationPromise","setCursorStyle","clearTimeout","initialize","compStyles","getComputedStyle","parseInt","buildShape","partialShape","buildEdge","partialEdge","buildRecognized","partialSymbol","buildGroup","partialGroup","buildStroke","buildStrokeText","buildSymbol","createSymbol","partialSymbols","updateTextBounds","symList","lastWidth","textIds","symbolsTranslated","textChildren","symToReplace","getSymbolsAndStrokesAssociatedFromJIIXStrokeItems","strokeIdsUsed","symIdx","jiixAssociation","symAsso","recognizedText","wd","Node","symbolRecognized","groupStrokeIds","symbolsToRemove","strokesIds","partialStrokes","triggerDownload","fileName","urlData","downloadAnchorNode","click","buildBlobFromSymbols","svgNode","cloneNode","svgString","XMLSerializer","serializeToString","Blob","getExportName","extension","year","month","day","hour","minute","second","toLocaleDateString","navigator","language","selection","svgBlob","URL","createObjectURL","image","Image","src","drawImage","revokeObjectURL","imgURI","toDataURL","symbolsToExport","dataStr","encodeURIComponent","extractTextsFromSymbols","extractBackendChanges","backendChanges","modifications","actionsToBackend","DefaultEditorTriggerConfiguration","exportContent","exportContentDelay","resizeTriggerDelay","DefaultInkEditorDeprecatedConfiguration","triggers","InkEditorDeprecatedConfiguration","InkEditorDeprecated","resizeTimer","exportTimer","styleManager","CustomGrabber","drawCurrentStroke","updateModelRendering","deferred","currentModel","newModel","deferredResize","resizeModel","InteractiveInkSSRSmartGuide","uuid","smartGuideElement","wrapperElement","prompterContainerElement","prompterTextElement","ellipsisElement","tagElement","candidatesElement","menuElement","convertElement","copyElement","deleteElement","isMenuOpen","lastWord","wordToChange","createRootElement","createWrapperElement","createPrompterContainerElement","createPrompterTextElement","createEllipsisElement","createTagElement","createCandidatesElement","createMoreMenuElement","createConvertElement","createCopyElement","createDeleteElement","addListeners","showCandidates","wordId","hideCandidates","openMenu","closeMenu","onClickEllipsis","onClickConvert","createTextAreaElement","isRTL","documentElement","textArea","yPosition","pageYOffset","selectText","userAgent","match","range","createRange","selectNodeContents","getSelection","removeAllRanges","addRange","setSelectionRange","onClickCopy","fakeEl","execCommand","onClickDelete","onClickCandidate","candidate","JIIX","onClickPrompter","onClickOutSide","removeListeners","marginLeft","marginRight","createWordSpan","span","myFragment","createDocumentFragment","offsetLeft","populatePrompter","DefaultInteractiveInkSSREditorConfiguration","smartGuide","InteractiveInkSSREditorConfiguration","InteractiveInkSSREditor","penClass","syncStyle","onExport","jjix","synchronizeModelWithBackend","onSVGPatch","initializeSmartGuide","onContetChaned","onError","unsentStrokes","blobToImport","strokesToImport","str","exportPoints","DefaultInkEditorConfiguration","InkEditorConfiguration","InkEditor","Editor","load","instance","getInstance"],"mappings":"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","x_google_ignoreList":[24]}